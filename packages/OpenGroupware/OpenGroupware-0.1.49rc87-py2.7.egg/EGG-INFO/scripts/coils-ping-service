#!/usr/bin/python
# Copyright (c) 2010, 2012, 2013
#  Adam Tauno Williams <awilliam@whitemice.org>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#

from coils.core  import *
import getopt, sys, os, time
from pprint import pprint

def usage():
    print """
    Ping an OpenGroupware Coils component on the message bus.
    --service   The name of the component to ping
                  Default: coils.administrator
    --count     The number of times to ping the component
    --timeout   Timeout to wait for response
    --help      Display this message
    """
    return

def main(argv):

    def callback(uuid, source, target, data):
        print( '  Got response to ping request {0}'.format( uuid ) )
        return True

    timeout = 10
    count = 1
    service_name = 'coils.administrator'

    # Process command line arguements
    if (len(argv) == 0):
        usage()
        sys.exit(2)
    try:
        opts, args = getopt.getopt(argv,
                                   "h:s:t:c:",
                                   ["help", "service=", "timeout=", "count="])
    except getopt.GetoptError, e:
        print e
        usage()
        sys.exit(2)
    for opt, arg in opts:
        if opt in ("-h", "--help"):
            usage()
            sys.exit(0)
        elif (opt in ('-s', '--service')):
            service_name = arg
        elif (opt in ('-t', '--timeout')):
            timeout = int(arg)
        elif (opt in ('-c', '--count')):
            count = int(arg)

    # Initialize COILs
    initialize_COILS({'log_file': '{0}/coils.log'.format(os.getenv('HOME'))})
    broker = Broker()
    broker.subscribe('ping.{0}'.format(os.getpid()), None)
    ctx = AnonymousContext(broker=broker)
    print ( 'Pinging "{0}"'.format( service_name ) )

    start = time.time( )
    cut_out = time.time( ) + timeout
    while count > 0:
        guid = ctx.send( None, '{0}/__ping'.format( service_name ), { }, callback=callback )
        print('  Sent ping request {0}: {1}'.format( count, guid ) )
        count += -1
        ctx.wait( timeout=0.1 )
    pending = True
    while (time.time( ) < cut_out):
        pending = ctx.wait( timeout=( cut_out - time.time( ) ) )
        if pending:
            pass
        else:
            ctx.close( )
            broker.close( )
            sys.exit( 1 )
    else:
        end = time.time()
        print ( 'No responses pending in {0} seconds'.format( end - start ) )
        ctx.close()
        broker.close()
        sys.exit(0)

if __name__ == "__main__":
    main(sys.argv[1:])
