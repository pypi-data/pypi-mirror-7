#!/usr/bin/python2.6
#
# Copyright (c) 2012
#  Adam Tauno Williams <awilliam@whitemice.org>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#

import getopt, sys, os, time
from coils.foundation    import SQLConnectionFactory
from coils.core          import *

def usage():
    print """
Test the operation of a DSA connection defined via OIELDAPSources.

    --name=   The "name" of the DSA connection.
    --table=   An SQL table to query with the connection.
    
    All parameters are required.
    """
    return

def main(argv):

    # Process command line arguements
    if (len(argv) == 0):
        usage()
        sys.exit(2)
    try:
        opts, args = getopt.getopt(argv,
                                   "h:n:f:b:",
                                   ["help", "name=", "table=" ])
    except getopt.GetoptError, e:
        print e
        usage()
        sys.exit(2)
    for opt, arg in opts:
        if opt in ("-h", "--help"):
            usage()
            sys.exit(0)
        elif (opt in ('-n', '--name')):
            source_name = arg
        elif (opt in ('-t', '--table')):
            table_name = arg

    # Initialize COILs
    initialize_COILS( { 'log_file': '{0}/coils.log'.format( os.getenv( 'HOME' ) ) } ) 

    sql = SQLConnectionFactory.Connect( source_name )
    if not sql:
        print( 'Unable to marshal SQL datasource named "{0}"'.format( source_name ) )
        sys.exit( 1 )
    print( 'Connected to SQL "{0}"'.format( source_name ) )
    print( '  Select Table: "{0}"'.format( table_name ) )
    cursor = sql.cursor( )
    cursor.execute( 'SELECT COUNT(*) FROM {0};'.format( table_name ) )
    cursor.close( )
    sql.close( )

if __name__ == "__main__":
    main(sys.argv[1:])
