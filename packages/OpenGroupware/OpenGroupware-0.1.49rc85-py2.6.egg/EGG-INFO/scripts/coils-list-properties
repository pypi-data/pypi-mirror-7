#!/usr/bin/python2.6
#
# Copyright (c) 2010 Adam Tauno Williams <awilliam@whitemice.org>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#

# TODO: Add usage information

from coils.core  import *
import getopt, sys, os

def usage():
    print """

    """
    return

def main(argv):

    def callback(uuid, source, target, data):
        print 'callback'
        import pprint
        pprint.pprint(data)
        return True


    try:
        ctx, params = initialize_tool('list-properties', argv, arguments=('p:', ['processId=']))
    except getopt.GetoptError, e:
        print 'unable to initialize OpenGroupware Coils subsystem'
        print e
        sys.exit(2)

    pid = params.get('--processId', None)
    oid = params.get('--objectId', None)
    if pid:
        uuid = ctx.run_command('process::get-properties', callback=callback, id=int(pid))
        print uuid
    elif oid:
        print 'requesting object properties'
    else:
        print 'neither object id or process id specified'

    ctx.wait(timeout=5000)
    ctx.close()


if __name__ == "__main__":
    main(sys.argv[1:])
