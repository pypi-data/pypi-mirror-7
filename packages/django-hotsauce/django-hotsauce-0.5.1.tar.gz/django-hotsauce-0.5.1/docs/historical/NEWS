
NEWS
====

01/02/2009
----------

New packages:

- 'restapp' is a new wsgi application which provide a minimal
handler (HTMLPublisher) for publishing reStructuredText documents.

- 'wsgiapp' has been decoupled from the 'notmm' library. It is now
a fully stand-alone app.

- 'notmm.datastore' provides a simple data storage API, and yet currently
support thread-local stores. 

- 'notmm.utils.test' is a module for creating functional testing programs 
on top of unittest. It provides a 'TestCollection' class for easy
configuration access using plain-text files.

27/09/2008
----------

Released 0.2.10. I hope you like it! :0)

It surely contains a few bugs, and still a lots of unpolished parts. 
But what can I do; It's not possible to produce something perfect, 
so here's my best shot until the next version! 

So far, a lot of things changed since 0.2.9. In particular,
we now have the excellent Doxygen application in use for generating
high-quality documentation. 

I also wanted to make this release useful for integrating Elixir 
and SQLAlchemy in WSGI-based applications.

22/09/2008
----------

I've decided to remove support for the `nose` framework, in
hope of finding a flexible solution for Test-Driven Development
with the overlooked `unittest` package. The `testsuite.TestCollection`
class provides just that, and essentially replace `nose` without
modifying things sporadically.

So, it seems I've unwisely adopted non-standard packages when 
the standard libraries provides already well-designed and flexible 
solutions. I should try remembering that next time... :-)

25/08/2008
----------

Released 0.2.10p19. This is based mostly on 0.2.10-maint 
but with a few more enhancements and bug fixes. 

Users using 0.2.10p11 are strongly encouraged to update 
their code to 0.2.10p19. 

29/03/2008
----------

Starting in changeset #649, there's now basic support
for deploying a BaseController application on top of FastCGI. :0)

In short, I've followed the recipe for nginx arrangements, as
described here:: 

	http://code.djangoproject.com/wiki/ServerArrangements#nginx

For spawning the FastCGI process, I've decided to use Lighttpd's 
spawn-fcgi(8) utility, which works great. 

Moreover, no need to use Django's runfcgi command anymore. 
A stock flup package seem's to work very nicely for my simple use case.

20/01/2008
----------

Pheew, the 0.2.9 release is out. It is the very first release
of notmm, and isn't supposed to be fully stable yet. ;-)

A lot's of changes is undergoing heavy development in the 0.2.9 tarball:

 * Builtin support for rolling your own WSGI apps with mako templates was
   added in notmm.utils.templates. 
 * Experimental (and quite unstable) SQLAlchemy capabilities are provided 
   in notmm.models.sqlalchemy and notmm.models.mappers. 
 * Newish support for csv was added; Deserializing a csv text file to a Django model
   instance, in notmm.utils.csv.

In addition, a few features have been removed from the 0.2.9x branch: 

 * The src/tools/makeconfig.py script is now gone, since it was too
   much bloated and hard to maintain. I also dislike stubs generators..
 * The src/tools/runserver.sh shell script is now obsolete. It's
   much better to roll your own manage.py instead of using that script.

You may download it from here: http://pypi.python.org/pypi/notmm/0.2.9/

*** Thanks to all who has helped me rolling this release! ***

Best regards,
Etienne 

26/08/2007
----------

The package apps, formerly known as notmm.apps, has been 
refactored as a standalone package.

Refactoring this package out from the notmm library was necessary
in order to improve reusability and consistency of both components.

17/07/2007
----------

It should now be possible to use tools/runserver.sh with a 
local configuration file. 

A default configuration should be installed to $PREFIX/share/notmm/
when using python setup.py install_data. For the full documentation
please see makeconfig/intro.txt.

17/03/2007
----------

WSGI requests are now served with a new-and-experimental 
module named notmm.wsgi.handler. 

That backend should implement a generic WSGI-capable interface
for handling WSGI requests and responses on top of the Paste
framework. :-)

In addition, the frontend module notmm.bin.manage may be
used to deploy a standalone development server. All you currently need to
do is something like::

	>>> from notmm import adapters
	>>> adapter = adapters.DjangoAdapter(project_name="yadayada/0.1") 
	>>> adapter.daemonize()

Of courses, dont forgot to set ''DJANGO_SETTINGS_MODULE'' 
accordingly. ;-)

