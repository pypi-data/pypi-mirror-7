Metadata-Version: 1.1
Name: mwevents
Version: 0.1.0
Summary: Standardized public MediaWiki events for tools and Science.
Home-page: http://pypi.python.org/pypi/mwevents
Author: Aaron Halfaker
Author-email: aaron.halfaker@gmail.com
License: The MIT License (MIT)

Copyright (c) 2014 Aaron Halfaker

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

Description: MediaWiki events
        ================
        Wiki-tool builders & researchers rely on various sources of information about what's happened and is currently happening in Wikipedia. These data sources tend to be structured in differently and contain incomplete or poorly structured information.  Some datasources are queryable, but require complexity to "listen" to ongoing events while others are intended to only be used to "listen" to current events. ''MediaWiki events'' is designed to minimize the frustration involved in process MediaWiki's events.
        
        
        **Instal with pip:** ``pip install mwevents``
        
        **Note:** *Use of this library requires Python 3 or later.*
        
        **Documentation:** *Comming soon!*
        
        :Example:
        
            .. code-block:: python
        
                from mwevents.sources import API
                from mwevents import RevisionSaved, PageCreated
                
                api_source = API.from_api_url("http://en.wikipedia.org/w/api.php")
                listener = api_source.listener(events={RevisionSaved, PageCreated})
                
                for event in listener:
                    if isinstance(event, RevisionSaved):
                        print(event.revision)
                    else: # isinstance(event, PageCreated):
                        print(event.page)
        
        About the author
        ================
        :name:
        	Aaron Halfaker
        :email:
        	aaron.halfaker@gmail.com
        :website:
        	http://halfaker.info --
        	http://en.wikipedia.org/wiki/User:EpochFail
        
        Contributors
        ============
        None yet.  See http://github.com/halfak/MediaWiki-events.  Pull requests are encouraged.
        
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Environment :: Other Environment
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Text Processing :: General
Classifier: Topic :: Utilities
Classifier: Topic :: Scientific/Engineering
