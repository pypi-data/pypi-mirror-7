# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'taxonome/gui/ui/mainwindow.ui'
#
# Created: Wed Jul 16 10:16:23 2014
#      by: PyQt4 UI code generator 4.11.1
#
# WARNING! All changes made in this file will be lost!

from PyQt4 import QtCore, QtGui

try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    def _fromUtf8(s):
        return s

try:
    _encoding = QtGui.QApplication.UnicodeUTF8
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig, _encoding)
except AttributeError:
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig)

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName(_fromUtf8("MainWindow"))
        MainWindow.resize(709, 426)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(_fromUtf8(":/resources/leaf.svg")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtGui.QWidget(MainWindow)
        self.centralwidget.setObjectName(_fromUtf8("centralwidget"))
        self.verticalLayout_2 = QtGui.QVBoxLayout(self.centralwidget)
        self.verticalLayout_2.setObjectName(_fromUtf8("verticalLayout_2"))
        self.splitter_2 = QtGui.QSplitter(self.centralwidget)
        self.splitter_2.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_2.setObjectName(_fromUtf8("splitter_2"))
        self.verticalLayoutWidget = QtGui.QWidget(self.splitter_2)
        self.verticalLayoutWidget.setObjectName(_fromUtf8("verticalLayoutWidget"))
        self.verticalLayout_3 = QtGui.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout_3.setMargin(0)
        self.verticalLayout_3.setObjectName(_fromUtf8("verticalLayout_3"))
        self.label = QtGui.QLabel(self.verticalLayoutWidget)
        self.label.setObjectName(_fromUtf8("label"))
        self.verticalLayout_3.addWidget(self.label)
        self.datasets = QtGui.QListView(self.verticalLayoutWidget)
        self.datasets.setMinimumSize(QtCore.QSize(250, 0))
        self.datasets.setStyleSheet(_fromUtf8("QListView {font-size: 14pt}"))
        self.datasets.setObjectName(_fromUtf8("datasets"))
        self.verticalLayout_3.addWidget(self.datasets)
        self.layoutWidget = QtGui.QWidget(self.splitter_2)
        self.layoutWidget.setObjectName(_fromUtf8("layoutWidget"))
        self.verticalLayout = QtGui.QVBoxLayout(self.layoutWidget)
        self.verticalLayout.setMargin(0)
        self.verticalLayout.setObjectName(_fromUtf8("verticalLayout"))
        self.search_label = QtGui.QLabel(self.layoutWidget)
        self.search_label.setObjectName(_fromUtf8("search_label"))
        self.verticalLayout.addWidget(self.search_label)
        self.horizontalLayout_2 = QtGui.QHBoxLayout()
        self.horizontalLayout_2.setObjectName(_fromUtf8("horizontalLayout_2"))
        self.searchbox = QtGui.QLineEdit(self.layoutWidget)
        self.searchbox.setObjectName(_fromUtf8("searchbox"))
        self.horizontalLayout_2.addWidget(self.searchbox)
        self.search_button = QtGui.QPushButton(self.layoutWidget)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.search_button.sizePolicy().hasHeightForWidth())
        self.search_button.setSizePolicy(sizePolicy)
        self.search_button.setObjectName(_fromUtf8("search_button"))
        self.horizontalLayout_2.addWidget(self.search_button)
        self.clearsearch_button = QtGui.QPushButton(self.layoutWidget)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.clearsearch_button.sizePolicy().hasHeightForWidth())
        self.clearsearch_button.setSizePolicy(sizePolicy)
        self.clearsearch_button.setMinimumSize(QtCore.QSize(0, 0))
        self.clearsearch_button.setObjectName(_fromUtf8("clearsearch_button"))
        self.horizontalLayout_2.addWidget(self.clearsearch_button)
        self.verticalLayout.addLayout(self.horizontalLayout_2)
        self.taxa_list_label = QtGui.QLabel(self.layoutWidget)
        self.taxa_list_label.setObjectName(_fromUtf8("taxa_list_label"))
        self.verticalLayout.addWidget(self.taxa_list_label)
        self.splitter = QtGui.QSplitter(self.layoutWidget)
        self.splitter.setOrientation(QtCore.Qt.Vertical)
        self.splitter.setObjectName(_fromUtf8("splitter"))
        self.taxa_list = QtGui.QTableView(self.splitter)
        self.taxa_list.setMinimumSize(QtCore.QSize(0, 100))
        self.taxa_list.setObjectName(_fromUtf8("taxa_list"))
        self.tax_preview = QtWebKit.QWebView(self.splitter)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tax_preview.sizePolicy().hasHeightForWidth())
        self.tax_preview.setSizePolicy(sizePolicy)
        self.tax_preview.setMinimumSize(QtCore.QSize(300, 150))
        self.tax_preview.setProperty("url", QtCore.QUrl(_fromUtf8("about:blank")))
        self.tax_preview.setObjectName(_fromUtf8("tax_preview"))
        self.verticalLayout.addWidget(self.splitter)
        self.verticalLayout_2.addWidget(self.splitter_2)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtGui.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 709, 25))
        self.menubar.setObjectName(_fromUtf8("menubar"))
        self.menuTaxa = QtGui.QMenu(self.menubar)
        self.menuTaxa.setObjectName(_fromUtf8("menuTaxa"))
        self.menuWeb_services = QtGui.QMenu(self.menubar)
        self.menuWeb_services.setObjectName(_fromUtf8("menuWeb_services"))
        self.menuFile = QtGui.QMenu(self.menubar)
        self.menuFile.setObjectName(_fromUtf8("menuFile"))
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtGui.QStatusBar(MainWindow)
        self.statusbar.setObjectName(_fromUtf8("statusbar"))
        MainWindow.setStatusBar(self.statusbar)
        self.actionImport_CSV = QtGui.QAction(MainWindow)
        self.actionImport_CSV.setObjectName(_fromUtf8("actionImport_CSV"))
        self.actionLoad_JSONlines = QtGui.QAction(MainWindow)
        self.actionLoad_JSONlines.setObjectName(_fromUtf8("actionLoad_JSONlines"))
        self.actionSave_JSONlines = QtGui.QAction(MainWindow)
        self.actionSave_JSONlines.setObjectName(_fromUtf8("actionSave_JSONlines"))
        self.actionLoad_CSV_taxa = QtGui.QAction(MainWindow)
        self.actionLoad_CSV_taxa.setObjectName(_fromUtf8("actionLoad_CSV_taxa"))
        self.actionSave_CSV_taxa = QtGui.QAction(MainWindow)
        self.actionSave_CSV_taxa.setObjectName(_fromUtf8("actionSave_CSV_taxa"))
        self.actionMatch_names = QtGui.QAction(MainWindow)
        self.actionMatch_names.setObjectName(_fromUtf8("actionMatch_names"))
        self.actionCombine_datasets = QtGui.QAction(MainWindow)
        self.actionCombine_datasets.setObjectName(_fromUtf8("actionCombine_datasets"))
        self.actionLook_up_name = QtGui.QAction(MainWindow)
        self.actionLook_up_name.setObjectName(_fromUtf8("actionLook_up_name"))
        self.actionFetch_taxa = QtGui.QAction(MainWindow)
        self.actionFetch_taxa.setObjectName(_fromUtf8("actionFetch_taxa"))
        self.actionNew_ds = QtGui.QAction(MainWindow)
        self.actionNew_ds.setObjectName(_fromUtf8("actionNew_ds"))
        self.actionLoad_CSV_synonyms = QtGui.QAction(MainWindow)
        self.actionLoad_CSV_synonyms.setCheckable(False)
        self.actionLoad_CSV_synonyms.setChecked(False)
        self.actionLoad_CSV_synonyms.setObjectName(_fromUtf8("actionLoad_CSV_synonyms"))
        self.actionMap_big_csv = QtGui.QAction(MainWindow)
        self.actionMap_big_csv.setObjectName(_fromUtf8("actionMap_big_csv"))
        self.actionLoad_CSV_individuals = QtGui.QAction(MainWindow)
        self.actionLoad_CSV_individuals.setObjectName(_fromUtf8("actionLoad_CSV_individuals"))
        self.actionSave_CSV_synonyms = QtGui.QAction(MainWindow)
        self.actionSave_CSV_synonyms.setObjectName(_fromUtf8("actionSave_CSV_synonyms"))
        self.actionSave_CSV_individuals = QtGui.QAction(MainWindow)
        self.actionSave_CSV_individuals.setObjectName(_fromUtf8("actionSave_CSV_individuals"))
        self.actionPrevious_choices = QtGui.QAction(MainWindow)
        self.actionPrevious_choices.setObjectName(_fromUtf8("actionPrevious_choices"))
        self.actionConnect_SQLite_database = QtGui.QAction(MainWindow)
        self.actionConnect_SQLite_database.setObjectName(_fromUtf8("actionConnect_SQLite_database"))
        self.actionSave_as_SQLite_database = QtGui.QAction(MainWindow)
        self.actionSave_as_SQLite_database.setObjectName(_fromUtf8("actionSave_as_SQLite_database"))
        self.menuTaxa.addAction(self.actionMatch_names)
        self.menuTaxa.addAction(self.actionCombine_datasets)
        self.menuTaxa.addSeparator()
        self.menuTaxa.addAction(self.actionPrevious_choices)
        self.menuWeb_services.addAction(self.actionLook_up_name)
        self.menuWeb_services.addAction(self.actionFetch_taxa)
        self.menuFile.addAction(self.actionNew_ds)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionLoad_CSV_taxa)
        self.menuFile.addAction(self.actionLoad_CSV_synonyms)
        self.menuFile.addAction(self.actionLoad_CSV_individuals)
        self.menuFile.addAction(self.actionLoad_JSONlines)
        self.menuFile.addAction(self.actionConnect_SQLite_database)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionSave_CSV_taxa)
        self.menuFile.addAction(self.actionSave_CSV_synonyms)
        self.menuFile.addAction(self.actionSave_CSV_individuals)
        self.menuFile.addAction(self.actionSave_JSONlines)
        self.menuFile.addAction(self.actionSave_as_SQLite_database)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuTaxa.menuAction())
        self.menubar.addAction(self.menuWeb_services.menuAction())
        self.label.setBuddy(self.datasets)
        self.search_label.setBuddy(self.searchbox)
        self.taxa_list_label.setBuddy(self.taxa_list)

        self.retranslateUi(MainWindow)
        QtCore.QObject.connect(self.searchbox, QtCore.SIGNAL(_fromUtf8("returnPressed()")), MainWindow.do_search)
        QtCore.QObject.connect(self.search_button, QtCore.SIGNAL(_fromUtf8("clicked()")), MainWindow.do_search)
        QtCore.QObject.connect(self.clearsearch_button, QtCore.SIGNAL(_fromUtf8("clicked()")), self.searchbox.clear)
        QtCore.QObject.connect(self.clearsearch_button, QtCore.SIGNAL(_fromUtf8("clicked()")), MainWindow.clear_search)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(_translate("MainWindow", "Taxonome", None))
        self.label.setText(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">Datasets</span></p></body></html>", None))
        self.search_label.setText(_translate("MainWindow", "&Search taxa in this dataset", None))
        self.searchbox.setToolTip(_translate("MainWindow", "Enter a species name, or use the * wildcard, e.g. \"Arachis *\".", None))
        self.search_button.setText(_translate("MainWindow", "Search", None))
        self.clearsearch_button.setText(_translate("MainWindow", "Clear", None))
        self.taxa_list_label.setText(_translate("MainWindow", "Example taxa:", None))
        self.menuTaxa.setTitle(_translate("MainWindow", "&Taxa", None))
        self.menuWeb_services.setTitle(_translate("MainWindow", "&Web services", None))
        self.menuFile.setTitle(_translate("MainWindow", "&File", None))
        self.actionImport_CSV.setText(_translate("MainWindow", "Import CSV...", None))
        self.actionLoad_JSONlines.setText(_translate("MainWindow", "Load from JSONlines...", None))
        self.actionSave_JSONlines.setText(_translate("MainWindow", "Save as JSONlines...", None))
        self.actionLoad_CSV_taxa.setText(_translate("MainWindow", "Load taxa from CSV...", None))
        self.actionLoad_CSV_taxa.setToolTip(_translate("MainWindow", "Taxa records: each species has one row.", None))
        self.actionSave_CSV_taxa.setText(_translate("MainWindow", "Save taxa to CSV...", None))
        self.actionMatch_names.setText(_translate("MainWindow", "Match taxa by name...", None))
        self.actionCombine_datasets.setText(_translate("MainWindow", "Combine datasets...", None))
        self.actionCombine_datasets.setToolTip(_translate("MainWindow", "Combine datasets that already use identical names.", None))
        self.actionLook_up_name.setText(_translate("MainWindow", "Look up name", None))
        self.actionFetch_taxa.setText(_translate("MainWindow", "Fetch collection of taxa", None))
        self.actionNew_ds.setText(_translate("MainWindow", "New empty dataset...", None))
        self.actionLoad_CSV_synonyms.setText(_translate("MainWindow", "Load synonymy from CSV...", None))
        self.actionLoad_CSV_synonyms.setToolTip(_translate("MainWindow", "Synonymy: Each name has one row, mapping it to an accepted name.", None))
        self.actionMap_big_csv.setText(_translate("MainWindow", "Map names from big CSV dataset...", None))
        self.actionLoad_CSV_individuals.setText(_translate("MainWindow", "Load individual records from CSV...", None))
        self.actionLoad_CSV_individuals.setToolTip(_translate("MainWindow", "Individual records: a taxon may appear on more than one row - e.g. one row per specimen.", None))
        self.actionSave_CSV_synonyms.setText(_translate("MainWindow", "Save synonymy to CSV...", None))
        self.actionSave_CSV_individuals.setText(_translate("MainWindow", "Save individual records to CSV...", None))
        self.actionPrevious_choices.setText(_translate("MainWindow", "Previous choices...", None))
        self.actionConnect_SQLite_database.setText(_translate("MainWindow", "Connect SQLite database...", None))
        self.actionSave_as_SQLite_database.setText(_translate("MainWindow", "Save as SQLite database...", None))

from PyQt4 import QtWebKit
from . import icons_rc
