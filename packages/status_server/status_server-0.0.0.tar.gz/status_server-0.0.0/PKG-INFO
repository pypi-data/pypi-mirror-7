Metadata-Version: 1.1
Name: status_server
Version: 0.0.0
Summary: Serve HTTP statuses by URL
Home-page: https://github.com/charlesthomas/status_server
Author: Charles Thomas
Author-email: ch@rlesthom.as
License: The MIT License (MIT)

Copyright (c) 2014 Charles Thomas

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
Description: =============
        status_server
        =============
        
        Serve HTTP Status by URL
        
        Quickstart
        ----------
        1. ``pip install status_server``
        2. ``status_server``
        3. ``curl -i http://localhost:8888/200``
        
        What is status_server?
        ----------------------
        I was playing around with a load testing tool, and I wanted to generate more
        than one HTTP response type, so I hacked this together.
        
        status_server returns the status code in the request URI. Want a 200?
        ``curl http://localhost:8888/200``
        
        Want a 404?
        ``curl http://localhost:8888/404``
        
        What if you want a randomly chosen value from a list of possible return types?
        ``curl http://localhost:8888/200/404/503``
        
        The above has an equal chance of returning either of the three HTTP status
        codes. (1/3: 200, 1/3: 404, 1/3: 503)
        
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Topic :: Internet :: WWW/HTTP :: HTTP Servers
Classifier: Topic :: Software Development :: Quality Assurance
Classifier: Topic :: Software Development :: Testing :: Traffic Generation
