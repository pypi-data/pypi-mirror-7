Metadata-Version: 1.1
Name: CSSOnDiet
Version: 1.3
Summary: Easy and fast CSS preprocessor
Home-page: http://www.cofoh.com/css-on-diet
Author: Tomasz Wyderka
Author-email: wyderkat@cofoh.com
License: GPL3
Description: (u"CSS-On-Diet\n===========\n\nCSS-On-Diet is a preprocessor for CSS files. The key feature are\nmnemonics for frequently used properties and value names, which are\nsimilar to Emmet abbreviations. Other goodies include optional colons\nand semicolons, nested and one line comments, variables and mixins,\ncalculator, hexadecimal RGBA.\n\nMuch more information on\n`www.cofoh.com/css-on-diet <http://www.cofoh.com/css-on-diet>`__\n\nFeatures\n========\n\nUse old CSS\n-----------\n\n::\n\n    .element {\n      letter-spacing: 2px;\n      background-color: #1C6BA0;\n    }\n\nIf all your CSS declarations are in separate lines you don't have to\nchange anything. Normal CSS can be mixed with CSS-On-Diet.\n\nRemove colons\n-------------\n\n::\n\n    .element {\n      letter-spacing 2px\n      background-color #1C6BA0\n    }\n\nIn CSS-On-Diet colons and semicolons are optional.\n\nUse mnemonics\n-------------\n\n::\n\n    .element {\n      les 2p\n      bac #1C6BA0\n    }\n\nCommon CSS keywords have mnemonics. Parameters are 3 letters long,\nvalues 2, and units just 1 letter (`The\nlist <http://www.cofoh.com/css-on-diet-LATEST>`__)\n\nOne line comments\n-----------------\n\n::\n\n    .element {\n      les 2p // why not 3?\n      bac #1C6BA0 // deep ocean\n    }\n\nOne line comments finish at the end of the line. No need to close it\nanymore.\n\nNested comments\n---------------\n\n::\n\n    .element {\n      /*\n      les /*3p*/ 2p\n      */\n      bac #1C6BA0\n    }\n\nNow you can comment out code with other comment. Finally...\n\nArithmetics\n-----------\n\n::\n\n    .element {\n      les 3p-1\n      bac #1C6BA0\n    }\n\nCSS doesn't need complicated calculations. But it needs some basic\noperations.\n\nShort RGBA\n----------\n\n::\n\n    .element {\n      les 3p-1\n      bac #1C6BA0F1\n    }\n\nJust two more digits and you have transparency with your color\n\nVariables\n---------\n\n::\n\n    @cod-defines {\n      sp2014 3p-1\n      ocean #1C6BA0F1\n    }\n    .element {\n      les sp2014\n      bac ocean\n    }\n\nDefines are like variables. Write it once and use it anywhere. Stay DRY!\n\nMixins\n------\n\n::\n\n    @cod-defines {\n      sp2014 3p-1\n      ocean #1C6BA0_ARG1_\n    }\n    .element {\n      les sp2014\n      bac ocean(F1)\n    }\n\nMixins are defines with arguments. Easy to use but powerful syntax.\n\nInstallation from TGZ file\n==========================\n\nUnpack TGZ file and *cod* Python script is all you need.\n\nInstall Python (ver 2.7.x preferable) if you don't have it.\n",)
Keywords: CSS preprocessor
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Topic :: Software Development :: Pre-processors
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.2
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Requires: argparse
