define("arena/adapters/application",["ember-data","ember","exports"],function(e,t,a){"use strict";var s=e["default"],n=t["default"];a["default"]=s.RESTAdapter.extend({host:ArenaENV.api_endpoint,namespace:"api/1",ajax:function(e,t,a){return n.isEmpty(a)&&(a={}),n.isEmpty(a.data)&&(a.data={}),a.data.ts=Math.round((new Date).getTime()/1e4),this._super(e,t,a)}})}),define("arena/app",["ember","ember/resolver","ember/load-initializers","exports"],function(e,t,a,s){"use strict";var n=e["default"],r=t["default"],h=a["default"];n.MODEL_FACTORY_INJECTIONS=!0;var o=n.Application.extend({modulePrefix:"arena",Resolver:r});h(o,"arena"),moment.lang("en",{longDateFormat:{LT:"HH:mm",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY LT",LLLL:"dddd D MMMM YYYY LT"}}),s["default"]=o}),define("arena/controllers/game",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.ObjectController.extend({})}),define("arena/controllers/gamemaps",["ember","arena/infinite_scroll","exports"],function(e,t,a){"use strict";var s=e["default"],n=t["default"];a["default"]=s.ArrayController.extend(n.ControllerMixin,{sortProperties:["name"],sortAscending:!0,hasMore:function(){return this.get("total")>this.get("perPage")*this.get("page")}.property("page","total"),total:function(){return this.store.metadataFor("gamemap").total}.property("@each")})}),define("arena/infinite_scroll",["ember","exports"],function(e,t){"use strict";var a=e["default"],s={PAGE:1,PER_PAGE:25};s.ControllerMixin=a.Mixin.create({loadingMore:!1,page:s.PAGE,perPage:s.PER_PAGE,actions:{getMore:function(){this.get("loadingMore")||(this.set("loadingMore",!0),this.get("target").send("getMore"))},gotMore:function(e,t){this.set("loadingMore",!1),this.pushObjects(e),this.set("page",t)}}}),s.RouteMixin=a.Mixin.create({actions:{getMore:function(){throw new Error("Must override Route action `getMore`.")},fetchPage:function(){throw new Error("Must override Route action `getMore`.")}}}),t["default"]=s}),define("arena/controllers/games",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.ArrayController.extend({sortProperties:["_updated"],sortAscending:!1})}),define("arena/controllers/players",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.ArrayController.extend({sortProperties:["online","team","score","_updated"],sortAscending:!1})}),define("arena/helpers/calendar-date",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Handlebars.makeBoundHelper(function(e){return moment(e).calendar()})}),define("arena/helpers/format-date",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Handlebars.makeBoundHelper(function(e,t){return moment(e).format(t)})}),define("arena/helpers/fromnow-date",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Handlebars.makeBoundHelper(function(e){return moment(e).fromNow()})}),define("arena/helpers/game-type",["ember","exports"],function(e,t){"use strict";var a=e["default"],s=["Deathmatch","Tournament","Single Player","Team Deathmatch (TDM)","Capture The Flag (CTF)","One Flag Capture","Overload","Harvester","Elimination","CTF Elimination","Last Man Standing","Double Domination","Domination"];t["default"]=a.Handlebars.makeBoundHelper(function(e){return s[e]})}),define("arena/helpers/quake-name",["ember","exports"],function(e,t){"use strict";var a=e["default"],s=function(e){var t=a.Handlebars.Utils.escapeExpression(e);return t=t.replace(/\^([0-9])/g,'</span><span class="quake-color-$1">'),t='<span class="quake-color-0">'+t+"</span>",new a.Handlebars.SafeString(t)},n=a.Handlebars.makeBoundHelper(s);n.helper=s,t["default"]=n}),define("arena/models/game",["ember-data","exports"],function(e,t){"use strict";var a=e["default"],s=a.Model.extend({mapname:a.attr("string"),gamemap:a.belongsTo("gamemap",{async:!0}),gametype:a.attr("number"),current:a.attr("boolean"),start:a.attr("epoch"),stop:a.attr("epoch"),players:a.hasMany("player",{async:!0}),votes:a.hasMany("vote",{async:!0}),options:a.attr("dict"),_updated:a.attr("date"),_created:a.attr("date")});s.reopenClass({FIXTURES:[{id:1,gamemap:1,gametype:0,current:!0,players:["2394808AFSDFAFS","23948ASDF08AFSDFAFS"],start:moment().toDate(),stop:null},{id:2,gamemap:2,gametype:1,current:!1,start:moment().subtract("hour").toDate(),stop:moment().toDate()}]}),t["default"]=s}),define("arena/models/gamemap",["ember-data","exports"],function(e,t){"use strict";var a=e["default"],s=a.Model.extend({name:a.attr("string"),levelshot:a.attr("string"),images:a.attr("raw"),gametypes:a.attr("raw"),min_players:a.attr("number"),max_players:a.attr("number"),_updated:a.attr("date"),_created:a.attr("date")});s.reopenClass({FIXTURES:[{id:1,name:"awesomemap",levelshot:"http://ws.q3df.org/images/levelshots/128x96/bubctf1.jpg",images:["http://ws.q3df.org/images/levelshots/512x384/bubctf1.jpg","http://ws.q3df.org/images/topviews/512x384/bubctf1.jpg"],gametypes:[4,5]},{id:2,name:"lastmap",levelshot:"http://ws.q3df.org/images/levelshots/128x96/",gametypes:[0]}]}),t["default"]=s}),define("arena/models/player",["ember-data","exports"],function(e,t){"use strict";var a=e["default"],s=a.Model.extend({name:a.attr("string"),team:a.attr("string"),online:a.attr("boolean"),score:a.attr("number"),names:a.attr("raw"),skill:a.attr("number"),bot:a.attr("boolean"),headmodel:a.attr("string"),_updated:a.attr("date"),_created:a.attr("date")});s.reopenClass({FIXTURES:[{id:"2394808AFSDFAFS",name:"-[aequitas]-",team:"red",online:!0,score:42,names:["old_nickname"]},{id:"23948ASDF08AFSDFAFS",name:"n^100^0b",team:"red",online:!0,score:0},{id:"23948SFADFJKLASDF08AFSDFAFS",name:"colors^11^22^33^44^55^66^77^0w00t",team:"",online:!1,score:0}]}),t["default"]=s}),define("arena/models/vote",["ember-data","exports"],function(e,t){"use strict";var a=e["default"],s=a.Model.extend({vote:a.attr("number"),player:a.belongsTo("player",{async:!0}),game:a.belongsTo("game",{async:!0}),gamemap:a.belongsTo("gamemap",{async:!0}),gametype:a.attr("number"),_updated:a.attr("date"),_created:a.attr("date")});s.reopenClass({FIXTURES:[{id:1,game:1,player:"2394808AFSDFAFS",vote:1}]}),t["default"]=s}),define("arena/router",["ember","exports"],function(e,t){"use strict";var a=e["default"],s=a.Router.extend({location:ArenaENV.locationType});s.map(function(){this.resource("games"),this.resource("game",{path:"/games/:game_id"}),this.resource("players"),this.resource("player",{path:"/players/:player_id"}),this.resource("gamemaps"),this.resource("gamemap",{path:"/gamemaps/:gamemap_id"}),this.resource("votes")}),t["default"]=s}),define("arena/routes/application",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Route.extend({actions:{loading:function(e){return"replace"===e.urlMethod?!1:!0}}})}),define("arena/routes/game",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Route.extend({})}),define("arena/routes/gamemap",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Route.extend({})}),define("arena/routes/gamemaps",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Route.extend({model:function(){var e=a.A([]),t=this.store.find("gamemap",{sort:'[("name",1)]'});return t.then(function(){e.pushObjects(t.content.content)}),e},actions:{getMore:function(){var e=this.controller.get("page")+1,t=this.store.find("gamemap",{page:e,sort:'[("name",1)]'});t.then(function(){this.get("controller").send("gotMore",t.content.content,e)}.bind(this))}}})}),define("arena/routes/games",["ember","arena/routes/polling","exports"],function(e,t,a){"use strict";var s=e["default"],n=t["default"];a["default"]=s.Route.extend(n,{model:function(){return this.store.find("game",{sort:'[("updated",-1)]'})}})}),define("arena/routes/polling",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Mixin.create({poll_interval:1e4,activate:function(){this.poll()},deactivate:function(){a.run.cancel(this.get("poll_inst"))},poll:function(){var e=a.run.later(function(){this.controller.set("isPolling",!0),this.refresh().then(function(){this.controller.set("isPolling",!1),this.poll()}.bind(this))}.bind(this),this.get("poll_interval"));this.set("poll_inst",e)}})}),define("arena/routes/index",["ember","arena/routes/polling","exports"],function(e,t,a){"use strict";var s=e["default"],n=t["default"];a["default"]=s.Route.extend(n,{controllerName:"game",setupController:function(e,t){e.set("content",t.content.get("firstObject"))},model:function(){return this.store.find("game",{sort:'[("updated",-1)]'})}})}),define("arena/routes/player",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Route.extend({setupController:function(e,t){this._super(e,t),this.poll(t)},deactivate:function(){a.run.cancel(this.get("poll_inst"))},poll:function(e){var t=this,s=a.run.later(function(){e.reload(),t.poll(e)},5e3);this.set("poll_inst",s)}})}),define("arena/routes/players",["ember","arena/routes/polling","exports"],function(e,t,a){"use strict";var s=e["default"],n=t["default"];a["default"]=s.Route.extend(n,{model:function(){return this.store.find("player",{sort:'[("updated",-1)]'})}})}),define("arena/routes/votes",["ember","arena/routes/polling","exports"],function(e,t,a){"use strict";var s=e["default"],n=t["default"];a["default"]=s.Route.extend(n,{model:function(){return this.store.find("vote",{sort:'[("updated",-1)]'})}})}),define("arena/serializers/application",["ember-data","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.RESTSerializer.extend({extractArray:function(e,t,a){return a[t.typeKey]=a._items,delete a._items,delete a._links,this._super(e,t,a)},extractSingle:function(e,t,a,s){var n={};return n[t.typeKey]=a,this._super(e,t,n,s)},extractMeta:function(e,t,a){return a._meta&&(a.meta=a._meta,delete a._meta),this._super(e,t,a)},primaryKey:"_id"})}),define("arena/templates/_navbar",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Handlebars.template(function(e,t,s,n,r){function h(e,t){var a,n,r,h="";return t.buffer.push("\n                "),n=s["link-to"]||e&&e["link-to"],r={hash:{bubbles:!1},hashTypes:{bubbles:"BOOLEAN"},hashContexts:{bubbles:e},inverse:y.noop,fn:y.program(2,o,t),contexts:[e],types:["STRING"],data:t},a=n?n.call(e,"players",r):x.call(e,"link-to","players",r),(a||0===a)&&t.buffer.push(a),t.buffer.push("\n                "),h}function o(e,t){t.buffer.push("\n                Players\n                ")}function p(e,t){var a,n,r,h="";return t.buffer.push("\n                "),n=s["link-to"]||e&&e["link-to"],r={hash:{bubbles:!1},hashTypes:{bubbles:"BOOLEAN"},hashContexts:{bubbles:e},inverse:y.noop,fn:y.program(5,l,t),contexts:[e],types:["STRING"],data:t},a=n?n.call(e,"games",r):x.call(e,"link-to","games",r),(a||0===a)&&t.buffer.push(a),t.buffer.push("\n                "),h}function l(e,t){t.buffer.push("\n                Games\n                ")}function u(e,t){var a,n,r,h="";return t.buffer.push("\n                "),n=s["link-to"]||e&&e["link-to"],r={hash:{bubbles:!1},hashTypes:{bubbles:"BOOLEAN"},hashContexts:{bubbles:e},inverse:y.noop,fn:y.program(8,f,t),contexts:[e],types:["STRING"],data:t},a=n?n.call(e,"votes",r):x.call(e,"link-to","votes",r),(a||0===a)&&t.buffer.push(a),t.buffer.push("\n                "),h}function f(e,t){t.buffer.push("\n                Votes\n                ")}function i(e,t){var a,n,r,h="";return t.buffer.push("\n                "),n=s["link-to"]||e&&e["link-to"],r={hash:{bubbles:!1},hashTypes:{bubbles:"BOOLEAN"},hashContexts:{bubbles:e},inverse:y.noop,fn:y.program(11,c,t),contexts:[e],types:["STRING"],data:t},a=n?n.call(e,"gamemaps",r):x.call(e,"link-to","gamemaps",r),(a||0===a)&&t.buffer.push(a),t.buffer.push("\n                "),h}function c(e,t){t.buffer.push("\n                Maps\n                ")}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,a.Handlebars.helpers),r=r||{};var d,m,b,g="",y=this,x=s.helperMissing;return r.buffer.push('<nav class="navbar navbar-default" role="navigation">\n    <div class="container-fluid">\n        <!-- Brand and toggle get grouped for better mobile display -->\n        <div class="navbar-header">\n            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">\n                <span class="sr-only">Toggle navigation</span>\n                <span class="icon-bar"></span>\n                <span class="icon-bar"></span>\n                <span class="icon-bar"></span>\n            </button>\n            <a class="navbar-brand" href="#">Munerator</a>\n        </div>\n\n        <!-- Collect the nav links, forms, and other content for toggling -->\n        <div class="collapse navbar-collapse in" id="bs-example-navbar-collapse-1">\n            <ul class="nav navbar-nav">\n                '),m=s["link-to"]||t&&t["link-to"],b={hash:{tagName:"li",href:!1},hashTypes:{tagName:"STRING",href:"BOOLEAN"},hashContexts:{tagName:t,href:t},inverse:y.noop,fn:y.program(1,h,r),contexts:[t],types:["STRING"],data:r},d=m?m.call(t,"players",b):x.call(t,"link-to","players",b),(d||0===d)&&r.buffer.push(d),r.buffer.push("\n                "),m=s["link-to"]||t&&t["link-to"],b={hash:{tagName:"li",href:!1},hashTypes:{tagName:"STRING",href:"BOOLEAN"},hashContexts:{tagName:t,href:t},inverse:y.noop,fn:y.program(4,p,r),contexts:[t],types:["STRING"],data:r},d=m?m.call(t,"games",b):x.call(t,"link-to","games",b),(d||0===d)&&r.buffer.push(d),r.buffer.push("\n                "),m=s["link-to"]||t&&t["link-to"],b={hash:{tagName:"li",href:!1},hashTypes:{tagName:"STRING",href:"BOOLEAN"},hashContexts:{tagName:t,href:t},inverse:y.noop,fn:y.program(7,u,r),contexts:[t],types:["STRING"],data:r},d=m?m.call(t,"votes",b):x.call(t,"link-to","votes",b),(d||0===d)&&r.buffer.push(d),r.buffer.push("\n                "),m=s["link-to"]||t&&t["link-to"],b={hash:{tagName:"li",href:!1},hashTypes:{tagName:"STRING",href:"BOOLEAN"},hashContexts:{tagName:t,href:t},inverse:y.noop,fn:y.program(10,i,r),contexts:[t],types:["STRING"],data:r},d=m?m.call(t,"gamemaps",b):x.call(t,"link-to","gamemaps",b),(d||0===d)&&r.buffer.push(d),r.buffer.push('\n            </ul>\n            <ul class="nav navbar-nav navbar-right">\n                <li>\n                    <a href="/api/1/" target="_blank">API</a>\n                </li>\n            </ul>\n        </div>\n    </div><!-- /.container-fluid -->\n</nav>'),g})}),define("arena/templates/application",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Handlebars.template(function(e,t,s,n,r){this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,a.Handlebars.helpers),r=r||{};var h,o,p,l="",u=s.helperMissing,f=this.escapeExpression;return r.buffer.push(f((o=s.partial||t&&t.partial,p={hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["STRING"],data:r},o?o.call(t,"navbar",p):u.call(t,"partial","navbar",p)))),r.buffer.push("\n"),h=s._triageMustache.call(t,"outlet",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(h||0===h)&&r.buffer.push(h),l})}),define("arena/templates/game",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Handlebars.template(function(e,t,s,n,r){function h(e,t){var a,n,r,h="";return t.buffer.push("\n<li>"),n=s["link-to"]||e&&e["link-to"],r={hash:{},hashTypes:{},hashContexts:{},inverse:y.noop,fn:y.program(2,o,t),contexts:[e,e],types:["STRING","ID"],data:t},a=n?n.call(e,"player","",r):b.call(e,"link-to","player","",r),(a||0===a)&&t.buffer.push(a),t.buffer.push(" "),a=s["if"].call(e,"bot",{hash:{},hashTypes:{},hashContexts:{},inverse:y.noop,fn:y.program(4,p,t),contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</li>\n"),h}function o(e,t){var a,n;t.buffer.push(g((a=s["quake-name"]||e&&e["quake-name"],n={hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t},a?a.call(e,"name",n):b.call(e,"quake-name","name",n))))}function p(e,t){t.buffer.push("(bot)")}function l(e,t){var a,n,r,h="";return t.buffer.push("\n<li>"),n=s["link-to"]||e&&e["link-to"],r={hash:{},hashTypes:{},hashContexts:{},inverse:y.noop,fn:y.program(7,u,t),contexts:[e,e],types:["STRING","ID"],data:t},a=n?n.call(e,"player","",r):b.call(e,"link-to","player","",r),(a||0===a)&&t.buffer.push(a),t.buffer.push(" - "),a=s._triageMustache.call(e,"vote",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</li>\n"),h}function u(e,t){var a,n;t.buffer.push(g((a=s["quake-name"]||e&&e["quake-name"],n={hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t},a?a.call(e,"player.name",n):b.call(e,"quake-name","player.name",n))))}function f(e,t){var a,n="";return t.buffer.push("\n<li>"),a=s._triageMustache.call(e,"option.name",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push(" - "),a=s._triageMustache.call(e,"option.value",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</li>\n"),n}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,a.Handlebars.helpers),r=r||{};var i,c,d,m="",b=s.helperMissing,g=this.escapeExpression,y=this;return r.buffer.push("<p>map: "),i=s._triageMustache.call(t,"mapname",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(i||0===i)&&r.buffer.push(i),r.buffer.push("</p>\n<p>gametype: "),r.buffer.push(g((c=s["game-type"]||t&&t["game-type"],d={hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r},c?c.call(t,"gametype",d):b.call(t,"game-type","gametype",d)))),r.buffer.push("</p>\n<p>players:</p>\n<ul>\n"),i=s.each.call(t,"players",{hash:{},hashTypes:{},hashContexts:{},inverse:y.noop,fn:y.program(1,h,r),contexts:[t],types:["ID"],data:r}),(i||0===i)&&r.buffer.push(i),r.buffer.push("\n</ul>\n<p>started: "),i=s._triageMustache.call(t,"start",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(i||0===i)&&r.buffer.push(i),r.buffer.push("</p>\n<p>ended: "),i=s._triageMustache.call(t,"stop",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(i||0===i)&&r.buffer.push(i),r.buffer.push("</p>\n<p>votes:</p>\n<ul>\n"),i=s.each.call(t,"votes",{hash:{},hashTypes:{},hashContexts:{},inverse:y.noop,fn:y.program(6,l,r),contexts:[t],types:["ID"],data:r}),(i||0===i)&&r.buffer.push(i),r.buffer.push("\n</ul>\n<p>game options:</p>\n<ul>\n"),i=s.each.call(t,"option","in","options",{hash:{},hashTypes:{},hashContexts:{},inverse:y.noop,fn:y.program(9,f,r),contexts:[t,t,t],types:["ID","ID","ID"],data:r}),(i||0===i)&&r.buffer.push(i),r.buffer.push("\n</ul>"),m})}),define("arena/templates/gamemap",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Handlebars.template(function(e,t,s,n,r){function h(e,t){var a,n,r="";return t.buffer.push("\n    <li>"),t.buffer.push(f((a=s["game-type"]||e&&e["game-type"],n={hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t},a?a.call(e,"",n):u.call(e,"game-type","",n)))),t.buffer.push("</li>\n    "),r}function o(e,t){var a="";return t.buffer.push("\n    <img "),t.buffer.push(f(s["bind-attr"].call(e,{hash:{src:""},hashTypes:{src:"ID"},hashContexts:{src:e},contexts:[],types:[],data:t}))),t.buffer.push(' alt="map image" class="img-rounded">\n    '),a}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,a.Handlebars.helpers),r=r||{};var p,l="",u=s.helperMissing,f=this.escapeExpression,i=this;return r.buffer.push("<img "),r.buffer.push(f(s["bind-attr"].call(t,{hash:{src:"levelshot"},hashTypes:{src:"ID"},hashContexts:{src:t},contexts:[],types:[],data:r}))),r.buffer.push(' class="img-thumbnail" alt="levelshot" width="128">\n<p>map: '),p=s._triageMustache.call(t,"name",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(p||0===p)&&r.buffer.push(p),r.buffer.push("</p>\n<p>gametypes:</p>\n<ul>\n    "),p=s.each.call(t,"gametypes",{hash:{},hashTypes:{},hashContexts:{},inverse:i.noop,fn:i.program(1,h,r),contexts:[t],types:["ID"],data:r}),(p||0===p)&&r.buffer.push(p),r.buffer.push("\n</ul>\n<p>min players: "),p=s._triageMustache.call(t,"min_players",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(p||0===p)&&r.buffer.push(p),r.buffer.push("</p>\n<p>max players: "),p=s._triageMustache.call(t,"max_players",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(p||0===p)&&r.buffer.push(p),r.buffer.push("</p>\n<p>images:</p>\n<div>\n    "),p=s.each.call(t,"images",{hash:{},hashTypes:{},hashContexts:{},inverse:i.noop,fn:i.program(3,o,r),contexts:[t],types:["ID"],data:r}),(p||0===p)&&r.buffer.push(p),r.buffer.push("\n</div>"),l})}),define("arena/templates/gamemaps",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Handlebars.template(function(e,t,s,n,r){function h(e,t){var a,n,r,h="";return t.buffer.push("\n    "),n=s["link-to"]||e&&e["link-to"],r={hash:{tagName:"tr","class":"clickable"},hashTypes:{tagName:"STRING","class":"STRING"},hashContexts:{tagName:e,"class":e},inverse:g.noop,fn:g.program(2,o,t),contexts:[e,e],types:["STRING","ID"],data:t},a=n?n.call(e,"gamemap","",r):m.call(e,"link-to","gamemap","",r),(a||0===a)&&t.buffer.push(a),t.buffer.push("\n    "),h}function o(e,t){var a,n,r,h="";return t.buffer.push("\n    <td><img "),t.buffer.push(b(s["bind-attr"].call(e,{hash:{src:"levelshot"},hashTypes:{src:"ID"},hashContexts:{src:e},contexts:[],types:[],data:t}))),t.buffer.push(' alt="levelshot" class="img-thumbnail" width="128"></td>\n    <td>'),a=s._triageMustache.call(e,"name",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</td>\n    <td>\n        <ul>\n            "),a=s.each.call(e,"gametypes",{hash:{},hashTypes:{},hashContexts:{},inverse:g.noop,fn:g.program(3,p,t),contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("\n        </ul>\n    </td>\n    <td>\n        "),a=s._triageMustache.call(e,"min_players",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push(" - "),a=s._triageMustache.call(e,"max_players",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("\n    </td>\n    <td>"),t.buffer.push(b((n=s["format-date"]||e&&e["format-date"],r={hash:{},hashTypes:{},hashContexts:{},contexts:[e,e],types:["ID","STRING"],data:t},n?n.call(e,"_created","LLL",r):m.call(e,"format-date","_created","LLL",r)))),t.buffer.push("</td>\n    "),h}function p(e,t){var a,n,r="";return t.buffer.push("\n            <li>"),t.buffer.push(b((a=s["game-type"]||e&&e["game-type"],n={hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t},a?a.call(e,"",n):m.call(e,"game-type","",n)))),t.buffer.push("</li>\n            "),r}function l(e,t){var a,n,r,h="";return t.buffer.push("\n"),n=s["bs-button"]||e&&e["bs-button"],r={hash:{clicked:"getMore",type:"primary",xs:!0,block:!0},hashTypes:{clicked:"STRING",type:"STRING",xs:"BOOLEAN",block:"BOOLEAN"},hashContexts:{clicked:e,type:e,xs:e,block:e},inverse:g.noop,fn:g.program(6,u,t),contexts:[],types:[],data:t},a=n?n.call(e,r):m.call(e,"bs-button",r),(a||0===a)&&t.buffer.push(a),t.buffer.push("\n"),h}function u(e,t){var a,n="";return t.buffer.push("\n    "),a=s["if"].call(e,"loadingMore",{hash:{},hashTypes:{},hashContexts:{},inverse:g.program(9,i,t),fn:g.program(7,f,t),contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("\n"),n}function f(e,t){t.buffer.push("Loading more...")}function i(e,t){t.buffer.push("Load more")}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,a.Handlebars.helpers),r=r||{};var c,d="",m=s.helperMissing,b=this.escapeExpression,g=this;return r.buffer.push('<table class="table">\n    <tr>\n        <th>&nbsp;</th>\n        <th>Map name</th>\n        <th>Gametypes</th>\n        <th>Num. players</th>\n        <th>Updated</th>\n    </tr>\n    '),c=s.each.call(t,{hash:{},hashTypes:{},hashContexts:{},inverse:g.noop,fn:g.program(1,h,r),contexts:[],types:[],data:r}),(c||0===c)&&r.buffer.push(c),r.buffer.push("\n</table>\n"),c=s["if"].call(t,"hasMore",{hash:{},hashTypes:{},hashContexts:{},inverse:g.noop,fn:g.program(5,l,r),contexts:[t],types:["ID"],data:r}),(c||0===c)&&r.buffer.push(c),d})}),define("arena/templates/games",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Handlebars.template(function(e,t,s,n,r){function h(e,t){var a,n,r,h="";return t.buffer.push("\n    "),n=s["link-to"]||e&&e["link-to"],r={hash:{tagName:"tr","class":"clickable"},hashTypes:{tagName:"STRING","class":"STRING"},hashContexts:{tagName:e,"class":e},inverse:y.noop,fn:y.program(2,o,t),contexts:[e,e],types:["STRING","ID"],data:t},a=n?n.call(e,"game","",r):b.call(e,"link-to","game","",r),(a||0===a)&&t.buffer.push(a),t.buffer.push("\n    "),h}function o(e,t){var a,n,r,h="";return t.buffer.push("\n    <td>\n        <img "),t.buffer.push(g(s["bind-attr"].call(e,{hash:{src:"gamemap.levelshot"},hashTypes:{src:"ID"},hashContexts:{src:e},contexts:[],types:[],data:t}))),t.buffer.push(' alt="levelshot" class="img-thumbnail" width="64" height="64">\n    </td>\n    <td>'),n=s["link-to"]||e&&e["link-to"],r={hash:{},hashTypes:{},hashContexts:{},inverse:y.noop,fn:y.program(3,p,t),contexts:[e,e],types:["STRING","ID"],data:t},a=n?n.call(e,"gamemap","gamemap",r):b.call(e,"link-to","gamemap","gamemap",r),(a||0===a)&&t.buffer.push(a),t.buffer.push("</td>\n    <td>"),t.buffer.push(g((n=s["game-type"]||e&&e["game-type"],r={hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t},n?n.call(e,"gametype",r):b.call(e,"game-type","gametype",r)))),t.buffer.push("</td>\n    <td>\n        <ul>\n            "),a=s.each.call(e,"players",{hash:{},hashTypes:{},hashContexts:{},inverse:y.noop,fn:y.program(5,l,t),contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("\n        </ul>\n    </td>\n    <td>"),t.buffer.push(g((n=s["fromnow-date"]||e&&e["fromnow-date"],r={hash:{},hashTypes:{},hashContexts:{},contexts:[e,e],types:["ID","STRING"],data:t},n?n.call(e,"start","DD",r):b.call(e,"fromnow-date","start","DD",r)))),t.buffer.push("</td>\n    <td>"),a=s.unless.call(e,"current",{hash:{},hashTypes:{},hashContexts:{},inverse:y.noop,fn:y.program(10,i,t),contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</td>\n    <td>\n        "),a=s["if"].call(e,"current",{hash:{},hashTypes:{},hashContexts:{},inverse:y.noop,fn:y.program(12,c,t),contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("\n        &nbsp;\n    </td>\n    "),h}function p(e,t){var a;a=s._triageMustache.call(e,"gamemap.name",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),t.buffer.push(a||0===a?a:"")}function l(e,t){var a,n,r,h="";return t.buffer.push("\n            <li "),t.buffer.push(g(s["bind-attr"].call(e,{hash:{"class":"online::circle"},hashTypes:{"class":"STRING"},hashContexts:{"class":e},contexts:[],types:[],data:t}))),t.buffer.push(">"),n=s["link-to"]||e&&e["link-to"],r={hash:{},hashTypes:{},hashContexts:{},inverse:y.noop,fn:y.program(6,u,t),contexts:[e,e],types:["STRING","ID"],data:t},a=n?n.call(e,"player","",r):b.call(e,"link-to","player","",r),(a||0===a)&&t.buffer.push(a),t.buffer.push(" "),a=s["if"].call(e,"bot",{hash:{},hashTypes:{},hashContexts:{},inverse:y.noop,fn:y.program(8,f,t),contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</li>\n            "),h}function u(e,t){var a,n;t.buffer.push(g((a=s["quake-name"]||e&&e["quake-name"],n={hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t},a?a.call(e,"name",n):b.call(e,"quake-name","name",n))))}function f(e,t){t.buffer.push("(bot)")}function i(e,t){var a,n;t.buffer.push(g((a=s["fromnow-date"]||e&&e["fromnow-date"],n={hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t},a?a.call(e,"stop",n):b.call(e,"fromnow-date","stop",n))))}function c(e,t){t.buffer.push('<span class="glyphicon glyphicon-ok"></span>')}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,a.Handlebars.helpers),r=r||{};var d,m="",b=s.helperMissing,g=this.escapeExpression,y=this;return r.buffer.push('<table class="table">\n    <tr>\n        <th>&nbsp;</th>\n        <th>Map name</th>\n        <th>Gametype</th>\n        <th>Players</th>\n        <th>Start</th>\n        <th>Stop</th>\n        <th><span '),r.buffer.push(g(s["bind-attr"].call(t,{hash:{"class":"isPolling::invisible :glyphicon :glyphicon-refresh"},hashTypes:{"class":"STRING"},hashContexts:{"class":t},contexts:[],types:[],data:r}))),r.buffer.push("></span></th>\n    </tr>\n    "),d=s.each.call(t,{hash:{},hashTypes:{},hashContexts:{},inverse:y.noop,fn:y.program(1,h,r),contexts:[],types:[],data:r}),(d||0===d)&&r.buffer.push(d),r.buffer.push("\n</table>"),m})}),define("arena/templates/games/loading",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Handlebars.template(function(e,t,s,n,r){this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,a.Handlebars.helpers),r=r||{},r.buffer.push("2 loading...")})}),define("arena/templates/index",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Handlebars.template(function(e,t,s,n,r){function h(e,t){var a,n,r,h="";return t.buffer.push("\n        <span "),t.buffer.push(y(s["bind-attr"].call(e,{hash:{"class":"isPolling::invisible :glyphicon :glyphicon-refresh"},hashTypes:{"class":"STRING"},hashContexts:{"class":e},contexts:[],types:[],data:t}))),t.buffer.push("></span>\n        <p>Current game:</p>\n        <img "),t.buffer.push(y(s["bind-attr"].call(e,{hash:{src:"gamemap.levelshot"},hashTypes:{src:"ID"},hashContexts:{src:e},contexts:[],types:[],data:t}))),t.buffer.push(' alt="levelshot" class="img-thumbnail" width="128" height="128">\n        <p>'),n=s["link-to"]||e&&e["link-to"],r={hash:{},hashTypes:{},hashContexts:{},inverse:x.noop,fn:x.program(2,o,t),contexts:[e,e],types:["STRING","ID"],data:t},a=n?n.call(e,"gamemap","gamemap",r):g.call(e,"link-to","gamemap","gamemap",r),(a||0===a)&&t.buffer.push(a),t.buffer.push(" - "),t.buffer.push(y((n=s["game-type"]||e&&e["game-type"],r={hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t},n?n.call(e,"gametype",r):g.call(e,"game-type","gametype",r)))),t.buffer.push("</p>\n        <p>Started: "),t.buffer.push(y((n=s["fromnow-date"]||e&&e["fromnow-date"],r={hash:{},hashTypes:{},hashContexts:{},contexts:[e,e],types:["ID","STRING"],data:t},n?n.call(e,"start","DD",r):g.call(e,"fromnow-date","start","DD",r)))),t.buffer.push("</p>\n        <p>players:</p>\n        <ul>\n            "),a=s.each.call(e,"players",{hash:{},hashTypes:{},hashContexts:{},inverse:x.program(10,i,t),fn:x.program(4,p,t),contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("\n        </ul>\n    "),h}function o(e,t){var a;a=s._triageMustache.call(e,"gamemap.name",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),t.buffer.push(a||0===a?a:"")}function p(e,t){var a,n="";return t.buffer.push("\n            "),a=s["if"].call(e,"online",{hash:{},hashTypes:{},hashContexts:{},inverse:x.noop,fn:x.program(5,l,t),contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("\n            "),n}function l(e,t){var a,n,r,h="";return t.buffer.push("\n            <li>"),n=s["link-to"]||e&&e["link-to"],r={hash:{},hashTypes:{},hashContexts:{},inverse:x.noop,fn:x.program(6,u,t),contexts:[e,e],types:["STRING","ID"],data:t},a=n?n.call(e,"player","",r):g.call(e,"link-to","player","",r),(a||0===a)&&t.buffer.push(a),t.buffer.push(" "),a=s["if"].call(e,"bot",{hash:{},hashTypes:{},hashContexts:{},inverse:x.noop,fn:x.program(8,f,t),contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push(" - "),a=s._triageMustache.call(e,"score",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</li>\n            "),h
}function u(e,t){var a,n;t.buffer.push(y((a=s["quake-name"]||e&&e["quake-name"],n={hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t},a?a.call(e,"name",n):g.call(e,"quake-name","name",n))))}function f(e,t){t.buffer.push("(bot)")}function i(e,t){t.buffer.push("\n            <li>no players</li>\n            ")}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,a.Handlebars.helpers),r=r||{};var c,d,m,b="",g=s.helperMissing,y=this.escapeExpression,x=this;return r.buffer.push('<div class="row">\n    <div class="col-md-6">\n        <p><a href="https://quake.ijohan.nl">Game Manager</a></p>\n        <p><a href="http://quake.brensen.com/api/1">API</a></p>\n        <p><a href="/stats">Stats</a></p>\n\n        <p>Join us every day around 12:30 at: quake.brensen.com, port 1200.</p>\n        <p>OpenArena version: 0.8.8 (<a href="http://www.openarena.ws/download.php?list.61">download</a>)</p>\n        <p>Be sure to enable downloading in your settings or some maps will not load <a target="_blank" href="http://openarena.wikia.com/wiki/Manual/Automatic_downloading#How_to_setup">instructions</a></p>\n    </div>\n    '),d=s["link-to"]||t&&t["link-to"],m={hash:{tagName:"div","class":"clickable col-md-6"},hashTypes:{tagName:"STRING","class":"STRING"},hashContexts:{tagName:t,"class":t},inverse:x.noop,fn:x.program(1,h,r),contexts:[t,t],types:["STRING","ID"],data:r},c=d?d.call(t,"game","",m):g.call(t,"link-to","game","",m),(c||0===c)&&r.buffer.push(c),r.buffer.push("\n</div>"),b})}),define("arena/templates/loading",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Handlebars.template(function(e,t,s,n,r){this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,a.Handlebars.helpers),r=r||{},r.buffer.push("loading...")})}),define("arena/templates/player",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Handlebars.template(function(e,t,s,n,r){function h(e,t){t.buffer.push("(bot)")}function o(e,t){var a,n="";return t.buffer.push("\n<p>Previous nicknames:</p>\n<ul>\n"),a=s.each.call(e,"names",{hash:{},hashTypes:{},hashContexts:{},inverse:m.noop,fn:m.program(4,p,t),contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("\n</ul>\n"),n}function p(e,t){var a,n,r="";return t.buffer.push("\n<li>"),t.buffer.push(d((a=s["quake-name"]||e&&e["quake-name"],n={hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t},a?a.call(e,"",n):c.call(e,"quake-name","",n)))),t.buffer.push("</li>\n"),r}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,a.Handlebars.helpers),r=r||{};var l,u,f,i="",c=s.helperMissing,d=this.escapeExpression,m=this;return r.buffer.push("<p>Nickname: "),r.buffer.push(d((u=s["quake-name"]||t&&t["quake-name"],f={hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r},u?u.call(t,"name",f):c.call(t,"quake-name","name",f)))),r.buffer.push(" "),l=s["if"].call(t,"bot",{hash:{},hashTypes:{},hashContexts:{},inverse:m.noop,fn:m.program(1,h,r),contexts:[t],types:["ID"],data:r}),(l||0===l)&&r.buffer.push(l),r.buffer.push("</p>\n<p>Headmodel: "),l=s._triageMustache.call(t,"headmodel",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(l||0===l)&&r.buffer.push(l),r.buffer.push("</p>\n"),l=s["if"].call(t,"names",{hash:{},hashTypes:{},hashContexts:{},inverse:m.noop,fn:m.program(3,o,r),contexts:[t],types:["ID"],data:r}),(l||0===l)&&r.buffer.push(l),i})}),define("arena/templates/players",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Handlebars.template(function(e,t,s,n,r){function h(e,t){var a,n,r,h="";return t.buffer.push("\n<tr>\n    <td>"),a=s["if"].call(e,"online",{hash:{},hashTypes:{},hashContexts:{},inverse:d.noop,fn:d.program(2,o,t),contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</td>\n    <td>"),n=s["link-to"]||e&&e["link-to"],r={hash:{},hashTypes:{},hashContexts:{},inverse:d.noop,fn:d.program(4,p,t),contexts:[e,e],types:["STRING","ID"],data:t},a=n?n.call(e,"player","",r):i.call(e,"link-to","player","",r),(a||0===a)&&t.buffer.push(a),t.buffer.push(" "),a=s["if"].call(e,"bot",{hash:{},hashTypes:{},hashContexts:{},inverse:d.noop,fn:d.program(6,l,t),contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</td>\n    <td>"),a=s._triageMustache.call(e,"team",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</td>\n    <td>"),a=s._triageMustache.call(e,"score",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</td>\n    <td>&nbsp;</td>\n</tr>\n"),h}function o(e,t){t.buffer.push('<span class="glyphicon glyphicon-ok"></span>')}function p(e,t){var a,n;t.buffer.push(c((a=s["quake-name"]||e&&e["quake-name"],n={hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t},a?a.call(e,"name",n):i.call(e,"quake-name","name",n))))}function l(e,t){t.buffer.push("(bot)")}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,a.Handlebars.helpers),r=r||{};var u,f="",i=s.helperMissing,c=this.escapeExpression,d=this;return r.buffer.push('<table class="table">\n<tr>\n    <th>Online</th>\n    <th>Name</th>\n    <th>Team</th>\n    <th>Score</th>\n    <th><span '),r.buffer.push(c(s["bind-attr"].call(t,{hash:{"class":"isPolling::invisible :glyphicon :glyphicon-refresh"},hashTypes:{"class":"STRING"},hashContexts:{"class":t},contexts:[],types:[],data:r}))),r.buffer.push("></span></th>\n</tr>\n"),u=s.each.call(t,{hash:{},hashTypes:{},hashContexts:{},inverse:d.noop,fn:d.program(1,h,r),contexts:[],types:[],data:r}),(u||0===u)&&r.buffer.push(u),r.buffer.push("\n</table>"),f})}),define("arena/templates/votes",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Handlebars.template(function(e,t,s,n,r){function h(e,t){var a,n,r,h="";return t.buffer.push("\n<tr>\n    <td>"),n=s["link-to"]||e&&e["link-to"],r={hash:{},hashTypes:{},hashContexts:{},inverse:d.noop,fn:d.program(2,o,t),contexts:[e,e],types:["STRING","ID"],data:t},a=n?n.call(e,"player","player",r):i.call(e,"link-to","player","player",r),(a||0===a)&&t.buffer.push(a),t.buffer.push("</td>\n    <td>"),n=s["link-to"]||e&&e["link-to"],r={hash:{},hashTypes:{},hashContexts:{},inverse:d.noop,fn:d.program(4,p,t),contexts:[e,e],types:["STRING","ID"],data:t},a=n?n.call(e,"game","game",r):i.call(e,"link-to","game","game",r),(a||0===a)&&t.buffer.push(a),t.buffer.push("</td>\n    <td>"),n=s["link-to"]||e&&e["link-to"],r={hash:{},hashTypes:{},hashContexts:{},inverse:d.noop,fn:d.program(6,l,t),contexts:[e,e],types:["STRING","ID"],data:t},a=n?n.call(e,"gamemap","gamemap",r):i.call(e,"link-to","gamemap","gamemap",r),(a||0===a)&&t.buffer.push(a),t.buffer.push("</td>\n    <td>"),t.buffer.push(c((n=s["game-type"]||e&&e["game-type"],r={hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t},n?n.call(e,"gametype",r):i.call(e,"game-type","gametype",r)))),t.buffer.push("</td>\n    <td>"),a=s._triageMustache.call(e,"vote",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</td>\n    <td>"),t.buffer.push(c((n=s["format-date"]||e&&e["format-date"],r={hash:{},hashTypes:{},hashContexts:{},contexts:[e,e],types:["ID","STRING"],data:t},n?n.call(e,"_created","LLL",r):i.call(e,"format-date","_created","LLL",r)))),t.buffer.push("</td>\n    <td>&nbsp;</td>\n</tr\n"),h}function o(e,t){var a,n;t.buffer.push(c((a=s["quake-name"]||e&&e["quake-name"],n={hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t},a?a.call(e,"player.name",n):i.call(e,"quake-name","player.name",n))))}function p(e,t){var a,n,r,h="";return a=s._triageMustache.call(e,"game.gamemap.name",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push(" ("),t.buffer.push(c((n=s["game-type"]||e&&e["game-type"],r={hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t},n?n.call(e,"game.gametype",r):i.call(e,"game-type","game.gametype",r)))),t.buffer.push(")"),h}function l(e,t){var a;a=s._triageMustache.call(e,"gamemap.name",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),t.buffer.push(a||0===a?a:"")}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,a.Handlebars.helpers),r=r||{};var u,f="",i=s.helperMissing,c=this.escapeExpression,d=this;return r.buffer.push('<table class="table">\n<tr>\n    <th>Player</th>\n    <th>Game</th>\n    <th>Map</th>\n    <th>Gametype</th>\n    <th>Vote</th>\n    <th>Created</th>\n    <th><span '),r.buffer.push(c(s["bind-attr"].call(t,{hash:{"class":"isPolling::invisible :glyphicon :glyphicon-refresh"},hashTypes:{"class":"STRING"},hashContexts:{"class":t},contexts:[],types:[],data:r}))),r.buffer.push("></span></th>\n</tr>\n"),u=s.each.call(t,{hash:{},hashTypes:{},hashContexts:{},inverse:d.noop,fn:d.program(1,h,r),contexts:[],types:[],data:r}),(u||0===u)&&r.buffer.push(u),r.buffer.push("\n</table>"),f})}),define("arena/transforms/dict",["ember-data","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Transform.extend({deserialize:function(e){var t=[];for(var a in e)t.push({name:a,value:e[a]});return t},serialize:function(e){return e}})}),define("arena/transforms/epoch",["ember-data","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Transform.extend({deserialize:function(e){return e?moment.unix(e).toDate():null},serialize:function(e){return moment(e).format("X.SS")}})}),define("arena/transforms/raw",["ember-data","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Transform.extend({deserialize:function(e){return e},serialize:function(e){return e}})});