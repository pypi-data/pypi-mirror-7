define("arena/adapters/application",["ember-data","ember","exports"],function(e,t,a){"use strict";var s=e["default"],n=t["default"];a["default"]=s.RESTAdapter.extend({host:ArenaENV.api_endpoint,namespace:"api/1",ajax:function(e,t,a){return n.isEmpty(a)&&(a={}),n.isEmpty(a.data)&&(a.data={}),a.data.ts=(new Date).getTime(),this._super(e,t,a)}})}),define("arena/app",["ember","ember/resolver","ember/load-initializers","exports"],function(e,t,a,s){"use strict";var n=e["default"],r=t["default"],h=a["default"];n.MODEL_FACTORY_INJECTIONS=!0;var u=n.Application.extend({modulePrefix:"arena",Resolver:r});h(u,"arena"),s["default"]=u}),define("arena/controllers/games",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.ArrayController.extend({sortProperties:["_updated"],sortAscending:!1})}),define("arena/controllers/players",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.ArrayController.extend({sortProperties:["online","team","score"],sortAscending:!1})}),define("arena/helpers/quake-name",["ember","exports"],function(e,t){"use strict";var a=e["default"],s=function(e){var t=a.Handlebars.Utils.escapeExpression(e);return t=t.replace(/\^([0-9])/g,'</span><span class="quake-color-$1">'),t='<span class="quake-color-0">'+t+"</span>",new a.Handlebars.SafeString(t)},n=a.Handlebars.makeBoundHelper(s);n.helper=s,t["default"]=n}),define("arena/models/game",["ember-data","exports"],function(e,t){"use strict";var a=e["default"],s=a.Model.extend({mapname:a.attr("string"),gametype:a.attr("number"),current:a.attr("boolean"),start:a.attr("epoch"),stop:a.attr("epoch"),players:a.hasMany("player",{async:!0}),_updated:a.attr("date"),options:a.attr("dict")});s.reopenClass({FIXTURES:[{id:1,map:"awesomemap",current:!0,players:["2394808AFSDFAFS","23948ASDF08AFSDFAFS"],start:moment().toDate(),stop:null},{id:2,map:"lastmap",current:!1,start:moment().subtract("hour").toDate(),stop:moment().toDate()}]}),t["default"]=s}),define("arena/models/player",["ember-data","exports"],function(e,t){"use strict";var a=e["default"],s=a.Model.extend({name:a.attr("string"),team:a.attr("string"),online:a.attr("boolean"),score:a.attr("number"),names:a.attr("raw"),_updated:a.attr("date")});s.reopenClass({FIXTURES:[{id:"2394808AFSDFAFS",name:"-[aequitas]-",team:"red",online:!0,score:42,names:["old_nickname"]},{id:"23948ASDF08AFSDFAFS",name:"n^100^0b",team:"red",online:!0,score:0},{id:"23948SFADFJKLASDF08AFSDFAFS",name:"colors^11^22^33^44^55^66^77^0w00t",team:"",online:!1,score:0}]}),t["default"]=s}),define("arena/models/vote",["ember-data","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Model.extend({vote:a.attr("number"),player:a.belongsTo("player",{async:!0}),game:a.belongsTo("game",{async:!0}),_updated:a.attr("date")})}),define("arena/router",["ember","exports"],function(e,t){"use strict";var a=e["default"],s=a.Router.extend({location:ArenaENV.locationType});s.map(function(){this.resource("games"),this.resource("players"),this.resource("player",{path:"/players/:player_id"}),this.resource("votes"),this.resource("game",{path:"/games/:game_id"})}),t["default"]=s}),define("arena/routes/game",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Route.extend({})}),define("arena/routes/games",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Route.extend({model:function(){return this.store.find("game",{max_results:15,sort:'[("updated",-1)]'})},activate:function(){this.poll()},deactivate:function(){a.run.cancel(this.get("poll_inst"))},poll:function(){var e=this,t=a.run.later(function(){e.refresh(),e.poll()},1e4);this.set("poll_inst",t)}})}),define("arena/routes/player",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Route.extend({setupController:function(e,t){this._super(e,t),this.poll(t)},deactivate:function(){a.run.cancel(this.get("poll_inst"))},poll:function(e){var t=this,s=a.run.later(function(){e.reload(),t.poll(e)},5e3);this.set("poll_inst",s)}})}),define("arena/routes/players",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Route.extend({model:function(){return this.store.find("player",{max_results:30,sort:'[("updated",-1)]'})},activate:function(){this.poll()},deactivate:function(){a.run.cancel(this.get("poll_inst"))},poll:function(){var e=this,t=a.run.later(function(){e.refresh(),e.poll()},5e3);this.set("poll_inst",t)}})}),define("arena/routes/votes",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Route.extend({model:function(){return this.store.find("vote",{max_results:15,sort:'[("updated",-1)]'})}})}),define("arena/serializers/application",["ember-data","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.RESTSerializer.extend({extractArray:function(e,t,a){return a[t.typeKey]=a._items,delete a._items,delete a._links,this._super(e,t,a)},extractSingle:function(e,t,a,s){var n={};return n[t.typeKey]=a,this._super(e,t,n,s)},extractMeta:function(e,t,a){return a._meta&&(a.meta=a._meta,delete a._meta),this._super(e,t,a)},primaryKey:"_id"})}),define("arena/templates/_navbar",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Handlebars.template(function(e,t,s,n,r){function h(e,t){var a,n,r,h="";return t.buffer.push("\n            "),n=s["link-to"]||e&&e["link-to"],r={hash:{bubbles:!1},hashTypes:{bubbles:"BOOLEAN"},hashContexts:{bubbles:e},inverse:b.noop,fn:b.program(2,u,t),contexts:[e],types:["STRING"],data:t},a=n?n.call(e,"players",r):y.call(e,"link-to","players",r),(a||0===a)&&t.buffer.push(a),t.buffer.push("\n        "),h}function u(e,t){t.buffer.push("\n                Players\n            ")}function o(e,t){var a,n,r,h="";return t.buffer.push("\n            "),n=s["link-to"]||e&&e["link-to"],r={hash:{bubbles:!1},hashTypes:{bubbles:"BOOLEAN"},hashContexts:{bubbles:e},inverse:b.noop,fn:b.program(5,l,t),contexts:[e],types:["STRING"],data:t},a=n?n.call(e,"games",r):y.call(e,"link-to","games",r),(a||0===a)&&t.buffer.push(a),t.buffer.push("\n        "),h}function l(e,t){t.buffer.push("\n                Games\n            ")}function p(e,t){var a,n,r,h="";return t.buffer.push("\n            "),n=s["link-to"]||e&&e["link-to"],r={hash:{bubbles:!1},hashTypes:{bubbles:"BOOLEAN"},hashContexts:{bubbles:e},inverse:b.noop,fn:b.program(8,f,t),contexts:[e],types:["STRING"],data:t},a=n?n.call(e,"votes",r):y.call(e,"link-to","votes",r),(a||0===a)&&t.buffer.push(a),t.buffer.push("\n        "),h}function f(e,t){t.buffer.push("\n                Votes\n            ")}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,a.Handlebars.helpers),r=r||{};var i,c,d,m="",b=this,y=s.helperMissing;return r.buffer.push('<nav class="navbar navbar-default" role="navigation">\n  <div class="container-fluid">\n    <!-- Brand and toggle get grouped for better mobile display -->\n    <div class="navbar-header">\n      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">\n        <span class="sr-only">Toggle navigation</span>\n        <span class="icon-bar"></span>\n        <span class="icon-bar"></span>\n        <span class="icon-bar"></span>\n      </button>\n      <a class="navbar-brand" href="#">Munerator</a>\n    </div>\n\n    <!-- Collect the nav links, forms, and other content for toggling -->\n    <div class="collapse navbar-collapse in" id="bs-example-navbar-collapse-1">\n      <ul class="nav navbar-nav">\n        '),c=s["link-to"]||t&&t["link-to"],d={hash:{tagName:"li",href:!1},hashTypes:{tagName:"STRING",href:"BOOLEAN"},hashContexts:{tagName:t,href:t},inverse:b.noop,fn:b.program(1,h,r),contexts:[t],types:["STRING"],data:r},i=c?c.call(t,"players",d):y.call(t,"link-to","players",d),(i||0===i)&&r.buffer.push(i),r.buffer.push("\n        "),c=s["link-to"]||t&&t["link-to"],d={hash:{tagName:"li",href:!1},hashTypes:{tagName:"STRING",href:"BOOLEAN"},hashContexts:{tagName:t,href:t},inverse:b.noop,fn:b.program(4,o,r),contexts:[t],types:["STRING"],data:r},i=c?c.call(t,"games",d):y.call(t,"link-to","games",d),(i||0===i)&&r.buffer.push(i),r.buffer.push("\n        "),c=s["link-to"]||t&&t["link-to"],d={hash:{tagName:"li",href:!1},hashTypes:{tagName:"STRING",href:"BOOLEAN"},hashContexts:{tagName:t,href:t},inverse:b.noop,fn:b.program(7,p,r),contexts:[t],types:["STRING"],data:r},i=c?c.call(t,"votes",d):y.call(t,"link-to","votes",d),(i||0===i)&&r.buffer.push(i),r.buffer.push("\n  </div><!-- /.container-fluid -->\n</nav>"),m})}),define("arena/templates/application",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Handlebars.template(function(e,t,s,n,r){this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,a.Handlebars.helpers),r=r||{};var h,u,o,l="",p=s.helperMissing,f=this.escapeExpression;return r.buffer.push(f((u=s.partial||t&&t.partial,o={hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["STRING"],data:r},u?u.call(t,"navbar",o):p.call(t,"partial","navbar",o)))),r.buffer.push("\n"),h=s._triageMustache.call(t,"outlet",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(h||0===h)&&r.buffer.push(h),l})}),define("arena/templates/game",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Handlebars.template(function(e,t,s,n,r){function h(e,t){var a,n,r,h="";return t.buffer.push("\n<li>"),n=s["link-to"]||e&&e["link-to"],r={hash:{},hashTypes:{},hashContexts:{},inverse:c.noop,fn:c.program(2,u,t),contexts:[e,e],types:["STRING","ID"],data:t},a=n?n.call(e,"player","",r):f.call(e,"link-to","player","",r),(a||0===a)&&t.buffer.push(a),t.buffer.push("</li>\n"),h}function u(e,t){var a,n;t.buffer.push(i((a=s["quake-name"]||e&&e["quake-name"],n={hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t},a?a.call(e,"name",n):f.call(e,"quake-name","name",n))))}function o(e,t){var a,n="";return t.buffer.push("\n<li>"),a=s._triageMustache.call(e,"option.name",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push(" - "),a=s._triageMustache.call(e,"option.value",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</li>\n"),n}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,a.Handlebars.helpers),r=r||{};var l,p="",f=s.helperMissing,i=this.escapeExpression,c=this;return r.buffer.push("<p>map: "),l=s._triageMustache.call(t,"mapname",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(l||0===l)&&r.buffer.push(l),r.buffer.push("</p>\n<p>gametype: "),l=s._triageMustache.call(t,"gametype",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(l||0===l)&&r.buffer.push(l),r.buffer.push("</p>\n<p>players:</p>\n<ul>\n"),l=s.each.call(t,"players",{hash:{},hashTypes:{},hashContexts:{},inverse:c.noop,fn:c.program(1,h,r),contexts:[t],types:["ID"],data:r}),(l||0===l)&&r.buffer.push(l),r.buffer.push("\n</ul>\n<p>started: "),l=s._triageMustache.call(t,"start",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(l||0===l)&&r.buffer.push(l),r.buffer.push("</p>\n<p>ended: "),l=s._triageMustache.call(t,"stop",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(l||0===l)&&r.buffer.push(l),r.buffer.push("</p>\n<p>game options:</p>\n<ul>\n"),l=s.each.call(t,"option","in","options",{hash:{},hashTypes:{},hashContexts:{},inverse:c.noop,fn:c.program(4,o,r),contexts:[t,t,t],types:["ID","ID","ID"],data:r}),(l||0===l)&&r.buffer.push(l),r.buffer.push("\n</ul>"),p})}),define("arena/templates/games",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Handlebars.template(function(e,t,s,n,r){function h(e,t){var a,n,r,h="";return t.buffer.push("\n"),n=s["link-to"]||e&&e["link-to"],r={hash:{tagName:"tr"},hashTypes:{tagName:"STRING"},hashContexts:{tagName:e},inverse:m.noop,fn:m.program(2,u,t),contexts:[e,e],types:["STRING","ID"],data:t},a=n?n.call(e,"game","",r):c.call(e,"link-to","game","",r),(a||0===a)&&t.buffer.push(a),t.buffer.push("\n"),h}function u(e,t){var a,n="";return t.buffer.push("\n    <td>"),a=s._triageMustache.call(e,"_updated",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),a=s["if"].call(e,"current",{hash:{},hashTypes:{},hashContexts:{},inverse:m.noop,fn:m.program(3,o,t),contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</td>\n    <td>"),a=s._triageMustache.call(e,"mapname",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</td>\n    <td>"),a=s._triageMustache.call(e,"gametype",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</td>\n    <td>\n    <ul>\n    "),a=s.each.call(e,"players",{hash:{},hashTypes:{},hashContexts:{},inverse:m.noop,fn:m.program(5,l,t),contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("\n    </ul\n    </td>\n    <td>"),a=s._triageMustache.call(e,"start",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</td>\n    <td>"),a=s._triageMustache.call(e,"stop",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</td>\n"),n}function o(e,t){t.buffer.push('<span class="glyphicon glyphicon-ok"></span>')}function l(e,t){var a,n,r,h="";return t.buffer.push("\n    <li>"),n=s["link-to"]||e&&e["link-to"],r={hash:{},hashTypes:{},hashContexts:{},inverse:m.noop,fn:m.program(6,p,t),contexts:[e,e],types:["STRING","ID"],data:t},a=n?n.call(e,"player","",r):c.call(e,"link-to","player","",r),(a||0===a)&&t.buffer.push(a),t.buffer.push("</li>\n    "),h}function p(e,t){var a,n;t.buffer.push(d((a=s["quake-name"]||e&&e["quake-name"],n={hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t},a?a.call(e,"name",n):c.call(e,"quake-name","name",n))))}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,a.Handlebars.helpers),r=r||{};var f,i="",c=s.helperMissing,d=this.escapeExpression,m=this;return r.buffer.push('<table class="table">\n<tr>\n    <th>Current</th>\n    <th>Map name</th>\n    <th>Gametype</th>\n    <th>Players</th>\n    <th>Start</th>\n    <th>Stop</th>\n</tr>\n'),f=s.each.call(t,{hash:{},hashTypes:{},hashContexts:{},inverse:m.noop,fn:m.program(1,h,r),contexts:[],types:[],data:r}),(f||0===f)&&r.buffer.push(f),r.buffer.push("\n</table>"),i})}),define("arena/templates/index",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Handlebars.template(function(e,t,s,n,r){this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,a.Handlebars.helpers),r=r||{},r.buffer.push('<p><a href="https://quake.ijohan.nl">Game Manager</a></p>\n<p><a href="http://quake.brensen.com/api/1">API</a></p>\n<p><a href="/stats">Stats</a></p>\n\n<p>Join us every day around 12:30 at: quake.brensen.com, port 1200.</p>\n<p>OpenArena version: 0.8.8 (<a href="http://www.openarena.ws/download.php?list.61">download</a>)</p>\n<p>Be sure to enable downloading in your settings or some maps will not load <a target="_blank" href="http://openarena.wikia.com/wiki/Manual/Automatic_downloading#How_to_setup">instructions</a></p>')})}),define("arena/templates/maps",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Handlebars.template(function(e,t,s,n,r){function h(e,t){var a,n="";return t.buffer.push("\n        <li>\n          <label>"),a=s._triageMustache.call(e,"name",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</label>("),a=s._triageMustache.call(e,"current",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push(")\n        </li>\n        "),n}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,a.Handlebars.helpers),r=r||{};var u,o="",l=this;return r.buffer.push('<section id="maps">\n<h3>Maps</h3>\n    <ul id="map-list">\n        '),u=s.each.call(t,{hash:{},hashTypes:{},hashContexts:{},inverse:l.noop,fn:l.program(1,h,r),contexts:[],types:[],data:r}),(u||0===u)&&r.buffer.push(u),r.buffer.push("\n    </ul>\n</section>"),o})}),define("arena/templates/player",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Handlebars.template(function(e,t,s,n,r){function h(e,t){var a,n="";return t.buffer.push("\n<p>Previous nicknames:</p>\n<ul>\n"),a=s.each.call(e,"names",{hash:{},hashTypes:{},hashContexts:{},inverse:d.noop,fn:d.program(2,u,t),contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("\n</ul>\n"),n}function u(e,t){var a,n,r="";return t.buffer.push("\n<li>"),t.buffer.push(c((a=s["quake-name"]||e&&e["quake-name"],n={hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t},a?a.call(e,"",n):i.call(e,"quake-name","",n)))),t.buffer.push("</li>\n"),r}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,a.Handlebars.helpers),r=r||{};var o,l,p,f="",i=s.helperMissing,c=this.escapeExpression,d=this;return r.buffer.push("<p>Nickname: "),r.buffer.push(c((l=s["quake-name"]||t&&t["quake-name"],p={hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r},l?l.call(t,"name",p):i.call(t,"quake-name","name",p)))),r.buffer.push("</p>\n"),o=s["if"].call(t,"names",{hash:{},hashTypes:{},hashContexts:{},inverse:d.noop,fn:d.program(1,h,r),contexts:[t],types:["ID"],data:r}),(o||0===o)&&r.buffer.push(o),f})}),define("arena/templates/players",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Handlebars.template(function(e,t,s,n,r){function h(e,t){var a,n,r,h="";return t.buffer.push("\n<tr>\n    <td>"),a=s["if"].call(e,"online",{hash:{},hashTypes:{},hashContexts:{},inverse:c.noop,fn:c.program(2,u,t),contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</td>\n    <td>"),n=s["link-to"]||e&&e["link-to"],r={hash:{},hashTypes:{},hashContexts:{},inverse:c.noop,fn:c.program(4,o,t),contexts:[e,e],types:["STRING","ID"],data:t},a=n?n.call(e,"player","",r):f.call(e,"link-to","player","",r),(a||0===a)&&t.buffer.push(a),t.buffer.push("</td>\n    <td>"),a=s._triageMustache.call(e,"team",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</td>\n    <td>"),a=s._triageMustache.call(e,"score",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</td>\n</tr>\n"),h}function u(e,t){t.buffer.push('<span class="glyphicon glyphicon-ok"></span>')}function o(e,t){var a,n;t.buffer.push(i((a=s["quake-name"]||e&&e["quake-name"],n={hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t},a?a.call(e,"name",n):f.call(e,"quake-name","name",n))))}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,a.Handlebars.helpers),r=r||{};var l,p="",f=s.helperMissing,i=this.escapeExpression,c=this;return r.buffer.push('<table class="table">\n<tr>\n    <th>Online</th>\n    <th>Name</th>\n    <th>Team</th>\n    <th>Score</th>\n</tr>\n'),l=s.each.call(t,{hash:{},hashTypes:{},hashContexts:{},inverse:c.noop,fn:c.program(1,h,r),contexts:[],types:[],data:r}),(l||0===l)&&r.buffer.push(l),r.buffer.push("\n</table>"),p})}),define("arena/templates/votes",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Handlebars.template(function(e,t,s,n,r){function h(e,t){var a,n,r,h="";return t.buffer.push("\n<tr>\n    <td>"),n=s["link-to"]||e&&e["link-to"],r={hash:{},hashTypes:{},hashContexts:{},inverse:c.noop,fn:c.program(2,u,t),contexts:[e,e],types:["STRING","ID"],data:t},a=n?n.call(e,"player","player",r):f.call(e,"link-to","player","player",r),(a||0===a)&&t.buffer.push(a),t.buffer.push("</td>\n    <td>"),n=s["link-to"]||e&&e["link-to"],r={hash:{},hashTypes:{},hashContexts:{},inverse:c.noop,fn:c.program(4,o,t),contexts:[e,e],types:["STRING","ID"],data:t},a=n?n.call(e,"game","game",r):f.call(e,"link-to","game","game",r),(a||0===a)&&t.buffer.push(a),t.buffer.push("</td>\n    <td>"),a=s._triageMustache.call(e,"vote",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</td>\n    <td>"),a=s._triageMustache.call(e,"created_at",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</td>\n</tr>\n"),h}function u(e,t){var a,n;t.buffer.push(i((a=s["quake-name"]||e&&e["quake-name"],n={hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t},a?a.call(e,"player.name",n):f.call(e,"quake-name","player.name",n))))}function o(e,t){var a;a=s._triageMustache.call(e,"game.mapname",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),t.buffer.push(a||0===a?a:"")}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,a.Handlebars.helpers),r=r||{};var l,p="",f=s.helperMissing,i=this.escapeExpression,c=this;return r.buffer.push('<table class="table">\n<tr>\n    <th>Player</th>\n    <th>Game</th>\n    <th>Vote</th>\n    <th>Created</th>\n</tr>\n'),l=s.each.call(t,{hash:{},hashTypes:{},hashContexts:{},inverse:c.noop,fn:c.program(1,h,r),contexts:[],types:[],data:r}),(l||0===l)&&r.buffer.push(l),r.buffer.push("\n</table>"),p})}),define("arena/transforms/dict",["ember-data","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Transform.extend({deserialize:function(e){var t=[];for(var a in e)t.push({name:a,value:e[a]});return t},serialize:function(e){return e}})}),define("arena/transforms/epoch",["ember-data","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Transform.extend({deserialize:function(e){return e?moment.unix(e).toDate():null},serialize:function(e){return moment(e).format("X.SS")}})}),define("arena/transforms/raw",["ember-data","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Transform.extend({deserialize:function(e){return e},serialize:function(e){return e}})});