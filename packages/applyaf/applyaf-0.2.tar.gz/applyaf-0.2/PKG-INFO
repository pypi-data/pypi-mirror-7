Metadata-Version: 1.1
Name: applyaf
Version: 0.2
Summary: Apply antenna factor and cable loss tospectrum analyzer measurements
Home-page: http://github.com/questrail/applyaf
Author: Matthew Rankin
Author-email: matthew@questrail.com
License: LICENSE.txt
Description: applyaf
        =======
        
        |Build Status| |PyPi Version| |Coverage Status|
        
        applyaf is a Python (2.6+/3.3+) module that applies frequency dependent
        antenna factors and cable losses to spectrum analyzer readings in order
        to calculate the incident field. Any duplicate frequency entries in the
        antenna factors or cable losses data are removed before interpolating
        the frequencies to match those of the spectrum analyzer readings.
        
        Inputs
        ------
        
        Three csv files containing the following are required inputs:
        
        1. Spectrum analyzer measurements
        2. Antenna factor data
        3. Cable loss data
        
        Each CSV file should contain data in two columns:
        
        1. Frequency
        2. Amplitude
        
        The amplitude is expected to be in dB.
        
        Requirements
        ------------
        
        -  `numpy <http://www.numpy.org>`__
        -  ``csv`` module from the `Python Standard
           Library <https://docs.python.org/2/library/>`__
        -  ``os`` module from the `Python Standard
           Library <https://docs.python.org/2/library/>`__
        
        Future Improvements
        -------------------
        
        Some thoughts for future improvements include:
        
        1. Allowing CSV data files that contain non-dB amplitudes and then
           convert as needed. Should this be a per-file setting?
        2. Generalize the code to handle a variable number (>3) of data to be
           interpolated and applied to the given data set.
        3. If the code is generalized, should this be wrapped into the
           `siganalysis <https://github.com/questrail/siganalysis>`__ project or
           left on its own?
        
        Contributing
        ------------
        
        `applyaf <https://github.com/questrail/applyaf>`__ is developed using
        `Scott Chacon <http://scottchacon.com/about.html>`__'s `GitHub
        Flow <http://scottchacon.com/2011/08/31/github-flow.html>`__. To
        contribute, fork `applyaf <https://github.com/questrail/applyaf>`__,
        create a feature branch, and then submit a pull request. `GitHub
        Flow <http://scottchacon.com/2011/08/31/github-flow.html>`__ is
        summarized as:
        
        -  Anything in the ``master`` branch is deployable
        -  To work on something new, create a descriptively named branch off of
           ``master`` (e.g., ``new-oauth2-scopes``)
        -  Commit to that branch locally and regularly push your work to the
           same named branch on the server
        -  When you need feedback or help, or you think the brnach is ready for
           merging, open a `pull
           request <https://help.github.com/articles/using-pull-requests>`__.
        -  After someone else has reviewed and signed off on the feature, you
           can merge it into master.
        -  Once it is merged and pushed to ``master``, you can and *should*
           deploy immediately.
        
        License
        =======
        
        `applyaf <https://github.com/questrail/applyaf>`__ is released under the
        MIT license. Please see the
        `LICENSE.txt <https://github.com/questrail/applyaf/blob/develop/LICENSE.txt>`__
        file for more information.
        
        .. |Build Status| image:: https://travis-ci.org/questrail/applyaf.png
           :target: https://travis-ci.org/questrail/applyaf
        .. |PyPi Version| image:: https://badge.fury.io/py/applyaf.png
           :target: http://badge.fury.io/py/applyaf
        .. |Coverage Status| image:: https://coveralls.io/repos/questrail/applyaf/badge.png
           :target: https://coveralls.io/r/questrail/applyaf
        
Platform: UNKNOWN
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: License :: OSI Approved :: MIT License
Classifier: Development Status :: 3 - Alpha
Classifier: Operating System :: OS Independent
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires: numpy (>=1.6.0)
