Metadata-Version: 1.1
Name: pysftp
Version: 0.2.6
Summary: A friendly face on SFTP
Home-page: https://bitbucket.org/dundeemt/pysftp
Author: Jeff Hinrichs
Author-email: jeffh@dundeemt.com
License: BSD
Download-URL: https://pypi.python.org/pypi/pysftp
Description: pysftp
        ======
        
        A simple interface to sftp.  based on zeth's ssh.py
        
        Example
        -------
        ::
        
            import pysftp
        
            with pysftp.Connection('my.example.server') as sftp:
                sftp.put('/my/local/filename', '/my/remote/filename')
                sftp.get('the-file.txt')
        
        
        Supports
        --------
        Tested on Python 2.7, 3.2, 3.3
        
        .. image:: https://drone.io/bitbucket.org/dundeemt/pysftp/status.png
            :target: https://drone.io/bitbucket.org/dundeemt/pysftp/latest
            :alt: Build Status
        
        Believed to support Python 3.4
        
        * Project:  https://bitbucket.org/dundeemt/pysftp
        * Download: https://pypi.python.org/pypi/pysftp
        * Documentation: https://pysftp.rtfd.org/
        
        Change Log
        ----------
        
        
        * 0.2.6 (dev)
        
          * added ``preserve_mtime`` parameter to ``.put``, optionally updates the remote file's st_mtime to match the local file.
          * added ``preserve_mtime`` parameter to ``.get``, optionally updates the local file's st_mtime to match the remote file
          * added ``.exists`` and ``.lexists``, use ``.stat`` and ``.lstat`` respectively
          * added ``.symlink``
          * added ``.isdir``, ``.isfile``, ``.makedirs``
          * added ``.chmod``
          * added ``.chown``
          * added ``.sftp_client`` which exposes underlying, active ``SFTPClient`` object for advance use
        
        * 0.2.5 (current, released 2014-05-15)
        
          * added ``ciphers`` parameter to ``.Connection`` object
          * added ``.active_ciphers`` to return local and remote cipher in use
          * added ``.security_options``, where you can get available ciphers, among other information
          * enhanced logging, and added documentation and tests
        
        * 0.2.4 (released 2014-05-13)
        
          * ``.Connection`` can be used in a ``with`` statement
          * add ``.remove``
          * added support for callback and confirm params to ``.put``
          * added support for callback on ``.get``
          * added support for ``.open``
          * fixed password bug and now differentiates between an empty string and None
          * added support for ``paramiko.AgentKey`` to be passed in as the ``private_key`` for Connection
          * added support for ``.mkdir``
          * added support for ``.rmdir``
          * added support for ``.stat`` and ``.lstat``
          * added helper function, ``.st_mode_to_int``,to convert the ``st_mode`` value back into a common integer representation
          * added ``.getfo``
          * added ``.putfo``
        
        * 0.2.3 (released 2014-05-10)
        
          * host code on pypi to keep pip happy
          * move code to bitbucket
          * enhance testing
          * README.rst and LICENSE named properly
          * cleaner error handling
        
        * 0.2.2
        
          * additions
        
            * chdir(self, path) - change the current working directory on the remote
            * getcwd(self) - return the current working directory on the remote
            * listdir(self, path='.')return a list of files for the given path
        
Keywords: sftp ssh ftp internet
Platform: any
Classifier: Development Status :: 4 - Beta
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.2
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: Implementation :: CPython
