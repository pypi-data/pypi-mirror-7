Metadata-Version: 1.1
Name: sesame
Version: 0.3.3
Summary: Encryption tool for application configs.
Home-page: http://github.com/mafrosis/sesame
Author: Matt Black
Author-email: dev@mafro.net
License: Copyright (c) 2013, Matt Black
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met: 

1. Redistributions of source code must retain the above copyright notice, this
   list of conditions and the following disclaimer. 
2. Redistributions in binary form must reproduce the above copyright notice,
   this list of conditions and the following disclaimer in the documentation
   and/or other materials provided with the distribution. 

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

The views and conclusions contained in the software and documentation are those
of the authors and should not be interpreted as representing official policies, 
either expressed or implied, of the FreeBSD Project.

Description: Sesame: config file encryption
        ==============================
        
        Almost all applications have configuration of some kind, and often this config 
        is sensitive - database passwords, SMTP account details, API keys etc.
        
        These days it's common to use public source control; which means you can no
        longer store your application's sensitive config with your code.
        
        Sesame provides a simple way to encrypt (and decrypt) your application's config
        so it can be safely stored in public source control.
        
        
        Cryptography
        ------------
        
        Sesame leans on a little known project called `keyczar <http://www.keyczar.org/>`_,
        which was originally built by members of the Google Security Team.
        
        Keyczar in turn builds upon `pycrypto <https://pypi.python.org/pypi/pycrypto>`_
        which aims to provide sane defaults for your Python crypto.
        
        
        Installation
        ------------
        
        To install ``sesame``, simply:
        
        .. code-block:: bash
        
            $ pip install --pre sesame
        
        Since pip version 1.4 the ``--pre`` parameter is necessary since ``keyczar`` is
        still an alpha release. People using earlier versions of pip can omit the
        ``--pre``.
        
        
        Usage
        -----
        
        The interface to Sesame intentionally resembles that of ``tar``. There are only two
        sub-commands: ``encrypt`` and ``decrypt`` as described below:
        
        .. code-block:: bash
        
            usage: sesame encrypt [-h] [-k KEYFILE] [-f]
                                  outputfile inputfile [inputfile ...]
        
            positional arguments:
              outputfile            Encrypted file to be created
              inputfile             Files to be encrypted
        
            optional arguments:
              -h, --help            show this help message and exit
              -k KEYFILE, --keyfile KEYFILE
                                    Path to keyczar encryption key
              -f, --force           Force overwrite of existing encrypted file
        
        .. code-block:: bash
        
            usage: sesame decrypt [-h] [-k KEYFILE] [-f] [-O OUTPUT_DIR] [-T] inputfile
        
            positional arguments:
              inputfile             File to be decrypted
        
            optional arguments:
              -h, --help            show this help message and exit
              -k KEYFILE, --keyfile KEYFILE
                                    Path to keyczar encryption key
              -f, --force           Force overwrite of existing decrypted file
              -O OUTPUT_DIR, --output-dir OUTPUT_DIR
                                    Extract files into a specific directory
              -T, --try-all         Search for keys from current directory and try all of
                                    them
        
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: System Administrators
Classifier: Natural Language :: English
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
