#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os

import tornado.ioloop
import tornado.options
from tornado.options import options, define

define("address", default="localhost", help="run on the given address")
define("port", default=8888, help="run on the given port", type=int)
define("dir", help="dir with api definitions")
define("debug", help="", default=False, type=bool)
define("application_data", help="Application data file",
       default="application.json")


def command_line_options():
    tornado.options.parse_command_line()

    if options.dir is None:
        print("!! Specify API directory (--dir=/directory/for/api)\n")
        tornado.options.print_help()
        return False
    elif not options.dir.endswith(os.path.sep):
        options.dir = "%s%s" % (options.dir, os.path.sep)

    if not os.path.exists(options.dir):
        print("Error: Directory: '%s' doesn't exists" % options.dir)
        return False

    return True


def main():
    if not command_line_options():
        return

    if options.debug:
        parentdir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
        os.sys.path.insert(0, parentdir)

    try:
        from mock_server.application import Application
    except ImportError, e:
        if options.debug:
            raise
        print("%s\nTry run with --debug" % str(e))
        return

    app = Application(options.port, options.address,
                      options.dir, options.debug, options.application_data)
    print("Serving on %s:%s.." % (options.address, options.port))
    app.listen(options.port, options.address)
    tornado.ioloop.IOLoop.instance().start()


if __name__ == "__main__":
    main()
