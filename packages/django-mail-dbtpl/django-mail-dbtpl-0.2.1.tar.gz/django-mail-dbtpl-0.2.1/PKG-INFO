Metadata-Version: 1.1
Name: django-mail-dbtpl
Version: 0.2.1
Summary: A simple Django app to store email template in database.
Home-page: https://bitbucket.org/crazymath/django-mail-dbtpl
Author: CrazyMath
Author-email: moiseenko.k.s@gmail.com
License: BSD License
Description: =================
        django-mail-dbtpl
        =================
        
        The application allows you to store email templates in the database. The application also allows you to edit templates
        in the database data using ``ckeditor``. More details about the settings available `ckeditor <https://github.com/shaunsephton/django-ckeditor>`_.
        
        Installing
        ==========
        Install the application using pip.
        ::
        
            > pip install django-mail-dbtpl
        
        Add application settings Django project
        ::
        
            INSTALLED_APPS = (
            ...
            'django_mail_dbtpl',
            ...
            )
        
        Apply migration
        ::
        
            python ./manage.py migrate django_mail_dbtpl
        
        
        Usage
        =====
        After installation, you must create a letter template in the database via the administration panel by url
        ``http://127.0.0.1:8000/admin/django_mail_dbtpl/emailtemplate/``, it is necessary for the template specify ``slug``.
        ``slug`` will be used for both identifier template. The templates can be determined context variables ``{{var}}``.
        For example, you create a template with ``slug = 'welcome.tpl'``, ``subject = 'Welcome, {{username}}'``,
        ``body = 'Welcome to the {{site}}.'``. The following is the code that shows how to use the template stored in the database
        ::
        
            from django_mail_dbtpl.utils import EmailWrapper
            context = {
                'username': 'Example User',
                'site': 'example.com'
            }
            msg = EmailWrapper('welcome.tpl', context)
            msg.from_email = 'from_email@example.com'
            msg.to = ['to_email@example.com']
            msg.send()
Platform: UNKNOWN
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.7
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
