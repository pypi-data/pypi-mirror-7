wizard: PurchaseFinishWizard
GtkDialog(PluggableWizard): title='Purchase Finish', hidden
  GtkVBox(PluggableWizard-vbox):
    GtkVBox(vbox1, expand=True, fill=True):
      ProxyLabel(header_lbl, fill=True): hidden
      GtkEventBox(slave_area, expand=True, fill=True): slave PurchaseFinishPaymentAdjustStep is attached
        GtkVBox(step.toplevel):
          GtkLabel(step.label1, fill=True): '<b>Payments to pay will be cancelled and new ones will be created to match the remaining value.</b>'
          ObjectList(step.payment_list, expand=True, fill=True):
            column: title='#'
            column: title='Description', expand
            column: title='Due date'
            column: title='Paid date'
            column: title='Status'
            column: title='Value'
            column: title='Paid value'
          GtkTable(step.table1, fill=True):
            GtkLabel(step.label2): 'Total Received:'
            ProxyLabel(step.received_value): '<span weight="bold">$ 0.00</span>'
            GtkLabel(step.label3): 'Total Paid:'
            ProxyLabel(step.paid_value): '<span weight="bold">$ 0.00</span>'
            GtkLabel(step.missing_label): 'Missing:'
            ProxyLabel(step.missing_value): '<span weight="bold">$ 0.00</span>'
      ProxyLabel(notification_lbl, fill=True):
      GtkHBox(hbox1, fill=True, pack-end):
        GtkHButtonBox(buttonbox, expand=True, fill=True, pack-end):
          GtkButton(cancel_button): 'gtk-cancel'
          GtkButton(previous_button): 'gtk-go-back'
          GtkButton(next_button): '_Finish'
          GtkButton(ok_button): 'gtk-ok', hidden
    GtkHButtonBox(dialog-action_area1, fill=True, pack-end):

model: PaymentGroup<1>

model: Payment<2>
  base_value: <currency $ 0>
  bill_received: False
  cancel_date: None
  description: u'description'
  discount: <currency $ 0>
  due_date: datetime.today()
  group_id: PaymentGroup<1>
  interest: <currency $ 0>
  open_date: datetime.today()
  paid_date: None
  paid_value: None
  payment_number: None
  payment_type: 0
  penalty: <currency $ 0>
  status: 1
  value: <currency $ 0>

model: PurchaseOrder<3>
  confirm_date: None
  consigned: False
  discount_value: <currency $ 0>
  expected_freight: <currency $ 0>
  expected_pay_date: datetime.today()
  expected_receival_date: datetime.today()
  freight_type: 0
  group_id: PaymentGroup<1>
  notes: u''
  open_date: datetime.today()
  quote_deadline: None
  receival_date: None
  salesperson_name: u''
  status: 4
  surcharge_value: <currency $ 0>

model: PurchaseItem<4>
  base_cost: <currency $125>
  cost: <currency $125>
  expected_receival_date: None
  order_id: PurchaseOrder<3>
  quantity: Decimal('0.000')
  quantity_received: Decimal('0.000')
  quantity_returned: Decimal('0.000')
  quantity_sold: Decimal('0.000')

model: PurchaseItem<5>
  base_cost: <currency $125>
  cost: <currency $125>
  expected_receival_date: None
  order_id: PurchaseOrder<3>
  quantity: Decimal('0.000')
  quantity_received: Decimal('0.000')
  quantity_returned: Decimal('0.000')
  quantity_sold: Decimal('0.000')

