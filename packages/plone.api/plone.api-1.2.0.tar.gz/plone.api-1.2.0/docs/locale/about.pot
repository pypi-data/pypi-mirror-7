# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, Plone Foundation
# This file is distributed under the same license as the plone.api package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: plone.api 0.1a1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-08-25 18:42\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../about.rst:10
# 2a436744b5074106a4d3c1e7db23907d
msgid "About"
msgstr ""

#: ../about.rst:13
# f29f9648a2c64ceab3a58837c46f84c3
msgid "Inspiration"
msgstr ""

#: ../about.rst:15
# 2d3ee5a2fe0143399f5b58ba22e4eda1
msgid "We want `plone.api` to be developed with `PEP 20 <http://www.python.org/dev/peps/pep-0020/>`_ idioms in mind, in particular:"
msgstr ""

#: ../about.rst:25
# 7d4b894e6cbb420fac9251ec2fb46d70
msgid "All contributions to `plone.api` should keep these important rules in mind."
msgstr ""

#: ../about.rst:27
# cba995aac8fc43aa99709d8004865bb3
msgid "Two libraries are especially inspiring:"
msgstr ""

#: ../about.rst:30
# 6084d6e706274019a8f4fb7aaa19d1d5
msgid "Arguably, the reason for SQLAlchemy's success in the developer community lies as much in its feature set as in the fact that its API is very well designed, is consistent, explicit, and easy to learn."
msgstr ""

#: ../about.rst:35
# a691aa3dabd84cf28f90c99c585e1ff5
msgid "As of this writing, this is still a very new library, but just looking at `a comparison between the urllib2 way and the requests way <https://gist.github.com/973705>`_, as well as the rest of its documentation, one cannot but see a parallel between the way we *have been* and the way we *should be* writing code for Plone (or at least have that option)."
msgstr ""

#: ../about.rst:43
# d03775b84e504b988c0640c82a21a306
msgid "Design decisions"
msgstr ""

#: ../about.rst:46
# 95ffc3de9a55416f95ea3c05afbf9a4d
msgid "Import and usage style"
msgstr ""

#: ../about.rst:48
# 672e9312309c43709fd6d2acc2023e2d
msgid "API methods are grouped by their field of usage: :ref:`chapter_portal`, :ref:`chapter_content`, :ref:`chapter_users` and :ref:`chapter_groups`. Hence the importing and usage of API methods look like this:"
msgstr ""

#: ../about.rst:72
# 349b5fd6487e40ea9dd81987978c2f5e
msgid "In other words, always import the top-level package (``from plone import api``) and then use the group namespace to access the method you want (``url = api.portal.url()``)."
msgstr ""

#: ../about.rst:76
# f8239b769bdf4a778da77b3c7e02bf23
msgid "All example code should adhere to this style, so we encourage one and only one prefered way of consuming API methods."
msgstr ""

#: ../about.rst:81
# f21cac0fa09c473c97d47508b064c72a
msgid "Prefer keyword arguments"
msgstr ""

#: ../about.rst:83
# 5f321e76bf214e3cb3a72ccb2e2eb7a6
msgid "For the following reasons the example code in the API (and hence the recommendation to people on how to use it) shall always prefer using keyword instead of positional arguments:"
msgstr ""

#: ../about.rst:87
# 203486d7854545f3be3181502c63f0c9
msgid "There will never be a doubt when writing a method on whether an argument should be positional or not.  Decision already made."
msgstr ""

#: ../about.rst:89
# 51132b05a09e422bbcd7d7d731e79a9e
msgid "There will never be a doubt when using the API on which argument comes first, or which ones are named/positional.  All arguments are named."
msgstr ""

#: ../about.rst:91
# 94d78f7dd2284323a551bc70c1bcaccb
msgid "When using positional arguments, the method signature is dictated by the underlying implementation.  Think required vs. optional arguments.  Named arguments are always optional in Python.  This allows us to change implementation details and leave the signature unchanged. In other words, the underlying API code can change substantially and the code using it will remain valid."
msgstr ""

#: ../about.rst:97
# f9101ada75c34ab4a49ac2649e2c86c6
msgid "The arguments can all be passed as a dictionary."
msgstr ""

#: ../about.rst:99
# e6447bf1c1cc407980d43e369123bd3c
msgid "The API provides grouped functional access to otherwise distributed logic in Plone. Plone's original distribution of logic is a result of two things: The historic re-use of CMF- and Zope-methods and reasonable, but at first hard to understand splits like acl_users.* and portal_memberdata."
msgstr ""

#: ../about.rst:104
# a1ced08ad5c448ce96cf067f65e7631e
msgid "That's why we've created a set of useful methods that implement best-practice access to the original distributed APIs. In this way we also document in code how to use Plone directly."
msgstr ""

#: ../about.rst:109
# 6264cd574bc64f9d97dddba7f620e57b
msgid "If you doubt those last sentences: We had five different ways to get the portal root with different edge-cases. We had three different ways to move an object. With this in mind, it's obvious that even the most simple tasks can't be documented in Plone in a sane way."
msgstr ""

#: ../about.rst:114
# 34554f35d96445cb8cea6a18400b4f5a
msgid "Also, we don't intend to cover all possible use-cases. Only the most common ones. If you need to do something that `plone.api` does not support, just use the underlying APIs directly. We will cover 20% of tasks that are being done 80% of the time, and not one more."
msgstr ""

#: ../about.rst:121
# b4b07582223e44dca3469a6bc0ee6699
msgid "FAQ"
msgstr ""

#: ../about.rst:124
# 99216352a3a8460187898ba11d724b9a
msgid "Why aren't we using wrappers?"
msgstr ""

#: ../about.rst:126
# 5d5493b748f340779cb1ddffd215fc90
msgid "We could wrap an object (like a user) with an API to make it more usable right now. That would be an alternative to the convenience methods."
msgstr ""

#: ../about.rst:129
# ebc49b52ce3d43dbbaa635bd6553c1a5
msgid "But telling developers that they will get yet another object from the API which isn't the requested object, but an API-wrapped one instead, would be very hard. Also, making this wrap transparent in order to make the returned object directly usable would be nearly impossible, because we'd have to proxy all the :mod:`zope.interface` stuff, annotations and more."
msgstr ""

#: ../about.rst:135
# 0d4d150359a84f0594821afc047a6809
msgid "Furthermore, we want to avoid people writing code like this in tests or their internal utility code and failing miserably in the future if wrappers would no longer be needed and would therefore be removed::"
msgstr ""

#: ../about.rst:144
# 85967fd7653f425382711bd500730255
msgid "Why ``delete`` instead of ``remove``?"
msgstr ""

#: ../about.rst:146
# 401809f8d97f49a08faa1f6e52254109
msgid "The underlying code uses methods that are named more similarly to *delete* rather than to *remove*"
msgstr ""

#: ../about.rst:148
# 763c8c4c889d49028ba6c6a9bd7b7325
msgid "``CRUD`` has *delete*, not *remove*."
msgstr ""

#: ../about.rst:152
# 0436b19cd5b041ca8b591ef5ab64d096
msgid "Roadmap"
msgstr ""

#: ../about.rst:155
# 3c062a5a96b740ef8778f0e8a55ed39a
msgid "Short term"
msgstr ""

#: ../about.rst:157
# 5ec374a7a3f647b5a6d2859005e1f2c0
msgid "In the short-term, we are planning to add more api methods to `plone.api`. An up-to-date list of them (and ideas for them) can be found `on GitHub <https://github.com/plone/plone.api/issues>`_."
msgstr ""

#: ../about.rst:161
# e31adb5b97d648dab373d9706e32c99c
msgid "TODO: add this to GitHub issues:"
msgstr ""

#: ../about.rst:163
# f8929ca807a7428b800714f7fd25deeb
msgid "descriptive error messages"
msgstr ""

#: ../about.rst:165
# 04d3a21173064ec3b7066d3fad50ac28
msgid "see where code breaks with stupid messages"
msgstr ""

#: ../about.rst:166
# d057b078035c4066989c25d4e8ba13f0
msgid "catch them and make them more descriptive"
msgstr ""

#: ../about.rst:167
# f49fae0ea7f84216a791f1a105873e74
msgid "have a list of all possible error messages, what they mean and how to overcome them"
msgstr ""

#: ../about.rst:172
# 4650e9d3bd564bd7b0af72919bc37a45
msgid "Medium- to long-term:"
msgstr ""

#: ../about.rst:174
# a1f8f342c2ac45ebaced9ad6f912f5a9
msgid "Below is a collection of ideas we have for the long run, in no particular order:"
msgstr ""

#: ../about.rst:176
# f65e026a179346bf8b1384e3ed937b08
msgid "api.role context manager (to use with ``with``)"
msgstr ""

#: ../about.rst:186
# 7e1b68bc127e4288a81ac58f89f730d2
msgid "api.env"
msgstr ""

#: ../about.rst:188
# 1f4ae1500be34a828b334872383f1b53
msgid "debug_mode, test_mode booleans (to check if you are in debug/test)"
msgstr ""

#: ../about.rst:189
# 2fd5bc2e3bcb44128285857362cd136b
msgid "zope/plone version info"
msgstr ""

#: ../about.rst:191
# 680e221b3c1b4c59816189dd5dca883f
msgid "api.system"
msgstr ""

#: ../about.rst:193
# 3b98c601ff9a49d2bda68a897862863d
msgid "for sysadmin tasks"
msgstr ""

#: ../about.rst:194
# 8eb71408396944deae13edd284d87c43
msgid "run upgrades, stay up-to-date"
msgstr ""

#: ../about.rst:195
# dc6ef86847c6487a8d28abd46fa6bfcd
msgid "cleanup broken objects, interfaces, utilities, etc."
msgstr ""

#: ../about.rst:196
# aa5a7f885c874a84b963c78fcb46ed98
msgid "mounting things"
msgstr ""

#: ../about.rst:198
# 9e22a02a18124701b38b58f9162b8715
msgid "unify permissions"
msgstr ""

#: ../about.rst:200
# 1dbdc51bc8144212942b0e848840ed10
msgid "have all different types of permission in one place and one way to use them"
msgstr ""

#: ../about.rst:202
# 58acee587c1f407f994bd1ee046891c5
msgid "style guide"
msgstr ""

#: ../about.rst:204
# 0c10ec9c6adc467680422e88b28cb9cd
msgid "have a style guide for how Plone files should be formatted -- this needs to be finalized before we start fixing underlying APIs so new code can use the style guide"
msgstr ""

#: ../about.rst:207
# 059393d646df4807b6e0bf60fcded4bd
msgid "define guidelines for:"
msgstr ""

#: ../about.rst:209
# 4f66feaababa4915bbeae3c82ffc11ea
msgid "python"
msgstr ""

#: ../about.rst:210
# 4c4b33b5972a44f38fa7bf26f4bbf549
msgid "javascript"
msgstr ""

#: ../about.rst:211
# 8a6d258332214849925967b682c1c96a
msgid "rst"
msgstr ""

#: ../about.rst:212
# 7ac71372fdd141c893ce90cc9992ebfa
msgid "zpt"
msgstr ""

#: ../about.rst:213
# 3ada99fc0f444c36a17ddd5efb3018f4
msgid "xml"
msgstr ""

#: ../about.rst:214
# 27d5db7138d24562b926c1939cd03a0e
msgid "zcml"
msgstr ""

#: ../about.rst:216
# 219ad0b7744f4b148974776df461ad9d
msgid "rewrite sub-optimal underlying APIs and deprecate plone.api methods, but leave the (updated) documentation:"
msgstr ""

#: ../about.rst:219
# dc05069dcdb6450f8413b6e4aa112a94
msgid "getting/setting member properties"
msgstr ""

#: ../about.rst:220
# 8399fc5ba7194909a459de3cb9aaff81
msgid "tools:"
msgstr ""

#: ../about.rst:222
# 410d5fd4d48d40f5b2b632c2c26b5e02
msgid "portal_groupdata, portal_groups, portal_memberdata, portal_membership"
msgstr ""

#: ../about.rst:223
# e4725801d2194b57b48e143190136411
msgid "portal_quickinstaller, portal_undo"
msgstr ""

#: ../about.rst:225
# 3078b079855f4f41b04ab1c7794cf50c
msgid "JSON webservices"
msgstr ""

#: ../about.rst:227
# aff2f6b63fe242fcb418c28cfdf15328
msgid "probably in a separate package plone.jsonapi"
msgstr ""

#: ../about.rst:228
# ba9d6aef442341a18631fc8f4145f334
msgid "one view (@@jsonapi for example) that you can call in your JS and be sure it won't change"
msgstr ""

#: ../about.rst:230
# 36cd035b06a849a983dcbc6601e1e2d5
msgid "easier to AJAXify stuff"
msgstr ""

#: ../about.rst:232
# f4f27b60ac2c44ca997c10f296883309
msgid "Flask-type url_for_view() and view_for_url()"
msgstr ""

