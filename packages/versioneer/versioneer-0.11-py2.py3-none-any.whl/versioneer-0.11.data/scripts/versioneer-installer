#!python

import os, base64

VERSIONEER_b64 = """
CiMgVmVyc2lvbjogMC4xMQoKIiIiClRoZSBWZXJzaW9uZWVyCj09PT09PT09
PT09PT09CgoqIGxpa2UgYSByb2NrZXRlZXIsIGJ1dCBmb3IgdmVyc2lvbnMh
CiogaHR0cHM6Ly9naXRodWIuY29tL3dhcm5lci9weXRob24tdmVyc2lvbmVl
cgoqIEJyaWFuIFdhcm5lcgoqIExpY2Vuc2U6IFB1YmxpYyBEb21haW4KKiBD
b21wYXRpYmxlIFdpdGg6IHB5dGhvbjIuNiwgMi43LCAzLjIsIDMuMywgMy40
LCBhbmQgcHlweQoKWyFbQnVpbGQgU3RhdHVzXShodHRwczovL3RyYXZpcy1j
aS5vcmcvd2FybmVyL3B5dGhvbi12ZXJzaW9uZWVyLnBuZz9icmFuY2g9bWFz
dGVyKV0oaHR0cHM6Ly90cmF2aXMtY2kub3JnL3dhcm5lci9weXRob24tdmVy
c2lvbmVlcikKClRoaXMgaXMgYSB0b29sIGZvciBtYW5hZ2luZyBhIHJlY29y
ZGVkIHZlcnNpb24gbnVtYmVyIGluIGRpc3R1dGlscy1iYXNlZApweXRob24g
cHJvamVjdHMuIFRoZSBnb2FsIGlzIHRvIHJlbW92ZSB0aGUgdGVkaW91cyBh
bmQgZXJyb3ItcHJvbmUgInVwZGF0ZQp0aGUgZW1iZWRkZWQgdmVyc2lvbiBz
dHJpbmciIHN0ZXAgZnJvbSB5b3VyIHJlbGVhc2UgcHJvY2Vzcy4gTWFraW5n
IGEgbmV3CnJlbGVhc2Ugc2hvdWxkIGJlIGFzIGVhc3kgYXMgcmVjb3JkaW5n
IGEgbmV3IHRhZyBpbiB5b3VyIHZlcnNpb24tY29udHJvbApzeXN0ZW0sIGFu
ZCBtYXliZSBtYWtpbmcgbmV3IHRhcmJhbGxzLgoKCiMjIFF1aWNrIEluc3Rh
bGwKCiogYHBpcCBpbnN0YWxsIHZlcnNpb25lZXJgIHRvIHNvbWV3aGVyZSB0
byB5b3VyICRQQVRICiogcnVuIGB2ZXJzaW9uZWVyLWluc3RhbGxlcmAgaW4g
eW91ciBzb3VyY2UgdHJlZTogdGhpcyBpbnN0YWxscyBgdmVyc2lvbmVlci5w
eWAKKiBmb2xsb3cgdGhlIGluc3RydWN0aW9ucyBiZWxvdyAoYWxzbyBpbiB0
aGUgYHZlcnNpb25lZXIucHlgIGRvY3N0cmluZykKCiMjIFZlcnNpb24gSWRl
bnRpZmllcnMKClNvdXJjZSB0cmVlcyBjb21lIGZyb20gYSB2YXJpZXR5IG9m
IHBsYWNlczoKCiogYSB2ZXJzaW9uLWNvbnRyb2wgc3lzdGVtIGNoZWNrb3V0
IChtb3N0bHkgdXNlZCBieSBkZXZlbG9wZXJzKQoqIGEgbmlnaHRseSB0YXJi
YWxsLCBwcm9kdWNlZCBieSBidWlsZCBhdXRvbWF0aW9uCiogYSBzbmFwc2hv
dCB0YXJiYWxsLCBwcm9kdWNlZCBieSBhIHdlYi1iYXNlZCBWQ1MgYnJvd3Nl
ciwgbGlrZSBnaXRodWIncwogICJ0YXJiYWxsIGZyb20gdGFnIiBmZWF0dXJl
CiogYSByZWxlYXNlIHRhcmJhbGwsIHByb2R1Y2VkIGJ5ICJzZXR1cC5weSBz
ZGlzdCIsIGRpc3RyaWJ1dGVkIHRocm91Z2ggUHlQSQoKV2l0aGluIGVhY2gg
c291cmNlIHRyZWUsIHRoZSB2ZXJzaW9uIGlkZW50aWZpZXIgKGVpdGhlciBh
IHN0cmluZyBvciBhIG51bWJlciwKdGhpcyB0b29sIGlzIGZvcm1hdC1hZ25v
c3RpYykgY2FuIGNvbWUgZnJvbSBhIHZhcmlldHkgb2YgcGxhY2VzOgoKKiBh
c2sgdGhlIFZDUyB0b29sIGl0c2VsZiwgZS5nLiAiZ2l0IGRlc2NyaWJlIiAo
Zm9yIGNoZWNrb3V0cyksIHdoaWNoIGtub3dzCiAgYWJvdXQgcmVjZW50ICJ0
YWdzIiBhbmQgYW4gYWJzb2x1dGUgcmV2aXNpb24taWQKKiB0aGUgbmFtZSBv
ZiB0aGUgZGlyZWN0b3J5IGludG8gd2hpY2ggdGhlIHRhcmJhbGwgd2FzIHVu
cGFja2VkCiogYW4gZXhwYW5kZWQgVkNTIGtleXdvcmQgKCRJZCQsIGV0YykK
KiBhIGBfdmVyc2lvbi5weWAgY3JlYXRlZCBieSBzb21lIGVhcmxpZXIgYnVp
bGQgc3RlcAoKRm9yIHJlbGVhc2VkIHNvZnR3YXJlLCB0aGUgdmVyc2lvbiBp
ZGVudGlmaWVyIGlzIGNsb3NlbHkgcmVsYXRlZCB0byBhIFZDUwp0YWcuIFNv
bWUgcHJvamVjdHMgdXNlIHRhZyBuYW1lcyB0aGF0IGluY2x1ZGUgbW9yZSB0
aGFuIGp1c3QgdGhlIHZlcnNpb24Kc3RyaW5nIChlLmcuICJteXByb2plY3Qt
MS4yIiBpbnN0ZWFkIG9mIGp1c3QgIjEuMiIpLCBpbiB3aGljaCBjYXNlIHRo
ZSB0b29sCm5lZWRzIHRvIHN0cmlwIHRoZSB0YWcgcHJlZml4IHRvIGV4dHJh
Y3QgdGhlIHZlcnNpb24gaWRlbnRpZmllci4gRm9yCnVucmVsZWFzZWQgc29m
dHdhcmUgKGJldHdlZW4gdGFncyksIHRoZSB2ZXJzaW9uIGlkZW50aWZpZXIg
c2hvdWxkIHByb3ZpZGUKZW5vdWdoIGluZm9ybWF0aW9uIHRvIGhlbHAgZGV2
ZWxvcGVycyByZWNyZWF0ZSB0aGUgc2FtZSB0cmVlLCB3aGlsZSBhbHNvCmdp
dmluZyB0aGVtIGFuIGlkZWEgb2Ygcm91Z2hseSBob3cgb2xkIHRoZSB0cmVl
IGlzIChhZnRlciB2ZXJzaW9uIDEuMiwgYmVmb3JlCnZlcnNpb24gMS4zKS4g
TWFueSBWQ1Mgc3lzdGVtcyBjYW4gcmVwb3J0IGEgZGVzY3JpcHRpb24gdGhh
dCBjYXB0dXJlcyB0aGlzLApmb3IgZXhhbXBsZSAnZ2l0IGRlc2NyaWJlIC0t
dGFncyAtLWRpcnR5IC0tYWx3YXlzJyByZXBvcnRzIHRoaW5ncyBsaWtlCiIw
LjctMS1nNTc0YWI5OC1kaXJ0eSIgdG8gaW5kaWNhdGUgdGhhdCB0aGUgY2hl
Y2tvdXQgaXMgb25lIHJldmlzaW9uIHBhc3QgdGhlCjAuNyB0YWcsIGhhcyBh
IHVuaXF1ZSByZXZpc2lvbiBpZCBvZiAiNTc0YWI5OCIsIGFuZCBpcyAiZGly
dHkiIChpdCBoYXMKdW5jb21taXR0ZWQgY2hhbmdlcy4KClRoZSB2ZXJzaW9u
IGlkZW50aWZpZXIgaXMgdXNlZCBmb3IgbXVsdGlwbGUgcHVycG9zZXM6Cgoq
IHRvIGFsbG93IHRoZSBtb2R1bGUgdG8gc2VsZi1pZGVudGlmeSBpdHMgdmVy
c2lvbjogYG15cHJvamVjdC5fX3ZlcnNpb25fX2AKKiB0byBjaG9vc2UgYSBu
YW1lIGFuZCBwcmVmaXggZm9yIGEgJ3NldHVwLnB5IHNkaXN0JyB0YXJiYWxs
CgojIyBUaGVvcnkgb2YgT3BlcmF0aW9uCgpWZXJzaW9uZWVyIHdvcmtzIGJ5
IGFkZGluZyBhIHNwZWNpYWwgYF92ZXJzaW9uLnB5YCBmaWxlIGludG8geW91
ciBzb3VyY2UKdHJlZSwgd2hlcmUgeW91ciBgX19pbml0X18ucHlgIGNhbiBp
bXBvcnQgaXQuIFRoaXMgYF92ZXJzaW9uLnB5YCBrbm93cyBob3cgdG8KZHlu
YW1pY2FsbHkgYXNrIHRoZSBWQ1MgdG9vbCBmb3IgdmVyc2lvbiBpbmZvcm1h
dGlvbiBhdCBpbXBvcnQgdGltZS4gSG93ZXZlciwKd2hlbiB5b3UgdXNlICJz
ZXR1cC5weSBidWlsZCIgb3IgInNldHVwLnB5IHNkaXN0IiwgYF92ZXJzaW9u
LnB5YCBpbiB0aGUgbmV3CmNvcHkgaXMgcmVwbGFjZWQgYnkgYSBzbWFsbCBz
dGF0aWMgZmlsZSB0aGF0IGNvbnRhaW5zIGp1c3QgdGhlIGdlbmVyYXRlZAp2
ZXJzaW9uIGRhdGEuCgpgX3ZlcnNpb24ucHlgIGFsc28gY29udGFpbnMgYCRS
ZXZpc2lvbiRgIG1hcmtlcnMsIGFuZCB0aGUgaW5zdGFsbGF0aW9uCnByb2Nl
c3MgbWFya3MgYF92ZXJzaW9uLnB5YCB0byBoYXZlIHRoaXMgbWFya2VyIHJl
d3JpdHRlbiB3aXRoIGEgdGFnIG5hbWUKZHVyaW5nIHRoZSAiZ2l0IGFyY2hp
dmUiIGNvbW1hbmQuIEFzIGEgcmVzdWx0LCBnZW5lcmF0ZWQgdGFyYmFsbHMg
d2lsbApjb250YWluIGVub3VnaCBpbmZvcm1hdGlvbiB0byBnZXQgdGhlIHBy
b3BlciB2ZXJzaW9uLgoKCiMjIEluc3RhbGxhdGlvbgoKRmlyc3QsIGRlY2lk
ZSBvbiB2YWx1ZXMgZm9yIHRoZSBmb2xsb3dpbmcgY29uZmlndXJhdGlvbiB2
YXJpYWJsZXM6CgoqIGBWQ1NgOiB0aGUgdmVyc2lvbiBjb250cm9sIHN5c3Rl
bSB5b3UgdXNlLiBDdXJyZW50bHkgYWNjZXB0cyAiZ2l0Ii4KCiogYHZlcnNp
b25maWxlX3NvdXJjZWA6CgogIEEgcHJvamVjdC1yZWxhdGl2ZSBwYXRobmFt
ZSBpbnRvIHdoaWNoIHRoZSBnZW5lcmF0ZWQgdmVyc2lvbiBzdHJpbmdzIHNo
b3VsZAogIGJlIHdyaXR0ZW4uIFRoaXMgaXMgdXN1YWxseSBhIGBfdmVyc2lv
bi5weWAgbmV4dCB0byB5b3VyIHByb2plY3QncyBtYWluCiAgYF9faW5pdF9f
LnB5YCBmaWxlLiBJZiB5b3VyIHByb2plY3QgdXNlcyBgc3JjL215cHJvamVj
dC9fX2luaXRfXy5weWAsIHRoaXMKICBzaG91bGQgYmUgYHNyYy9teXByb2pl
Y3QvX3ZlcnNpb24ucHlgLiBUaGlzIGZpbGUgc2hvdWxkIGJlIGNoZWNrZWQg
aW4gdG8KICB5b3VyIFZDUyBhcyB1c3VhbDogdGhlIGNvcHkgY3JlYXRlZCBi
ZWxvdyBieSBgc2V0dXAucHkgdmVyc2lvbmVlcmAgd2lsbAogIGluY2x1ZGUg
Y29kZSB0aGF0IHBhcnNlcyBleHBhbmRlZCBWQ1Mga2V5d29yZHMgaW4gZ2Vu
ZXJhdGVkIHRhcmJhbGxzLiBUaGUKICAnYnVpbGQnIGFuZCAnc2Rpc3QnIGNv
bW1hbmRzIHdpbGwgcmVwbGFjZSBpdCB3aXRoIGEgY29weSB0aGF0IGhhcyBq
dXN0IHRoZQogIGNhbGN1bGF0ZWQgdmVyc2lvbiBzdHJpbmcuCgoqICBgdmVy
c2lvbmZpbGVfYnVpbGRgOgoKICBMaWtlIGB2ZXJzaW9uZmlsZV9zb3VyY2Vg
LCBidXQgcmVsYXRpdmUgdG8gdGhlIGJ1aWxkIGRpcmVjdG9yeSBpbnN0ZWFk
IG9mCiAgdGhlIHNvdXJjZSBkaXJlY3RvcnkuIFRoZXNlIHdpbGwgZGlmZmVy
IHdoZW4geW91ciBzZXR1cC5weSB1c2VzCiAgJ3BhY2thZ2VfZGlyPScuIElm
IHlvdSBoYXZlIGBwYWNrYWdlX2Rpcj17J215cHJvamVjdCc6ICdzcmMvbXlw
cm9qZWN0J31gLAogIHRoZW4geW91IHdpbGwgcHJvYmFibHkgaGF2ZSBgdmVy
c2lvbmZpbGVfYnVpbGQ9J215cHJvamVjdC9fdmVyc2lvbi5weSdgIGFuZAog
IGB2ZXJzaW9uZmlsZV9zb3VyY2U9J3NyYy9teXByb2plY3QvX3ZlcnNpb24u
cHknYC4KCiogYHRhZ19wcmVmaXhgOgoKICBhIHN0cmluZywgbGlrZSAnUFJP
SkVDVE5BTUUtJywgd2hpY2ggYXBwZWFycyBhdCB0aGUgc3RhcnQgb2YgYWxs
IFZDUyB0YWdzLgogIElmIHlvdXIgdGFncyBsb29rIGxpa2UgJ215cHJvamVj
dC0xLjIuMCcsIHRoZW4geW91IHNob3VsZCB1c2UKICB0YWdfcHJlZml4PSdt
eXByb2plY3QtJy4gSWYgeW91IHVzZSB1bnByZWZpeGVkIHRhZ3MgbGlrZSAn
MS4yLjAnLCB0aGlzCiAgc2hvdWxkIGJlIGFuIGVtcHR5IHN0cmluZy4KCiog
YHBhcmVudGRpcl9wcmVmaXhgOgoKICBhIHN0cmluZywgZnJlcXVlbnRseSB0
aGUgc2FtZSBhcyB0YWdfcHJlZml4LCB3aGljaCBhcHBlYXJzIGF0IHRoZSBz
dGFydCBvZgogIGFsbCB1bnBhY2tlZCB0YXJiYWxsIGZpbGVuYW1lcy4gSWYg
eW91ciB0YXJiYWxsIHVucGFja3MgaW50bwogICdteXByb2plY3QtMS4yLjAn
LCB0aGlzIHNob3VsZCBiZSAnbXlwcm9qZWN0LScuCgpUaGlzIHRvb2wgcHJv
dmlkZXMgb25lIHNjcmlwdCwgbmFtZWQgYHZlcnNpb25lZXItaW5zdGFsbGVy
YC4gVGhhdCBzY3JpcHQgZG9lcwpvbmUgdGhpbmc6IHdyaXRlIGEgY29weSBv
ZiBgdmVyc2lvbmVlci5weWAgaW50byB0aGUgY3VycmVudCBkaXJlY3Rvcnku
CgpUbyB2ZXJzaW9uZWVyLWVuYWJsZSB5b3VyIHByb2plY3Q6CgoqIDE6IFJ1
biBgdmVyc2lvbmVlci1pbnN0YWxsZXJgIHRvIGNvcHkgYHZlcnNpb25lZXIu
cHlgIGludG8gdGhlIHRvcCBvZiB5b3VyCiAgc291cmNlIHRyZWUuCgoqIDI6
IGFkZCB0aGUgZm9sbG93aW5nIGxpbmVzIHRvIHRoZSB0b3Agb2YgeW91ciBg
c2V0dXAucHlgLCB3aXRoIHRoZQogIGNvbmZpZ3VyYXRpb24gdmFsdWVzIHlv
dSBkZWNpZGVkIGVhcmxpZXI6CgogICAgICAgIGltcG9ydCB2ZXJzaW9uZWVy
CiAgICAgICAgdmVyc2lvbmVlci5WQ1MgPSAnZ2l0JwogICAgICAgIHZlcnNp
b25lZXIudmVyc2lvbmZpbGVfc291cmNlID0gJ3NyYy9teXByb2plY3QvX3Zl
cnNpb24ucHknCiAgICAgICAgdmVyc2lvbmVlci52ZXJzaW9uZmlsZV9idWls
ZCA9ICdteXByb2plY3QvX3ZlcnNpb24ucHknCiAgICAgICAgdmVyc2lvbmVl
ci50YWdfcHJlZml4ID0gJycgIyB0YWdzIGFyZSBsaWtlIDEuMi4wCiAgICAg
ICAgdmVyc2lvbmVlci5wYXJlbnRkaXJfcHJlZml4ID0gJ215cHJvamVjdC0n
ICMgZGlybmFtZSBsaWtlICdteXByb2plY3QtMS4yLjAnCgoqIDM6IGFkZCB0
aGUgZm9sbG93aW5nIGFyZ3VtZW50cyB0byB0aGUgc2V0dXAoKSBjYWxsIGlu
IHlvdXIgc2V0dXAucHk6CgogICAgICAgIHZlcnNpb249dmVyc2lvbmVlci5n
ZXRfdmVyc2lvbigpLAogICAgICAgIGNtZGNsYXNzPXZlcnNpb25lZXIuZ2V0
X2NtZGNsYXNzKCksCgoqIDQ6IG5vdyBydW4gYHNldHVwLnB5IHZlcnNpb25l
ZXJgLCB3aGljaCB3aWxsIGNyZWF0ZSBgX3ZlcnNpb24ucHlgLCBhbmQKICB3
aWxsIG1vZGlmeSB5b3VyIGBfX2luaXRfXy5weWAgdG8gZGVmaW5lIGBfX3Zl
cnNpb25fX2AgKGJ5IGNhbGxpbmcgYQogIGZ1bmN0aW9uIGZyb20gYF92ZXJz
aW9uLnB5YCkuIEl0IHdpbGwgYWxzbyBtb2RpZnkgeW91ciBgTUFOSUZFU1Qu
aW5gIHRvCiAgaW5jbHVkZSBib3RoIGB2ZXJzaW9uZWVyLnB5YCBhbmQgdGhl
IGdlbmVyYXRlZCBgX3ZlcnNpb24ucHlgIGluIHNkaXN0CiAgdGFyYmFsbHMu
CgoqIDU6IGNvbW1pdCB0aGVzZSBjaGFuZ2VzIHRvIHlvdXIgVkNTLiBUbyBt
YWtlIHN1cmUgeW91IHdvbid0IGZvcmdldCwKICBgc2V0dXAucHkgdmVyc2lv
bmVlcmAgd2lsbCBtYXJrIGV2ZXJ5dGhpbmcgaXQgdG91Y2hlZCBmb3IgYWRk
aXRpb24uCgojIyBQb3N0LUluc3RhbGxhdGlvbiBVc2FnZQoKT25jZSBlc3Rh
Ymxpc2hlZCwgYWxsIHVzZXMgb2YgeW91ciB0cmVlIGZyb20gYSBWQ1MgY2hl
Y2tvdXQgc2hvdWxkIGdldCB0aGUKY3VycmVudCB2ZXJzaW9uIHN0cmluZy4g
QWxsIGdlbmVyYXRlZCB0YXJiYWxscyBzaG91bGQgaW5jbHVkZSBhbiBlbWJl
ZGRlZAp2ZXJzaW9uIHN0cmluZyAoc28gdXNlcnMgd2hvIHVucGFjayB0aGVt
IHdpbGwgbm90IG5lZWQgYSBWQ1MgdG9vbCBpbnN0YWxsZWQpLgoKSWYgeW91
IGRpc3RyaWJ1dGUgeW91ciBwcm9qZWN0IHRocm91Z2ggUHlQSSwgdGhlbiB0
aGUgcmVsZWFzZSBwcm9jZXNzIHNob3VsZApib2lsIGRvd24gdG8gdHdvIHN0
ZXBzOgoKKiAxOiBnaXQgdGFnIDEuMAoqIDI6IHB5dGhvbiBzZXR1cC5weSBy
ZWdpc3RlciBzZGlzdCB1cGxvYWQKCklmIHlvdSBkaXN0cmlidXRlIGl0IHRo
cm91Z2ggZ2l0aHViIChpLmUuIHVzZXJzIHVzZSBnaXRodWIgdG8gZ2VuZXJh
dGUKdGFyYmFsbHMgd2l0aCBgZ2l0IGFyY2hpdmVgKSwgdGhlIHByb2Nlc3Mg
aXM6CgoqIDE6IGdpdCB0YWcgMS4wCiogMjogZ2l0IHB1c2g7IGdpdCBwdXNo
IC0tdGFncwoKQ3VycmVudGx5LCBhbGwgdmVyc2lvbiBzdHJpbmdzIG11c3Qg
YmUgYmFzZWQgdXBvbiBhIHRhZy4gVmVyc2lvbmVlciB3aWxsCnJlcG9ydCAi
dW5rbm93biIgdW50aWwgeW91ciB0cmVlIGhhcyBhdCBsZWFzdCBvbmUgdGFn
IGluIGl0cyBoaXN0b3J5LiBUaGlzCnJlc3RyaWN0aW9uIHdpbGwgYmUgZml4
ZWQgZXZlbnR1YWxseSAoc2VlIGlzc3VlICMxMikuCgojIyBWZXJzaW9uLVN0
cmluZyBGbGF2b3JzCgpDb2RlIHdoaWNoIHVzZXMgVmVyc2lvbmVlciBjYW4g
bGVhcm4gYWJvdXQgaXRzIHZlcnNpb24gc3RyaW5nIGF0IHJ1bnRpbWUgYnkK
aW1wb3J0aW5nIGBfdmVyc2lvbmAgZnJvbSB5b3VyIG1haW4gYF9faW5pdF9f
LnB5YCBmaWxlIGFuZCBydW5uaW5nIHRoZQpgZ2V0X3ZlcnNpb25zKClgIGZ1
bmN0aW9uLiBGcm9tIHRoZSAib3V0c2lkZSIgKGUuZy4gaW4gYHNldHVwLnB5
YCksIHlvdSBjYW4KaW1wb3J0IHRoZSB0b3AtbGV2ZWwgYHZlcnNpb25lZXIu
cHlgIGFuZCBydW4gYGdldF92ZXJzaW9ucygpYC4KCkJvdGggZnVuY3Rpb25z
IHJldHVybiBhIGRpY3Rpb25hcnkgd2l0aCBkaWZmZXJlbnQga2V5cyBmb3Ig
ZGlmZmVyZW50IGZsYXZvcnMKb2YgdGhlIHZlcnNpb24gc3RyaW5nOgoKKiBg
Wyd2ZXJzaW9uJ11gOiBjb25kZW5zZWQgdGFnK2Rpc3RhbmNlK3Nob3J0aWQr
ZGlydHkgaWRlbnRpZmllci4gRm9yIGdpdCwKICB0aGlzIHVzZXMgdGhlIG91
dHB1dCBvZiBgZ2l0IGRlc2NyaWJlIC0tdGFncyAtLWRpcnR5IC0tYWx3YXlz
YCBidXQgc3RyaXBzCiAgdGhlIHRhZ19wcmVmaXguIEZvciBleGFtcGxlICIw
LjExLTItZzEwNzZjOTctZGlydHkiIGluZGljYXRlcyB0aGF0IHRoZSB0cmVl
CiAgaXMgbGlrZSB0aGUgIjEwNzZjOTciIGNvbW1pdCBidXQgaGFzIHVuY29t
bWl0dGVkIGNoYW5nZXMgKCItZGlydHkiKSwgYW5kCiAgdGhhdCB0aGlzIGNv
bW1pdCBpcyB0d28gcmV2aXNpb25zICgiLTItIikgYmV5b25kIHRoZSAiMC4x
MSIgdGFnLiBGb3IKICByZWxlYXNlZCBzb2Z0d2FyZSAoZXhhY3RseSBlcXVh
bCB0byBhIGtub3duIHRhZyksIHRoZSBpZGVudGlmaWVyIHdpbGwgb25seQog
IGNvbnRhaW4gdGhlIHN0cmlwcGVkIHRhZywgZS5nLiAiMC4xMSIuCgoqIGBb
J2Z1bGwnXWA6IGRldGFpbGVkIHJldmlzaW9uIGlkZW50aWZpZXIuIEZvciBH
aXQsIHRoaXMgaXMgdGhlIGZ1bGwgU0hBMQogIGNvbW1pdCBpZCwgZm9sbG93
ZWQgYnkgIi1kaXJ0eSIgaWYgdGhlIHRyZWUgY29udGFpbnMgdW5jb21taXR0
ZWQgY2hhbmdlcywKICBlLmcuICIxMDc2Yzk3OGE4ZDNjZmM3MGY0MDhmZTU5
NzRhYTZjMDkyYzk0OWFjLWRpcnR5Ii4KClNvbWUgdmFyaWFudHMgYXJlIG1v
cmUgdXNlZnVsIHRoYW4gb3RoZXJzLiBJbmNsdWRpbmcgYGZ1bGxgIGluIGEg
YnVnIHJlcG9ydApzaG91bGQgYWxsb3cgZGV2ZWxvcGVycyB0byByZWNvbnN0
cnVjdCB0aGUgZXhhY3QgY29kZSBiZWluZyB0ZXN0ZWQgKG9yCmluZGljYXRl
IHRoZSBwcmVzZW5jZSBvZiBsb2NhbCBjaGFuZ2VzIHRoYXQgc2hvdWxkIGJl
IHNoYXJlZCB3aXRoIHRoZQpkZXZlbG9wZXJzKS4gYHZlcnNpb25gIGlzIHN1
aXRhYmxlIGZvciBkaXNwbGF5IGluIGFuICJhYm91dCIgYm94IG9yIGEgQ0xJ
CmAtLXZlcnNpb25gIG91dHB1dDogaXQgY2FuIGJlIGVhc2lseSBjb21wYXJl
ZCBhZ2FpbnN0IHJlbGVhc2Ugbm90ZXMgYW5kIGxpc3RzCm9mIGJ1Z3MgZml4
ZWQgaW4gdmFyaW91cyByZWxlYXNlcy4KCkluIHRoZSBmdXR1cmUsIHRoaXMg
d2lsbCBhbHNvIGluY2x1ZGUgYQpbUEVQLTA0NDBdKGh0dHA6Ly9sZWdhY3ku
cHl0aG9uLm9yZy9kZXYvcGVwcy9wZXAtMDQ0MC8pIC1jb21wYXRpYmxlIGZs
YXZvcgooZS5nLiBgMS4yLnBvc3QwLmRldjEyM2ApLiBUaGlzIGxvc2VzIGEg
bG90IG9mIGluZm9ybWF0aW9uIChhbmQgaGFzIG5vIHJvb20KZm9yIGEgaGFz
aC1iYXNlZCByZXZpc2lvbiBpZCksIGJ1dCBpcyBzYWZlIHRvIHVzZSBpbiBh
IGBzZXR1cC5weWAKImB2ZXJzaW9uPWAiIGFyZ3VtZW50LiBJdCBhbHNvIGVu
YWJsZXMgdG9vbHMgbGlrZSAqcGlwKiB0byBjb21wYXJlIHZlcnNpb24Kc3Ry
aW5ncyBhbmQgZXZhbHVhdGUgY29tcGF0aWJpbGl0eSBjb25zdHJhaW50IGRl
Y2xhcmF0aW9ucy4KClRoZSBgc2V0dXAucHkgdmVyc2lvbmVlcmAgY29tbWFu
ZCBhZGRzIHRoZSBmb2xsb3dpbmcgdGV4dCB0byB5b3VyCmBfX2luaXRfXy5w
eWAgdG8gcGxhY2UgYSBiYXNpYyB2ZXJzaW9uIGluIGBZT1VSUFJPSkVDVC5f
X3ZlcnNpb25fX2A6CgogICAgZnJvbSAuX3ZlcnNpb24gaW1wb3J0IGdldF92
ZXJzaW9ucwogICAgX192ZXJzaW9uID0gZ2V0X3ZlcnNpb25zKClbJ3ZlcnNp
b24nXQogICAgZGVsIGdldF92ZXJzaW9ucwoKIyMgVXBkYXRpbmcgVmVyc2lv
bmVlcgoKVG8gdXBncmFkZSB5b3VyIHByb2plY3QgdG8gYSBuZXcgcmVsZWFz
ZSBvZiBWZXJzaW9uZWVyLCBkbyB0aGUgZm9sbG93aW5nOgoKKiBpbnN0YWxs
IHRoZSBuZXcgVmVyc2lvbmVlciAoYHBpcCBpbnN0YWxsIC1VIHZlcnNpb25l
ZXJgIG9yIGVxdWl2YWxlbnQpCiogcmUtcnVuIGB2ZXJzaW9uZWVyLWluc3Rh
bGxlcmAgaW4geW91ciBzb3VyY2UgdHJlZSB0byByZXBsYWNlIHlvdXIgY29w
eSBvZgogIGB2ZXJzaW9uZWVyLnB5YAoqIGVkaXQgYHNldHVwLnB5YCwgaWYg
bmVjZXNzYXJ5LCB0byBpbmNsdWRlIGFueSBuZXcgY29uZmlndXJhdGlvbiBz
ZXR0aW5ncwogIGluZGljYXRlZCBieSB0aGUgcmVsZWFzZSBub3RlcwoqIHJl
LXJ1biBgc2V0dXAucHkgdmVyc2lvbmVlcmAgdG8gcmVwbGFjZSBgU1JDL192
ZXJzaW9uLnB5YAoqIGNvbW1pdCBhbnkgY2hhbmdlZCBmaWxlcwoKIyMjIFVw
Z3JhZGluZyBmcm9tIDAuMTAgdG8gMC4xMQoKWW91IG11c3QgYWRkIGEgYHZl
cnNpb25lZXIuVkNTID0gImdpdCJgIHRvIHlvdXIgYHNldHVwLnB5YCBiZWZv
cmUgcmUtcnVubmluZwpgc2V0dXAucHkgdmVyc2lvbmVlcmAuIFRoaXMgd2ls
bCBlbmFibGUgdGhlIHVzZSBvZiBhZGRpdGlvbmFsIHZlcnNpb24tY29udHJv
bApzeXN0ZW1zIChTVk4sIGV0YykgaW4gdGhlIGZ1dHVyZS4KCiMjIEZ1dHVy
ZSBEaXJlY3Rpb25zCgpUaGlzIHRvb2wgaXMgZGVzaWduZWQgdG8gbWFrZSBp
dCBlYXNpbHkgZXh0ZW5kZWQgdG8gb3RoZXIgdmVyc2lvbi1jb250cm9sCnN5
c3RlbXM6IGFsbCBWQ1Mtc3BlY2lmaWMgY29tcG9uZW50cyBhcmUgaW4gc2Vw
YXJhdGUgZGlyZWN0b3JpZXMgbGlrZQpzcmMvZ2l0LyAuIFRoZSB0b3AtbGV2
ZWwgYHZlcnNpb25lZXIucHlgIHNjcmlwdCBpcyBhc3NlbWJsZWQgZnJvbSB0
aGVzZQpjb21wb25lbnRzIGJ5IHJ1bm5pbmcgbWFrZS12ZXJzaW9uZWVyLnB5
IC4gSW4gdGhlIGZ1dHVyZSwgbWFrZS12ZXJzaW9uZWVyLnB5CndpbGwgdGFr
ZSBhIFZDUyBuYW1lIGFzIGFuIGFyZ3VtZW50LCBhbmQgd2lsbCBjb25zdHJ1
Y3QgYSB2ZXJzaW9uIG9mCmB2ZXJzaW9uZWVyLnB5YCB0aGF0IGlzIHNwZWNp
ZmljIHRvIHRoZSBnaXZlbiBWQ1MuIEl0IG1pZ2h0IGFsc28gdGFrZSB0aGUK
Y29uZmlndXJhdGlvbiBhcmd1bWVudHMgdGhhdCBhcmUgY3VycmVudGx5IHBy
b3ZpZGVkIG1hbnVhbGx5IGR1cmluZwppbnN0YWxsYXRpb24gYnkgZWRpdGlu
ZyBzZXR1cC5weSAuIEFsdGVybmF0aXZlbHksIGl0IG1pZ2h0IGdvIHRoZSBv
dGhlcgpkaXJlY3Rpb24gYW5kIGluY2x1ZGUgY29kZSBmcm9tIGFsbCBzdXBw
b3J0ZWQgVkNTIHN5c3RlbXMsIHJlZHVjaW5nIHRoZQpudW1iZXIgb2YgaW50
ZXJtZWRpYXRlIHNjcmlwdHMuCgoKIyMgTGljZW5zZQoKVG8gbWFrZSBWZXJz
aW9uZWVyIGVhc2llciB0byBlbWJlZCwgYWxsIGl0cyBjb2RlIGlzIGhlcmVi
eSByZWxlYXNlZCBpbnRvIHRoZQpwdWJsaWMgZG9tYWluLiBUaGUgYF92ZXJz
aW9uLnB5YCB0aGF0IGl0IGNyZWF0ZXMgaXMgYWxzbyBpbiB0aGUgcHVibGlj
CmRvbWFpbi4KCiIiIgoKaW1wb3J0IG9zLCBzeXMsIHJlLCBzdWJwcm9jZXNz
LCBlcnJubwpmcm9tIGRpc3R1dGlscy5jb3JlIGltcG9ydCBDb21tYW5kCmZy
b20gZGlzdHV0aWxzLmNvbW1hbmQuc2Rpc3QgaW1wb3J0IHNkaXN0IGFzIF9z
ZGlzdApmcm9tIGRpc3R1dGlscy5jb21tYW5kLmJ1aWxkIGltcG9ydCBidWls
ZCBhcyBfYnVpbGQKCiMgdGhlc2UgY29uZmlndXJhdGlvbiBzZXR0aW5ncyB3
aWxsIGJlIG92ZXJyaWRkZW4gYnkgc2V0dXAucHkgYWZ0ZXIgaXQKIyBpbXBv
cnRzIHVzCnZlcnNpb25maWxlX3NvdXJjZSA9IE5vbmUKdmVyc2lvbmZpbGVf
YnVpbGQgPSBOb25lCnRhZ19wcmVmaXggPSBOb25lCnBhcmVudGRpcl9wcmVm
aXggPSBOb25lClZDUyA9IE5vbmUKCiMgdGhlc2UgZGljdGlvbmFyaWVzIGNv
bnRhaW4gVkNTLXNwZWNpZmljIHRvb2xzCkxPTkdfVkVSU0lPTl9QWSA9IHt9
CgpkZWYgcnVuX2NvbW1hbmQoY29tbWFuZHMsIGFyZ3MsIGN3ZD1Ob25lLCB2
ZXJib3NlPUZhbHNlLCBoaWRlX3N0ZGVycj1GYWxzZSk6CiAgICBhc3NlcnQg
aXNpbnN0YW5jZShjb21tYW5kcywgbGlzdCkKICAgIHAgPSBOb25lCiAgICBm
b3IgYyBpbiBjb21tYW5kczoKICAgICAgICB0cnk6CiAgICAgICAgICAgICMg
cmVtZW1iZXIgc2hlbGw9RmFsc2UsIHNvIHVzZSBnaXQuY21kIG9uIHdpbmRv
d3MsIG5vdCBqdXN0IGdpdAogICAgICAgICAgICBwID0gc3VicHJvY2Vzcy5Q
b3BlbihbY10gKyBhcmdzLCBjd2Q9Y3dkLCBzdGRvdXQ9c3VicHJvY2Vzcy5Q
SVBFLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGRlcnI9
KHN1YnByb2Nlc3MuUElQRSBpZiBoaWRlX3N0ZGVycgogICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgTm9uZSkpCiAgICAg
ICAgICAgIGJyZWFrCiAgICAgICAgZXhjZXB0IEVudmlyb25tZW50RXJyb3I6
CiAgICAgICAgICAgIGUgPSBzeXMuZXhjX2luZm8oKVsxXQogICAgICAgICAg
ICBpZiBlLmVycm5vID09IGVycm5vLkVOT0VOVDoKICAgICAgICAgICAgICAg
IGNvbnRpbnVlCiAgICAgICAgICAgIGlmIHZlcmJvc2U6CiAgICAgICAgICAg
ICAgICBwcmludCgidW5hYmxlIHRvIHJ1biAlcyIgJSBhcmdzWzBdKQogICAg
ICAgICAgICAgICAgcHJpbnQoZSkKICAgICAgICAgICAgcmV0dXJuIE5vbmUK
ICAgIGVsc2U6CiAgICAgICAgaWYgdmVyYm9zZToKICAgICAgICAgICAgcHJp
bnQoInVuYWJsZSB0byBmaW5kIGNvbW1hbmQsIHRyaWVkICVzIiAlIChjb21t
YW5kcywpKQogICAgICAgIHJldHVybiBOb25lCiAgICBzdGRvdXQgPSBwLmNv
bW11bmljYXRlKClbMF0uc3RyaXAoKQogICAgaWYgc3lzLnZlcnNpb24gPj0g
JzMnOgogICAgICAgIHN0ZG91dCA9IHN0ZG91dC5kZWNvZGUoKQogICAgaWYg
cC5yZXR1cm5jb2RlICE9IDA6CiAgICAgICAgaWYgdmVyYm9zZToKICAgICAg
ICAgICAgcHJpbnQoInVuYWJsZSB0byBydW4gJXMgKGVycm9yKSIgJSBhcmdz
WzBdKQogICAgICAgIHJldHVybiBOb25lCiAgICByZXR1cm4gc3Rkb3V0CgpM
T05HX1ZFUlNJT05fUFlbJ2dpdCddID0gJycnCiMgVGhpcyBmaWxlIGhlbHBz
IHRvIGNvbXB1dGUgYSB2ZXJzaW9uIG51bWJlciBpbiBzb3VyY2UgdHJlZXMg
b2J0YWluZWQgZnJvbQojIGdpdC1hcmNoaXZlIHRhcmJhbGwgKHN1Y2ggYXMg
dGhvc2UgcHJvdmlkZWQgYnkgZ2l0aHVicyBkb3dubG9hZC1mcm9tLXRhZwoj
IGZlYXR1cmUpLiBEaXN0cmlidXRpb24gdGFyYmFsbHMgKGJ1aWx0IGJ5IHNl
dHVwLnB5IHNkaXN0KSBhbmQgYnVpbGQKIyBkaXJlY3RvcmllcyAocHJvZHVj
ZWQgYnkgc2V0dXAucHkgYnVpbGQpIHdpbGwgY29udGFpbiBhIG11Y2ggc2hv
cnRlciBmaWxlCiMgdGhhdCBqdXN0IGNvbnRhaW5zIHRoZSBjb21wdXRlZCB2
ZXJzaW9uIG51bWJlci4KCiMgVGhpcyBmaWxlIGlzIHJlbGVhc2VkIGludG8g
dGhlIHB1YmxpYyBkb21haW4uIEdlbmVyYXRlZCBieQojIHZlcnNpb25lZXIt
MC4xMSAoaHR0cHM6Ly9naXRodWIuY29tL3dhcm5lci9weXRob24tdmVyc2lv
bmVlcikKCiMgdGhlc2Ugc3RyaW5ncyB3aWxsIGJlIHJlcGxhY2VkIGJ5IGdp
dCBkdXJpbmcgZ2l0LWFyY2hpdmUKZ2l0X3JlZm5hbWVzID0gIiUoRE9MTEFS
KXNGb3JtYXQ6JSVkJShET0xMQVIpcyIKZ2l0X2Z1bGwgPSAiJShET0xMQVIp
c0Zvcm1hdDolJUglKERPTExBUilzIgoKIyB0aGVzZSBzdHJpbmdzIGFyZSBm
aWxsZWQgaW4gd2hlbiAnc2V0dXAucHkgdmVyc2lvbmVlcicgY3JlYXRlcyBf
dmVyc2lvbi5weQp0YWdfcHJlZml4ID0gIiUoVEFHX1BSRUZJWClzIgpwYXJl
bnRkaXJfcHJlZml4ID0gIiUoUEFSRU5URElSX1BSRUZJWClzIgp2ZXJzaW9u
ZmlsZV9zb3VyY2UgPSAiJShWRVJTSU9ORklMRV9TT1VSQ0UpcyIKCmltcG9y
dCBvcywgc3lzLCByZSwgc3VicHJvY2VzcywgZXJybm8KCmRlZiBydW5fY29t
bWFuZChjb21tYW5kcywgYXJncywgY3dkPU5vbmUsIHZlcmJvc2U9RmFsc2Us
IGhpZGVfc3RkZXJyPUZhbHNlKToKICAgIGFzc2VydCBpc2luc3RhbmNlKGNv
bW1hbmRzLCBsaXN0KQogICAgcCA9IE5vbmUKICAgIGZvciBjIGluIGNvbW1h
bmRzOgogICAgICAgIHRyeToKICAgICAgICAgICAgIyByZW1lbWJlciBzaGVs
bD1GYWxzZSwgc28gdXNlIGdpdC5jbWQgb24gd2luZG93cywgbm90IGp1c3Qg
Z2l0CiAgICAgICAgICAgIHAgPSBzdWJwcm9jZXNzLlBvcGVuKFtjXSArIGFy
Z3MsIGN3ZD1jd2QsIHN0ZG91dD1zdWJwcm9jZXNzLlBJUEUsCiAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgIHN0ZGVycj0oc3VicHJvY2Vzcy5Q
SVBFIGlmIGhpZGVfc3RkZXJyCiAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgZWxzZSBOb25lKSkKICAgICAgICAgICAgYnJlYWsK
ICAgICAgICBleGNlcHQgRW52aXJvbm1lbnRFcnJvcjoKICAgICAgICAgICAg
ZSA9IHN5cy5leGNfaW5mbygpWzFdCiAgICAgICAgICAgIGlmIGUuZXJybm8g
PT0gZXJybm8uRU5PRU5UOgogICAgICAgICAgICAgICAgY29udGludWUKICAg
ICAgICAgICAgaWYgdmVyYm9zZToKICAgICAgICAgICAgICAgIHByaW50KCJ1
bmFibGUgdG8gcnVuICUlcyIgJSUgYXJnc1swXSkKICAgICAgICAgICAgICAg
IHByaW50KGUpCiAgICAgICAgICAgIHJldHVybiBOb25lCiAgICBlbHNlOgog
ICAgICAgIGlmIHZlcmJvc2U6CiAgICAgICAgICAgIHByaW50KCJ1bmFibGUg
dG8gZmluZCBjb21tYW5kLCB0cmllZCAlJXMiICUlIChjb21tYW5kcywpKQog
ICAgICAgIHJldHVybiBOb25lCiAgICBzdGRvdXQgPSBwLmNvbW11bmljYXRl
KClbMF0uc3RyaXAoKQogICAgaWYgc3lzLnZlcnNpb24gPj0gJzMnOgogICAg
ICAgIHN0ZG91dCA9IHN0ZG91dC5kZWNvZGUoKQogICAgaWYgcC5yZXR1cm5j
b2RlICE9IDA6CiAgICAgICAgaWYgdmVyYm9zZToKICAgICAgICAgICAgcHJp
bnQoInVuYWJsZSB0byBydW4gJSVzIChlcnJvcikiICUlIGFyZ3NbMF0pCiAg
ICAgICAgcmV0dXJuIE5vbmUKICAgIHJldHVybiBzdGRvdXQKCgpkZWYgdmVy
c2lvbnNfZnJvbV9wYXJlbnRkaXIocGFyZW50ZGlyX3ByZWZpeCwgcm9vdCwg
dmVyYm9zZT1GYWxzZSk6CiAgICAjIFNvdXJjZSB0YXJiYWxscyBjb252ZW50
aW9uYWxseSB1bnBhY2sgaW50byBhIGRpcmVjdG9yeSB0aGF0IGluY2x1ZGVz
CiAgICAjIGJvdGggdGhlIHByb2plY3QgbmFtZSBhbmQgYSB2ZXJzaW9uIHN0
cmluZy4KICAgIGRpcm5hbWUgPSBvcy5wYXRoLmJhc2VuYW1lKHJvb3QpCiAg
ICBpZiBub3QgZGlybmFtZS5zdGFydHN3aXRoKHBhcmVudGRpcl9wcmVmaXgp
OgogICAgICAgIGlmIHZlcmJvc2U6CiAgICAgICAgICAgIHByaW50KCJndWVz
c2luZyByb290ZGlyIGlzICclJXMnLCBidXQgJyUlcycgZG9lc24ndCBzdGFy
dCB3aXRoIHByZWZpeCAnJSVzJyIgJSUKICAgICAgICAgICAgICAgICAgKHJv
b3QsIGRpcm5hbWUsIHBhcmVudGRpcl9wcmVmaXgpKQogICAgICAgIHJldHVy
biBOb25lCiAgICByZXR1cm4geyJ2ZXJzaW9uIjogZGlybmFtZVtsZW4ocGFy
ZW50ZGlyX3ByZWZpeCk6XSwgImZ1bGwiOiAiIn0KCmRlZiBnaXRfZ2V0X2tl
eXdvcmRzKHZlcnNpb25maWxlX2Ficyk6CiAgICAjIHRoZSBjb2RlIGVtYmVk
ZGVkIGluIF92ZXJzaW9uLnB5IGNhbiBqdXN0IGZldGNoIHRoZSB2YWx1ZSBv
ZiB0aGVzZQogICAgIyBrZXl3b3Jkcy4gV2hlbiB1c2VkIGZyb20gc2V0dXAu
cHksIHdlIGRvbid0IHdhbnQgdG8gaW1wb3J0IF92ZXJzaW9uLnB5LAogICAg
IyBzbyB3ZSBkbyBpdCB3aXRoIGEgcmVnZXhwIGluc3RlYWQuIFRoaXMgZnVu
Y3Rpb24gaXMgbm90IHVzZWQgZnJvbQogICAgIyBfdmVyc2lvbi5weS4KICAg
IGtleXdvcmRzID0ge30KICAgIHRyeToKICAgICAgICBmID0gb3Blbih2ZXJz
aW9uZmlsZV9hYnMsInIiKQogICAgICAgIGZvciBsaW5lIGluIGYucmVhZGxp
bmVzKCk6CiAgICAgICAgICAgIGlmIGxpbmUuc3RyaXAoKS5zdGFydHN3aXRo
KCJnaXRfcmVmbmFtZXMgPSIpOgogICAgICAgICAgICAgICAgbW8gPSByZS5z
ZWFyY2gocic9XHMqIiguKikiJywgbGluZSkKICAgICAgICAgICAgICAgIGlm
IG1vOgogICAgICAgICAgICAgICAgICAgIGtleXdvcmRzWyJyZWZuYW1lcyJd
ID0gbW8uZ3JvdXAoMSkKICAgICAgICAgICAgaWYgbGluZS5zdHJpcCgpLnN0
YXJ0c3dpdGgoImdpdF9mdWxsID0iKToKICAgICAgICAgICAgICAgIG1vID0g
cmUuc2VhcmNoKHInPVxzKiIoLiopIicsIGxpbmUpCiAgICAgICAgICAgICAg
ICBpZiBtbzoKICAgICAgICAgICAgICAgICAgICBrZXl3b3Jkc1siZnVsbCJd
ID0gbW8uZ3JvdXAoMSkKICAgICAgICBmLmNsb3NlKCkKICAgIGV4Y2VwdCBF
bnZpcm9ubWVudEVycm9yOgogICAgICAgIHBhc3MKICAgIHJldHVybiBrZXl3
b3JkcwoKZGVmIGdpdF92ZXJzaW9uc19mcm9tX2tleXdvcmRzKGtleXdvcmRz
LCB0YWdfcHJlZml4LCB2ZXJib3NlPUZhbHNlKToKICAgIGlmIG5vdCBrZXl3
b3JkczoKICAgICAgICByZXR1cm4ge30gIyBrZXl3b3JkLWZpbmRpbmcgZnVu
Y3Rpb24gZmFpbGVkIHRvIGZpbmQga2V5d29yZHMKICAgIHJlZm5hbWVzID0g
a2V5d29yZHNbInJlZm5hbWVzIl0uc3RyaXAoKQogICAgaWYgcmVmbmFtZXMu
c3RhcnRzd2l0aCgiJEZvcm1hdCIpOgogICAgICAgIGlmIHZlcmJvc2U6CiAg
ICAgICAgICAgIHByaW50KCJrZXl3b3JkcyBhcmUgdW5leHBhbmRlZCwgbm90
IHVzaW5nIikKICAgICAgICByZXR1cm4ge30gIyB1bmV4cGFuZGVkLCBzbyBu
b3QgaW4gYW4gdW5wYWNrZWQgZ2l0LWFyY2hpdmUgdGFyYmFsbAogICAgcmVm
cyA9IHNldChbci5zdHJpcCgpIGZvciByIGluIHJlZm5hbWVzLnN0cmlwKCIo
KSIpLnNwbGl0KCIsIildKQogICAgIyBzdGFydGluZyBpbiBnaXQtMS44LjMs
IHRhZ3MgYXJlIGxpc3RlZCBhcyAidGFnOiBmb28tMS4wIiBpbnN0ZWFkIG9m
CiAgICAjIGp1c3QgImZvby0xLjAiLiBJZiB3ZSBzZWUgYSAidGFnOiAiIHBy
ZWZpeCwgcHJlZmVyIHRob3NlLgogICAgVEFHID0gInRhZzogIgogICAgdGFn
cyA9IHNldChbcltsZW4oVEFHKTpdIGZvciByIGluIHJlZnMgaWYgci5zdGFy
dHN3aXRoKFRBRyldKQogICAgaWYgbm90IHRhZ3M6CiAgICAgICAgIyBFaXRo
ZXIgd2UncmUgdXNpbmcgZ2l0IDwgMS44LjMsIG9yIHRoZXJlIHJlYWxseSBh
cmUgbm8gdGFncy4gV2UgdXNlCiAgICAgICAgIyBhIGhldXJpc3RpYzogYXNz
dW1lIGFsbCB2ZXJzaW9uIHRhZ3MgaGF2ZSBhIGRpZ2l0LiBUaGUgb2xkIGdp
dCAlJWQKICAgICAgICAjIGV4cGFuc2lvbiBiZWhhdmVzIGxpa2UgZ2l0IGxv
ZyAtLWRlY29yYXRlPXNob3J0IGFuZCBzdHJpcHMgb3V0IHRoZQogICAgICAg
ICMgcmVmcy9oZWFkcy8gYW5kIHJlZnMvdGFncy8gcHJlZml4ZXMgdGhhdCB3
b3VsZCBsZXQgdXMgZGlzdGluZ3Vpc2gKICAgICAgICAjIGJldHdlZW4gYnJh
bmNoZXMgYW5kIHRhZ3MuIEJ5IGlnbm9yaW5nIHJlZm5hbWVzIHdpdGhvdXQg
ZGlnaXRzLCB3ZQogICAgICAgICMgZmlsdGVyIG91dCBtYW55IGNvbW1vbiBi
cmFuY2ggbmFtZXMgbGlrZSAicmVsZWFzZSIgYW5kCiAgICAgICAgIyAic3Rh
YmlsaXphdGlvbiIsIGFzIHdlbGwgYXMgIkhFQUQiIGFuZCAibWFzdGVyIi4K
ICAgICAgICB0YWdzID0gc2V0KFtyIGZvciByIGluIHJlZnMgaWYgcmUuc2Vh
cmNoKHInXGQnLCByKV0pCiAgICAgICAgaWYgdmVyYm9zZToKICAgICAgICAg
ICAgcHJpbnQoImRpc2NhcmRpbmcgJyUlcycsIG5vIGRpZ2l0cyIgJSUgIiwi
LmpvaW4ocmVmcy10YWdzKSkKICAgIGlmIHZlcmJvc2U6CiAgICAgICAgcHJp
bnQoImxpa2VseSB0YWdzOiAlJXMiICUlICIsIi5qb2luKHNvcnRlZCh0YWdz
KSkpCiAgICBmb3IgcmVmIGluIHNvcnRlZCh0YWdzKToKICAgICAgICAjIHNv
cnRpbmcgd2lsbCBwcmVmZXIgZS5nLiAiMi4wIiBvdmVyICIyLjByYzEiCiAg
ICAgICAgaWYgcmVmLnN0YXJ0c3dpdGgodGFnX3ByZWZpeCk6CiAgICAgICAg
ICAgIHIgPSByZWZbbGVuKHRhZ19wcmVmaXgpOl0KICAgICAgICAgICAgaWYg
dmVyYm9zZToKICAgICAgICAgICAgICAgIHByaW50KCJwaWNraW5nICUlcyIg
JSUgcikKICAgICAgICAgICAgcmV0dXJuIHsgInZlcnNpb24iOiByLAogICAg
ICAgICAgICAgICAgICAgICAiZnVsbCI6IGtleXdvcmRzWyJmdWxsIl0uc3Ry
aXAoKSB9CiAgICAjIG5vIHN1aXRhYmxlIHRhZ3MsIHNvIHdlIHVzZSB0aGUg
ZnVsbCByZXZpc2lvbiBpZAogICAgaWYgdmVyYm9zZToKICAgICAgICBwcmlu
dCgibm8gc3VpdGFibGUgdGFncywgdXNpbmcgZnVsbCByZXZpc2lvbiBpZCIp
CiAgICByZXR1cm4geyAidmVyc2lvbiI6IGtleXdvcmRzWyJmdWxsIl0uc3Ry
aXAoKSwKICAgICAgICAgICAgICJmdWxsIjoga2V5d29yZHNbImZ1bGwiXS5z
dHJpcCgpIH0KCgpkZWYgZ2l0X3ZlcnNpb25zX2Zyb21fdmNzKHRhZ19wcmVm
aXgsIHJvb3QsIHZlcmJvc2U9RmFsc2UpOgogICAgIyB0aGlzIHJ1bnMgJ2dp
dCcgZnJvbSB0aGUgcm9vdCBvZiB0aGUgc291cmNlIHRyZWUuIFRoaXMgb25s
eSBnZXRzIGNhbGxlZAogICAgIyBpZiB0aGUgZ2l0LWFyY2hpdmUgJ3N1YnN0
JyBrZXl3b3JkcyB3ZXJlICpub3QqIGV4cGFuZGVkLCBhbmQKICAgICMgX3Zl
cnNpb24ucHkgaGFzbid0IGFscmVhZHkgYmVlbiByZXdyaXR0ZW4gd2l0aCBh
IHNob3J0IHZlcnNpb24gc3RyaW5nLAogICAgIyBtZWFuaW5nIHdlJ3JlIGlu
c2lkZSBhIGNoZWNrZWQgb3V0IHNvdXJjZSB0cmVlLgoKICAgIGlmIG5vdCBv
cy5wYXRoLmV4aXN0cyhvcy5wYXRoLmpvaW4ocm9vdCwgIi5naXQiKSk6CiAg
ICAgICAgaWYgdmVyYm9zZToKICAgICAgICAgICAgcHJpbnQoIm5vIC5naXQg
aW4gJSVzIiAlJSByb290KQogICAgICAgIHJldHVybiB7fQoKICAgIEdJVFMg
PSBbImdpdCJdCiAgICBpZiBzeXMucGxhdGZvcm0gPT0gIndpbjMyIjoKICAg
ICAgICBHSVRTID0gWyJnaXQuY21kIiwgImdpdC5leGUiXQogICAgc3Rkb3V0
ID0gcnVuX2NvbW1hbmQoR0lUUywgWyJkZXNjcmliZSIsICItLXRhZ3MiLCAi
LS1kaXJ0eSIsICItLWFsd2F5cyJdLAogICAgICAgICAgICAgICAgICAgICAg
ICAgY3dkPXJvb3QpCiAgICBpZiBzdGRvdXQgaXMgTm9uZToKICAgICAgICBy
ZXR1cm4ge30KICAgIGlmIG5vdCBzdGRvdXQuc3RhcnRzd2l0aCh0YWdfcHJl
Zml4KToKICAgICAgICBpZiB2ZXJib3NlOgogICAgICAgICAgICBwcmludCgi
dGFnICclJXMnIGRvZXNuJ3Qgc3RhcnQgd2l0aCBwcmVmaXggJyUlcyciICUl
IChzdGRvdXQsIHRhZ19wcmVmaXgpKQogICAgICAgIHJldHVybiB7fQogICAg
dGFnID0gc3Rkb3V0W2xlbih0YWdfcHJlZml4KTpdCiAgICBzdGRvdXQgPSBy
dW5fY29tbWFuZChHSVRTLCBbInJldi1wYXJzZSIsICJIRUFEIl0sIGN3ZD1y
b290KQogICAgaWYgc3Rkb3V0IGlzIE5vbmU6CiAgICAgICAgcmV0dXJuIHt9
CiAgICBmdWxsID0gc3Rkb3V0LnN0cmlwKCkKICAgIGlmIHRhZy5lbmRzd2l0
aCgiLWRpcnR5Iik6CiAgICAgICAgZnVsbCArPSAiLWRpcnR5IgogICAgcmV0
dXJuIHsidmVyc2lvbiI6IHRhZywgImZ1bGwiOiBmdWxsfQoKCmRlZiBnZXRf
dmVyc2lvbnMoZGVmYXVsdD17InZlcnNpb24iOiAidW5rbm93biIsICJmdWxs
IjogIiJ9LCB2ZXJib3NlPUZhbHNlKToKICAgICMgSSBhbSBpbiBfdmVyc2lv
bi5weSwgd2hpY2ggbGl2ZXMgYXQgUk9PVC9WRVJTSU9ORklMRV9TT1VSQ0Uu
IElmIHdlIGhhdmUKICAgICMgX19maWxlX18sIHdlIGNhbiB3b3JrIGJhY2t3
YXJkcyBmcm9tIHRoZXJlIHRvIHRoZSByb290LiBTb21lCiAgICAjIHB5MmV4
ZS9iYmZyZWV6ZS9ub24tQ1B5dGhvbiBpbXBsZW1lbnRhdGlvbnMgZG9uJ3Qg
ZG8gX19maWxlX18sIGluIHdoaWNoCiAgICAjIGNhc2Ugd2UgY2FuIG9ubHkg
dXNlIGV4cGFuZGVkIGtleXdvcmRzLgoKICAgIGtleXdvcmRzID0geyAicmVm
bmFtZXMiOiBnaXRfcmVmbmFtZXMsICJmdWxsIjogZ2l0X2Z1bGwgfQogICAg
dmVyID0gZ2l0X3ZlcnNpb25zX2Zyb21fa2V5d29yZHMoa2V5d29yZHMsIHRh
Z19wcmVmaXgsIHZlcmJvc2UpCiAgICBpZiB2ZXI6CiAgICAgICAgcmV0dXJu
IHZlcgoKICAgIHRyeToKICAgICAgICByb290ID0gb3MucGF0aC5hYnNwYXRo
KF9fZmlsZV9fKQogICAgICAgICMgdmVyc2lvbmZpbGVfc291cmNlIGlzIHRo
ZSByZWxhdGl2ZSBwYXRoIGZyb20gdGhlIHRvcCBvZiB0aGUgc291cmNlCiAg
ICAgICAgIyB0cmVlICh3aGVyZSB0aGUgLmdpdCBkaXJlY3RvcnkgbWlnaHQg
bGl2ZSkgdG8gdGhpcyBmaWxlLiBJbnZlcnQKICAgICAgICAjIHRoaXMgdG8g
ZmluZCB0aGUgcm9vdCBmcm9tIF9fZmlsZV9fLgogICAgICAgIGZvciBpIGlu
IHJhbmdlKGxlbih2ZXJzaW9uZmlsZV9zb3VyY2Uuc3BsaXQob3Muc2VwKSkp
OgogICAgICAgICAgICByb290ID0gb3MucGF0aC5kaXJuYW1lKHJvb3QpCiAg
ICBleGNlcHQgTmFtZUVycm9yOgogICAgICAgIHJldHVybiBkZWZhdWx0Cgog
ICAgcmV0dXJuIChnaXRfdmVyc2lvbnNfZnJvbV92Y3ModGFnX3ByZWZpeCwg
cm9vdCwgdmVyYm9zZSkKICAgICAgICAgICAgb3IgdmVyc2lvbnNfZnJvbV9w
YXJlbnRkaXIocGFyZW50ZGlyX3ByZWZpeCwgcm9vdCwgdmVyYm9zZSkKICAg
ICAgICAgICAgb3IgZGVmYXVsdCkKJycnCgpkZWYgZ2l0X2dldF9rZXl3b3Jk
cyh2ZXJzaW9uZmlsZV9hYnMpOgogICAgIyB0aGUgY29kZSBlbWJlZGRlZCBp
biBfdmVyc2lvbi5weSBjYW4ganVzdCBmZXRjaCB0aGUgdmFsdWUgb2YgdGhl
c2UKICAgICMga2V5d29yZHMuIFdoZW4gdXNlZCBmcm9tIHNldHVwLnB5LCB3
ZSBkb24ndCB3YW50IHRvIGltcG9ydCBfdmVyc2lvbi5weSwKICAgICMgc28g
d2UgZG8gaXQgd2l0aCBhIHJlZ2V4cCBpbnN0ZWFkLiBUaGlzIGZ1bmN0aW9u
IGlzIG5vdCB1c2VkIGZyb20KICAgICMgX3ZlcnNpb24ucHkuCiAgICBrZXl3
b3JkcyA9IHt9CiAgICB0cnk6CiAgICAgICAgZiA9IG9wZW4odmVyc2lvbmZp
bGVfYWJzLCJyIikKICAgICAgICBmb3IgbGluZSBpbiBmLnJlYWRsaW5lcygp
OgogICAgICAgICAgICBpZiBsaW5lLnN0cmlwKCkuc3RhcnRzd2l0aCgiZ2l0
X3JlZm5hbWVzID0iKToKICAgICAgICAgICAgICAgIG1vID0gcmUuc2VhcmNo
KHInPVxzKiIoLiopIicsIGxpbmUpCiAgICAgICAgICAgICAgICBpZiBtbzoK
ICAgICAgICAgICAgICAgICAgICBrZXl3b3Jkc1sicmVmbmFtZXMiXSA9IG1v
Lmdyb3VwKDEpCiAgICAgICAgICAgIGlmIGxpbmUuc3RyaXAoKS5zdGFydHN3
aXRoKCJnaXRfZnVsbCA9Iik6CiAgICAgICAgICAgICAgICBtbyA9IHJlLnNl
YXJjaChyJz1ccyoiKC4qKSInLCBsaW5lKQogICAgICAgICAgICAgICAgaWYg
bW86CiAgICAgICAgICAgICAgICAgICAga2V5d29yZHNbImZ1bGwiXSA9IG1v
Lmdyb3VwKDEpCiAgICAgICAgZi5jbG9zZSgpCiAgICBleGNlcHQgRW52aXJv
bm1lbnRFcnJvcjoKICAgICAgICBwYXNzCiAgICByZXR1cm4ga2V5d29yZHMK
CmRlZiBnaXRfdmVyc2lvbnNfZnJvbV9rZXl3b3JkcyhrZXl3b3JkcywgdGFn
X3ByZWZpeCwgdmVyYm9zZT1GYWxzZSk6CiAgICBpZiBub3Qga2V5d29yZHM6
CiAgICAgICAgcmV0dXJuIHt9ICMga2V5d29yZC1maW5kaW5nIGZ1bmN0aW9u
IGZhaWxlZCB0byBmaW5kIGtleXdvcmRzCiAgICByZWZuYW1lcyA9IGtleXdv
cmRzWyJyZWZuYW1lcyJdLnN0cmlwKCkKICAgIGlmIHJlZm5hbWVzLnN0YXJ0
c3dpdGgoIiRGb3JtYXQiKToKICAgICAgICBpZiB2ZXJib3NlOgogICAgICAg
ICAgICBwcmludCgia2V5d29yZHMgYXJlIHVuZXhwYW5kZWQsIG5vdCB1c2lu
ZyIpCiAgICAgICAgcmV0dXJuIHt9ICMgdW5leHBhbmRlZCwgc28gbm90IGlu
IGFuIHVucGFja2VkIGdpdC1hcmNoaXZlIHRhcmJhbGwKICAgIHJlZnMgPSBz
ZXQoW3Iuc3RyaXAoKSBmb3IgciBpbiByZWZuYW1lcy5zdHJpcCgiKCkiKS5z
cGxpdCgiLCIpXSkKICAgICMgc3RhcnRpbmcgaW4gZ2l0LTEuOC4zLCB0YWdz
IGFyZSBsaXN0ZWQgYXMgInRhZzogZm9vLTEuMCIgaW5zdGVhZCBvZgogICAg
IyBqdXN0ICJmb28tMS4wIi4gSWYgd2Ugc2VlIGEgInRhZzogIiBwcmVmaXgs
IHByZWZlciB0aG9zZS4KICAgIFRBRyA9ICJ0YWc6ICIKICAgIHRhZ3MgPSBz
ZXQoW3JbbGVuKFRBRyk6XSBmb3IgciBpbiByZWZzIGlmIHIuc3RhcnRzd2l0
aChUQUcpXSkKICAgIGlmIG5vdCB0YWdzOgogICAgICAgICMgRWl0aGVyIHdl
J3JlIHVzaW5nIGdpdCA8IDEuOC4zLCBvciB0aGVyZSByZWFsbHkgYXJlIG5v
IHRhZ3MuIFdlIHVzZQogICAgICAgICMgYSBoZXVyaXN0aWM6IGFzc3VtZSBh
bGwgdmVyc2lvbiB0YWdzIGhhdmUgYSBkaWdpdC4gVGhlIG9sZCBnaXQgJWQK
ICAgICAgICAjIGV4cGFuc2lvbiBiZWhhdmVzIGxpa2UgZ2l0IGxvZyAtLWRl
Y29yYXRlPXNob3J0IGFuZCBzdHJpcHMgb3V0IHRoZQogICAgICAgICMgcmVm
cy9oZWFkcy8gYW5kIHJlZnMvdGFncy8gcHJlZml4ZXMgdGhhdCB3b3VsZCBs
ZXQgdXMgZGlzdGluZ3Vpc2gKICAgICAgICAjIGJldHdlZW4gYnJhbmNoZXMg
YW5kIHRhZ3MuIEJ5IGlnbm9yaW5nIHJlZm5hbWVzIHdpdGhvdXQgZGlnaXRz
LCB3ZQogICAgICAgICMgZmlsdGVyIG91dCBtYW55IGNvbW1vbiBicmFuY2gg
bmFtZXMgbGlrZSAicmVsZWFzZSIgYW5kCiAgICAgICAgIyAic3RhYmlsaXph
dGlvbiIsIGFzIHdlbGwgYXMgIkhFQUQiIGFuZCAibWFzdGVyIi4KICAgICAg
ICB0YWdzID0gc2V0KFtyIGZvciByIGluIHJlZnMgaWYgcmUuc2VhcmNoKHIn
XGQnLCByKV0pCiAgICAgICAgaWYgdmVyYm9zZToKICAgICAgICAgICAgcHJp
bnQoImRpc2NhcmRpbmcgJyVzJywgbm8gZGlnaXRzIiAlICIsIi5qb2luKHJl
ZnMtdGFncykpCiAgICBpZiB2ZXJib3NlOgogICAgICAgIHByaW50KCJsaWtl
bHkgdGFnczogJXMiICUgIiwiLmpvaW4oc29ydGVkKHRhZ3MpKSkKICAgIGZv
ciByZWYgaW4gc29ydGVkKHRhZ3MpOgogICAgICAgICMgc29ydGluZyB3aWxs
IHByZWZlciBlLmcuICIyLjAiIG92ZXIgIjIuMHJjMSIKICAgICAgICBpZiBy
ZWYuc3RhcnRzd2l0aCh0YWdfcHJlZml4KToKICAgICAgICAgICAgciA9IHJl
ZltsZW4odGFnX3ByZWZpeCk6XQogICAgICAgICAgICBpZiB2ZXJib3NlOgog
ICAgICAgICAgICAgICAgcHJpbnQoInBpY2tpbmcgJXMiICUgcikKICAgICAg
ICAgICAgcmV0dXJuIHsgInZlcnNpb24iOiByLAogICAgICAgICAgICAgICAg
ICAgICAiZnVsbCI6IGtleXdvcmRzWyJmdWxsIl0uc3RyaXAoKSB9CiAgICAj
IG5vIHN1aXRhYmxlIHRhZ3MsIHNvIHdlIHVzZSB0aGUgZnVsbCByZXZpc2lv
biBpZAogICAgaWYgdmVyYm9zZToKICAgICAgICBwcmludCgibm8gc3VpdGFi
bGUgdGFncywgdXNpbmcgZnVsbCByZXZpc2lvbiBpZCIpCiAgICByZXR1cm4g
eyAidmVyc2lvbiI6IGtleXdvcmRzWyJmdWxsIl0uc3RyaXAoKSwKICAgICAg
ICAgICAgICJmdWxsIjoga2V5d29yZHNbImZ1bGwiXS5zdHJpcCgpIH0KCgpk
ZWYgZ2l0X3ZlcnNpb25zX2Zyb21fdmNzKHRhZ19wcmVmaXgsIHJvb3QsIHZl
cmJvc2U9RmFsc2UpOgogICAgIyB0aGlzIHJ1bnMgJ2dpdCcgZnJvbSB0aGUg
cm9vdCBvZiB0aGUgc291cmNlIHRyZWUuIFRoaXMgb25seSBnZXRzIGNhbGxl
ZAogICAgIyBpZiB0aGUgZ2l0LWFyY2hpdmUgJ3N1YnN0JyBrZXl3b3JkcyB3
ZXJlICpub3QqIGV4cGFuZGVkLCBhbmQKICAgICMgX3ZlcnNpb24ucHkgaGFz
bid0IGFscmVhZHkgYmVlbiByZXdyaXR0ZW4gd2l0aCBhIHNob3J0IHZlcnNp
b24gc3RyaW5nLAogICAgIyBtZWFuaW5nIHdlJ3JlIGluc2lkZSBhIGNoZWNr
ZWQgb3V0IHNvdXJjZSB0cmVlLgoKICAgIGlmIG5vdCBvcy5wYXRoLmV4aXN0
cyhvcy5wYXRoLmpvaW4ocm9vdCwgIi5naXQiKSk6CiAgICAgICAgaWYgdmVy
Ym9zZToKICAgICAgICAgICAgcHJpbnQoIm5vIC5naXQgaW4gJXMiICUgcm9v
dCkKICAgICAgICByZXR1cm4ge30KCiAgICBHSVRTID0gWyJnaXQiXQogICAg
aWYgc3lzLnBsYXRmb3JtID09ICJ3aW4zMiI6CiAgICAgICAgR0lUUyA9IFsi
Z2l0LmNtZCIsICJnaXQuZXhlIl0KICAgIHN0ZG91dCA9IHJ1bl9jb21tYW5k
KEdJVFMsIFsiZGVzY3JpYmUiLCAiLS10YWdzIiwgIi0tZGlydHkiLCAiLS1h
bHdheXMiXSwKICAgICAgICAgICAgICAgICAgICAgICAgIGN3ZD1yb290KQog
ICAgaWYgc3Rkb3V0IGlzIE5vbmU6CiAgICAgICAgcmV0dXJuIHt9CiAgICBp
ZiBub3Qgc3Rkb3V0LnN0YXJ0c3dpdGgodGFnX3ByZWZpeCk6CiAgICAgICAg
aWYgdmVyYm9zZToKICAgICAgICAgICAgcHJpbnQoInRhZyAnJXMnIGRvZXNu
J3Qgc3RhcnQgd2l0aCBwcmVmaXggJyVzJyIgJSAoc3Rkb3V0LCB0YWdfcHJl
Zml4KSkKICAgICAgICByZXR1cm4ge30KICAgIHRhZyA9IHN0ZG91dFtsZW4o
dGFnX3ByZWZpeCk6XQogICAgc3Rkb3V0ID0gcnVuX2NvbW1hbmQoR0lUUywg
WyJyZXYtcGFyc2UiLCAiSEVBRCJdLCBjd2Q9cm9vdCkKICAgIGlmIHN0ZG91
dCBpcyBOb25lOgogICAgICAgIHJldHVybiB7fQogICAgZnVsbCA9IHN0ZG91
dC5zdHJpcCgpCiAgICBpZiB0YWcuZW5kc3dpdGgoIi1kaXJ0eSIpOgogICAg
ICAgIGZ1bGwgKz0gIi1kaXJ0eSIKICAgIHJldHVybiB7InZlcnNpb24iOiB0
YWcsICJmdWxsIjogZnVsbH0KCgpkZWYgZG9fdmNzX2luc3RhbGwobWFuaWZl
c3RfaW4sIHZlcnNpb25maWxlX3NvdXJjZSwgaXB5KToKICAgIEdJVFMgPSBb
ImdpdCJdCiAgICBpZiBzeXMucGxhdGZvcm0gPT0gIndpbjMyIjoKICAgICAg
ICBHSVRTID0gWyJnaXQuY21kIiwgImdpdC5leGUiXQogICAgZmlsZXMgPSBb
bWFuaWZlc3RfaW4sIHZlcnNpb25maWxlX3NvdXJjZSwgaXB5XQogICAgdHJ5
OgogICAgICAgIG1lID0gX19maWxlX18KICAgICAgICBpZiBtZS5lbmRzd2l0
aCgiLnB5YyIpIG9yIG1lLmVuZHN3aXRoKCIucHlvIik6CiAgICAgICAgICAg
IG1lID0gb3MucGF0aC5zcGxpdGV4dChtZSlbMF0gKyAiLnB5IgogICAgICAg
IHZlcnNpb25lZXJfZmlsZSA9IG9zLnBhdGgucmVscGF0aChtZSkKICAgIGV4
Y2VwdCBOYW1lRXJyb3I6CiAgICAgICAgdmVyc2lvbmVlcl9maWxlID0gInZl
cnNpb25lZXIucHkiCiAgICBmaWxlcy5hcHBlbmQodmVyc2lvbmVlcl9maWxl
KQogICAgcHJlc2VudCA9IEZhbHNlCiAgICB0cnk6CiAgICAgICAgZiA9IG9w
ZW4oIi5naXRhdHRyaWJ1dGVzIiwgInIiKQogICAgICAgIGZvciBsaW5lIGlu
IGYucmVhZGxpbmVzKCk6CiAgICAgICAgICAgIGlmIGxpbmUuc3RyaXAoKS5z
dGFydHN3aXRoKHZlcnNpb25maWxlX3NvdXJjZSk6CiAgICAgICAgICAgICAg
ICBpZiAiZXhwb3J0LXN1YnN0IiBpbiBsaW5lLnN0cmlwKCkuc3BsaXQoKVsx
Ol06CiAgICAgICAgICAgICAgICAgICAgcHJlc2VudCA9IFRydWUKICAgICAg
ICBmLmNsb3NlKCkKICAgIGV4Y2VwdCBFbnZpcm9ubWVudEVycm9yOgogICAg
ICAgIHBhc3MgICAgCiAgICBpZiBub3QgcHJlc2VudDoKICAgICAgICBmID0g
b3BlbigiLmdpdGF0dHJpYnV0ZXMiLCAiYSsiKQogICAgICAgIGYud3JpdGUo
IiVzIGV4cG9ydC1zdWJzdFxuIiAlIHZlcnNpb25maWxlX3NvdXJjZSkKICAg
ICAgICBmLmNsb3NlKCkKICAgICAgICBmaWxlcy5hcHBlbmQoIi5naXRhdHRy
aWJ1dGVzIikKICAgIHJ1bl9jb21tYW5kKEdJVFMsIFsiYWRkIiwgIi0tIl0g
KyBmaWxlcykKCmRlZiB2ZXJzaW9uc19mcm9tX3BhcmVudGRpcihwYXJlbnRk
aXJfcHJlZml4LCByb290LCB2ZXJib3NlPUZhbHNlKToKICAgICMgU291cmNl
IHRhcmJhbGxzIGNvbnZlbnRpb25hbGx5IHVucGFjayBpbnRvIGEgZGlyZWN0
b3J5IHRoYXQgaW5jbHVkZXMKICAgICMgYm90aCB0aGUgcHJvamVjdCBuYW1l
IGFuZCBhIHZlcnNpb24gc3RyaW5nLgogICAgZGlybmFtZSA9IG9zLnBhdGgu
YmFzZW5hbWUocm9vdCkKICAgIGlmIG5vdCBkaXJuYW1lLnN0YXJ0c3dpdGgo
cGFyZW50ZGlyX3ByZWZpeCk6CiAgICAgICAgaWYgdmVyYm9zZToKICAgICAg
ICAgICAgcHJpbnQoImd1ZXNzaW5nIHJvb3RkaXIgaXMgJyVzJywgYnV0ICcl
cycgZG9lc24ndCBzdGFydCB3aXRoIHByZWZpeCAnJXMnIiAlCiAgICAgICAg
ICAgICAgICAgIChyb290LCBkaXJuYW1lLCBwYXJlbnRkaXJfcHJlZml4KSkK
ICAgICAgICByZXR1cm4gTm9uZQogICAgcmV0dXJuIHsidmVyc2lvbiI6IGRp
cm5hbWVbbGVuKHBhcmVudGRpcl9wcmVmaXgpOl0sICJmdWxsIjogIiJ9CgpT
SE9SVF9WRVJTSU9OX1BZID0gIiIiCiMgVGhpcyBmaWxlIHdhcyBnZW5lcmF0
ZWQgYnkgJ3ZlcnNpb25lZXIucHknICgwLjExKSBmcm9tCiMgcmV2aXNpb24t
Y29udHJvbCBzeXN0ZW0gZGF0YSwgb3IgZnJvbSB0aGUgcGFyZW50IGRpcmVj
dG9yeSBuYW1lIG9mIGFuCiMgdW5wYWNrZWQgc291cmNlIGFyY2hpdmUuIERp
c3RyaWJ1dGlvbiB0YXJiYWxscyBjb250YWluIGEgcHJlLWdlbmVyYXRlZCBj
b3B5CiMgb2YgdGhpcyBmaWxlLgoKdmVyc2lvbl92ZXJzaW9uID0gJyUodmVy
c2lvbilzJwp2ZXJzaW9uX2Z1bGwgPSAnJShmdWxsKXMnCmRlZiBnZXRfdmVy
c2lvbnMoZGVmYXVsdD17fSwgdmVyYm9zZT1GYWxzZSk6CiAgICByZXR1cm4g
eyd2ZXJzaW9uJzogdmVyc2lvbl92ZXJzaW9uLCAnZnVsbCc6IHZlcnNpb25f
ZnVsbH0KCiIiIgoKREVGQVVMVCA9IHsidmVyc2lvbiI6ICJ1bmtub3duIiwg
ImZ1bGwiOiAidW5rbm93biJ9CgpkZWYgdmVyc2lvbnNfZnJvbV9maWxlKGZp
bGVuYW1lKToKICAgIHZlcnNpb25zID0ge30KICAgIHRyeToKICAgICAgICB3
aXRoIG9wZW4oZmlsZW5hbWUpIGFzIGY6CiAgICAgICAgICAgIGZvciBsaW5l
IGluIGYucmVhZGxpbmVzKCk6CiAgICAgICAgICAgICAgICBtbyA9IHJlLm1h
dGNoKCJ2ZXJzaW9uX3ZlcnNpb24gPSAnKFteJ10rKSciLCBsaW5lKQogICAg
ICAgICAgICAgICAgaWYgbW86CiAgICAgICAgICAgICAgICAgICAgdmVyc2lv
bnNbInZlcnNpb24iXSA9IG1vLmdyb3VwKDEpCiAgICAgICAgICAgICAgICBt
byA9IHJlLm1hdGNoKCJ2ZXJzaW9uX2Z1bGwgPSAnKFteJ10rKSciLCBsaW5l
KQogICAgICAgICAgICAgICAgaWYgbW86CiAgICAgICAgICAgICAgICAgICAg
dmVyc2lvbnNbImZ1bGwiXSA9IG1vLmdyb3VwKDEpCiAgICBleGNlcHQgRW52
aXJvbm1lbnRFcnJvcjoKICAgICAgICByZXR1cm4ge30KCiAgICByZXR1cm4g
dmVyc2lvbnMKCmRlZiB3cml0ZV90b192ZXJzaW9uX2ZpbGUoZmlsZW5hbWUs
IHZlcnNpb25zKToKICAgIHdpdGggb3BlbihmaWxlbmFtZSwgInciKSBhcyBm
OgogICAgICAgIGYud3JpdGUoU0hPUlRfVkVSU0lPTl9QWSAlIHZlcnNpb25z
KQoKICAgIHByaW50KCJzZXQgJXMgdG8gJyVzJyIgJSAoZmlsZW5hbWUsIHZl
cnNpb25zWyJ2ZXJzaW9uIl0pKQoKCmRlZiBnZXRfcm9vdCgpOgogICAgdHJ5
OgogICAgICAgIHJldHVybiBvcy5wYXRoLmRpcm5hbWUob3MucGF0aC5hYnNw
YXRoKF9fZmlsZV9fKSkKICAgIGV4Y2VwdCBOYW1lRXJyb3I6CiAgICAgICAg
cmV0dXJuIG9zLnBhdGguZGlybmFtZShvcy5wYXRoLmFic3BhdGgoc3lzLmFy
Z3ZbMF0pKQoKZGVmIHZjc19mdW5jdGlvbih2Y3MsIHN1ZmZpeCk6CiAgICBy
ZXR1cm4gZ2V0YXR0cihzeXMubW9kdWxlc1tfX25hbWVfX10sICclc18lcycg
JSAodmNzLCBzdWZmaXgpLCBOb25lKQoKZGVmIGdldF92ZXJzaW9ucyhkZWZh
dWx0PURFRkFVTFQsIHZlcmJvc2U9RmFsc2UpOgogICAgIyByZXR1cm5zIGRp
Y3Qgd2l0aCB0d28ga2V5czogJ3ZlcnNpb24nIGFuZCAnZnVsbCcKICAgIGFz
c2VydCB2ZXJzaW9uZmlsZV9zb3VyY2UgaXMgbm90IE5vbmUsICJwbGVhc2Ug
c2V0IHZlcnNpb25lZXIudmVyc2lvbmZpbGVfc291cmNlIgogICAgYXNzZXJ0
IHRhZ19wcmVmaXggaXMgbm90IE5vbmUsICJwbGVhc2Ugc2V0IHZlcnNpb25l
ZXIudGFnX3ByZWZpeCIKICAgIGFzc2VydCBwYXJlbnRkaXJfcHJlZml4IGlz
IG5vdCBOb25lLCAicGxlYXNlIHNldCB2ZXJzaW9uZWVyLnBhcmVudGRpcl9w
cmVmaXgiCiAgICBhc3NlcnQgVkNTIGlzIG5vdCBOb25lLCAicGxlYXNlIHNl
dCB2ZXJzaW9uZWVyLlZDUyIKCiAgICAjIEkgYW0gaW4gdmVyc2lvbmVlci5w
eSwgd2hpY2ggbXVzdCBsaXZlIGF0IHRoZSB0b3Agb2YgdGhlIHNvdXJjZSB0
cmVlLAogICAgIyB3aGljaCB3ZSB1c2UgdG8gY29tcHV0ZSB0aGUgcm9vdCBk
aXJlY3RvcnkuIHB5MmV4ZS9iYmZyZWV6ZS9ub24tQ1B5dGhvbgogICAgIyBk
b24ndCBoYXZlIF9fZmlsZV9fLCBpbiB3aGljaCBjYXNlIHdlIGZhbGwgYmFj
ayB0byBzeXMuYXJndlswXSAod2hpY2gKICAgICMgb3VnaHQgdG8gYmUgdGhl
IHNldHVwLnB5IHNjcmlwdCkuIFdlIHByZWZlciBfX2ZpbGVfXyBzaW5jZSB0
aGF0J3MgbW9yZQogICAgIyByb2J1c3QgaW4gY2FzZXMgd2hlcmUgc2V0dXAu
cHkgd2FzIGludm9rZWQgaW4gc29tZSB3ZWlyZCB3YXkgKGUuZy4gcGlwKQog
ICAgcm9vdCA9IGdldF9yb290KCkKICAgIHZlcnNpb25maWxlX2FicyA9IG9z
LnBhdGguam9pbihyb290LCB2ZXJzaW9uZmlsZV9zb3VyY2UpCgogICAgIyBl
eHRyYWN0IHZlcnNpb24gZnJvbSBmaXJzdCBvZiBfdmVyc2lvbi5weSwgVkNT
IGNvbW1hbmQgKGUuZy4gJ2dpdAogICAgIyBkZXNjcmliZScpLCBwYXJlbnRk
aXIuIFRoaXMgaXMgbWVhbnQgdG8gd29yayBmb3IgZGV2ZWxvcGVycyB1c2lu
ZyBhCiAgICAjIHNvdXJjZSBjaGVja291dCwgZm9yIHVzZXJzIG9mIGEgdGFy
YmFsbCBjcmVhdGVkIGJ5ICdzZXR1cC5weSBzZGlzdCcsCiAgICAjIGFuZCBm
b3IgdXNlcnMgb2YgYSB0YXJiYWxsL3ppcGJhbGwgY3JlYXRlZCBieSAnZ2l0
IGFyY2hpdmUnIG9yIGdpdGh1YidzCiAgICAjIGRvd25sb2FkLWZyb20tdGFn
IGZlYXR1cmUgb3IgdGhlIGVxdWl2YWxlbnQgaW4gb3RoZXIgVkNTZXMuCgog
ICAgZ2V0X2tleXdvcmRzX2YgPSB2Y3NfZnVuY3Rpb24oVkNTLCAiZ2V0X2tl
eXdvcmRzIikKICAgIHZlcnNpb25zX2Zyb21fa2V5d29yZHNfZiA9IHZjc19m
dW5jdGlvbihWQ1MsICJ2ZXJzaW9uc19mcm9tX2tleXdvcmRzIikKICAgIGlm
IGdldF9rZXl3b3Jkc19mIGFuZCB2ZXJzaW9uc19mcm9tX2tleXdvcmRzX2Y6
CiAgICAgICAgdmNzX2tleXdvcmRzID0gZ2V0X2tleXdvcmRzX2YodmVyc2lv
bmZpbGVfYWJzKQogICAgICAgIHZlciA9IHZlcnNpb25zX2Zyb21fa2V5d29y
ZHNfZih2Y3Nfa2V5d29yZHMsIHRhZ19wcmVmaXgpCiAgICAgICAgaWYgdmVy
OgogICAgICAgICAgICBpZiB2ZXJib3NlOiBwcmludCgiZ290IHZlcnNpb24g
ZnJvbSBleHBhbmRlZCBrZXl3b3JkICVzIiAlIHZlcikKICAgICAgICAgICAg
cmV0dXJuIHZlcgoKICAgIHZlciA9IHZlcnNpb25zX2Zyb21fZmlsZSh2ZXJz
aW9uZmlsZV9hYnMpCiAgICBpZiB2ZXI6CiAgICAgICAgaWYgdmVyYm9zZTog
cHJpbnQoImdvdCB2ZXJzaW9uIGZyb20gZmlsZSAlcyAlcyIgJSAodmVyc2lv
bmZpbGVfYWJzLHZlcikpCiAgICAgICAgcmV0dXJuIHZlcgoKICAgIHZlcnNp
b25zX2Zyb21fdmNzX2YgPSB2Y3NfZnVuY3Rpb24oVkNTLCAidmVyc2lvbnNf
ZnJvbV92Y3MiKQogICAgaWYgdmVyc2lvbnNfZnJvbV92Y3NfZjoKICAgICAg
ICB2ZXIgPSB2ZXJzaW9uc19mcm9tX3Zjc19mKHRhZ19wcmVmaXgsIHJvb3Qs
IHZlcmJvc2UpCiAgICAgICAgaWYgdmVyOgogICAgICAgICAgICBpZiB2ZXJi
b3NlOiBwcmludCgiZ290IHZlcnNpb24gZnJvbSBWQ1MgJXMiICUgdmVyKQog
ICAgICAgICAgICByZXR1cm4gdmVyCgogICAgdmVyID0gdmVyc2lvbnNfZnJv
bV9wYXJlbnRkaXIocGFyZW50ZGlyX3ByZWZpeCwgcm9vdCwgdmVyYm9zZSkK
ICAgIGlmIHZlcjoKICAgICAgICBpZiB2ZXJib3NlOiBwcmludCgiZ290IHZl
cnNpb24gZnJvbSBwYXJlbnRkaXIgJXMiICUgdmVyKQogICAgICAgIHJldHVy
biB2ZXIKCiAgICBpZiB2ZXJib3NlOiBwcmludCgiZ290IHZlcnNpb24gZnJv
bSBkZWZhdWx0ICVzIiAlIGRlZmF1bHQpCiAgICByZXR1cm4gZGVmYXVsdAoK
ZGVmIGdldF92ZXJzaW9uKHZlcmJvc2U9RmFsc2UpOgogICAgcmV0dXJuIGdl
dF92ZXJzaW9ucyh2ZXJib3NlPXZlcmJvc2UpWyJ2ZXJzaW9uIl0KCmNsYXNz
IGNtZF92ZXJzaW9uKENvbW1hbmQpOgogICAgZGVzY3JpcHRpb24gPSAicmVw
b3J0IGdlbmVyYXRlZCB2ZXJzaW9uIHN0cmluZyIKICAgIHVzZXJfb3B0aW9u
cyA9IFtdCiAgICBib29sZWFuX29wdGlvbnMgPSBbXQogICAgZGVmIGluaXRp
YWxpemVfb3B0aW9ucyhzZWxmKToKICAgICAgICBwYXNzCiAgICBkZWYgZmlu
YWxpemVfb3B0aW9ucyhzZWxmKToKICAgICAgICBwYXNzCiAgICBkZWYgcnVu
KHNlbGYpOgogICAgICAgIHZlciA9IGdldF92ZXJzaW9uKHZlcmJvc2U9VHJ1
ZSkKICAgICAgICBwcmludCgiVmVyc2lvbiBpcyBjdXJyZW50bHk6ICVzIiAl
IHZlcikKCgpjbGFzcyBjbWRfYnVpbGQoX2J1aWxkKToKICAgIGRlZiBydW4o
c2VsZik6CiAgICAgICAgdmVyc2lvbnMgPSBnZXRfdmVyc2lvbnModmVyYm9z
ZT1UcnVlKQogICAgICAgIF9idWlsZC5ydW4oc2VsZikKICAgICAgICAjIG5v
dyBsb2NhdGUgX3ZlcnNpb24ucHkgaW4gdGhlIG5ldyBidWlsZC8gZGlyZWN0
b3J5IGFuZCByZXBsYWNlIGl0CiAgICAgICAgIyB3aXRoIGFuIHVwZGF0ZWQg
dmFsdWUKICAgICAgICB0YXJnZXRfdmVyc2lvbmZpbGUgPSBvcy5wYXRoLmpv
aW4oc2VsZi5idWlsZF9saWIsIHZlcnNpb25maWxlX2J1aWxkKQogICAgICAg
IHByaW50KCJVUERBVElORyAlcyIgJSB0YXJnZXRfdmVyc2lvbmZpbGUpCiAg
ICAgICAgb3MudW5saW5rKHRhcmdldF92ZXJzaW9uZmlsZSkKICAgICAgICB3
aXRoIG9wZW4odGFyZ2V0X3ZlcnNpb25maWxlLCAidyIpIGFzIGY6CiAgICAg
ICAgICAgIGYud3JpdGUoU0hPUlRfVkVSU0lPTl9QWSAlIHZlcnNpb25zKQoK
aWYgJ2N4X0ZyZWV6ZScgaW4gc3lzLm1vZHVsZXM6ICAjIGN4X2ZyZWV6ZSBl
bmFibGVkPwogICAgZnJvbSBjeF9GcmVlemUuZGlzdCBpbXBvcnQgYnVpbGRf
ZXhlIGFzIF9idWlsZF9leGUKCiAgICBjbGFzcyBjbWRfYnVpbGRfZXhlKF9i
dWlsZF9leGUpOgogICAgICAgIGRlZiBydW4oc2VsZik6CiAgICAgICAgICAg
IHZlcnNpb25zID0gZ2V0X3ZlcnNpb25zKHZlcmJvc2U9VHJ1ZSkKICAgICAg
ICAgICAgdGFyZ2V0X3ZlcnNpb25maWxlID0gdmVyc2lvbmZpbGVfc291cmNl
CiAgICAgICAgICAgIHByaW50KCJVUERBVElORyAlcyIgJSB0YXJnZXRfdmVy
c2lvbmZpbGUpCiAgICAgICAgICAgIG9zLnVubGluayh0YXJnZXRfdmVyc2lv
bmZpbGUpCiAgICAgICAgICAgIHdpdGggb3Blbih0YXJnZXRfdmVyc2lvbmZp
bGUsICJ3IikgYXMgZjoKICAgICAgICAgICAgICAgIGYud3JpdGUoU0hPUlRf
VkVSU0lPTl9QWSAlIHZlcnNpb25zKQoKICAgICAgICAgICAgX2J1aWxkX2V4
ZS5ydW4oc2VsZikKICAgICAgICAgICAgb3MudW5saW5rKHRhcmdldF92ZXJz
aW9uZmlsZSkKICAgICAgICAgICAgd2l0aCBvcGVuKHZlcnNpb25maWxlX3Nv
dXJjZSwgInciKSBhcyBmOgogICAgICAgICAgICAgICAgYXNzZXJ0IFZDUyBp
cyBub3QgTm9uZSwgInBsZWFzZSBzZXQgdmVyc2lvbmVlci5WQ1MiCiAgICAg
ICAgICAgICAgICBMT05HID0gTE9OR19WRVJTSU9OX1BZW1ZDU10KICAgICAg
ICAgICAgICAgIGYud3JpdGUoTE9ORyAlIHsiRE9MTEFSIjogIiQiLAogICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICJUQUdfUFJFRklYIjogdGFn
X3ByZWZpeCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiUEFS
RU5URElSX1BSRUZJWCI6IHBhcmVudGRpcl9wcmVmaXgsCiAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgIlZFUlNJT05GSUxFX1NPVVJDRSI6IHZl
cnNpb25maWxlX3NvdXJjZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICB9KQoKY2xhc3MgY21kX3NkaXN0KF9zZGlzdCk6CiAgICBkZWYgcnVu
KHNlbGYpOgogICAgICAgIHZlcnNpb25zID0gZ2V0X3ZlcnNpb25zKHZlcmJv
c2U9VHJ1ZSkKICAgICAgICBzZWxmLl92ZXJzaW9uZWVyX2dlbmVyYXRlZF92
ZXJzaW9ucyA9IHZlcnNpb25zCiAgICAgICAgIyB1bmxlc3Mgd2UgdXBkYXRl
IHRoaXMsIHRoZSBjb21tYW5kIHdpbGwga2VlcCB1c2luZyB0aGUgb2xkIHZl
cnNpb24KICAgICAgICBzZWxmLmRpc3RyaWJ1dGlvbi5tZXRhZGF0YS52ZXJz
aW9uID0gdmVyc2lvbnNbInZlcnNpb24iXQogICAgICAgIHJldHVybiBfc2Rp
c3QucnVuKHNlbGYpCgogICAgZGVmIG1ha2VfcmVsZWFzZV90cmVlKHNlbGYs
IGJhc2VfZGlyLCBmaWxlcyk6CiAgICAgICAgX3NkaXN0Lm1ha2VfcmVsZWFz
ZV90cmVlKHNlbGYsIGJhc2VfZGlyLCBmaWxlcykKICAgICAgICAjIG5vdyBs
b2NhdGUgX3ZlcnNpb24ucHkgaW4gdGhlIG5ldyBiYXNlX2RpciBkaXJlY3Rv
cnkgKHJlbWVtYmVyaW5nCiAgICAgICAgIyB0aGF0IGl0IG1heSBiZSBhIGhh
cmRsaW5rKSBhbmQgcmVwbGFjZSBpdCB3aXRoIGFuIHVwZGF0ZWQgdmFsdWUK
ICAgICAgICB0YXJnZXRfdmVyc2lvbmZpbGUgPSBvcy5wYXRoLmpvaW4oYmFz
ZV9kaXIsIHZlcnNpb25maWxlX3NvdXJjZSkKICAgICAgICBwcmludCgiVVBE
QVRJTkcgJXMiICUgdGFyZ2V0X3ZlcnNpb25maWxlKQogICAgICAgIG9zLnVu
bGluayh0YXJnZXRfdmVyc2lvbmZpbGUpCiAgICAgICAgd2l0aCBvcGVuKHRh
cmdldF92ZXJzaW9uZmlsZSwgInciKSBhcyBmOgogICAgICAgICAgICBmLndy
aXRlKFNIT1JUX1ZFUlNJT05fUFkgJSBzZWxmLl92ZXJzaW9uZWVyX2dlbmVy
YXRlZF92ZXJzaW9ucykKCklOSVRfUFlfU05JUFBFVCA9ICIiIgpmcm9tIC5f
dmVyc2lvbiBpbXBvcnQgZ2V0X3ZlcnNpb25zCl9fdmVyc2lvbl9fID0gZ2V0
X3ZlcnNpb25zKClbJ3ZlcnNpb24nXQpkZWwgZ2V0X3ZlcnNpb25zCiIiIgoK
Y2xhc3MgY21kX3VwZGF0ZV9maWxlcyhDb21tYW5kKToKICAgIGRlc2NyaXB0
aW9uID0gImluc3RhbGwvdXBncmFkZSBWZXJzaW9uZWVyIGZpbGVzOiBfX2lu
aXRfXy5weSBTUkMvX3ZlcnNpb24ucHkiCiAgICB1c2VyX29wdGlvbnMgPSBb
XQogICAgYm9vbGVhbl9vcHRpb25zID0gW10KICAgIGRlZiBpbml0aWFsaXpl
X29wdGlvbnMoc2VsZik6CiAgICAgICAgcGFzcwogICAgZGVmIGZpbmFsaXpl
X29wdGlvbnMoc2VsZik6CiAgICAgICAgcGFzcwogICAgZGVmIHJ1bihzZWxm
KToKICAgICAgICBwcmludCgiIGNyZWF0aW5nICVzIiAlIHZlcnNpb25maWxl
X3NvdXJjZSkKICAgICAgICB3aXRoIG9wZW4odmVyc2lvbmZpbGVfc291cmNl
LCAidyIpIGFzIGY6CiAgICAgICAgICAgIGFzc2VydCBWQ1MgaXMgbm90IE5v
bmUsICJwbGVhc2Ugc2V0IHZlcnNpb25lZXIuVkNTIgogICAgICAgICAgICBM
T05HID0gTE9OR19WRVJTSU9OX1BZW1ZDU10KICAgICAgICAgICAgZi53cml0
ZShMT05HICUgeyJET0xMQVIiOiAiJCIsCiAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAiVEFHX1BSRUZJWCI6IHRhZ19wcmVmaXgsCiAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAiUEFSRU5URElSX1BSRUZJWCI6IHBhcmVudGRp
cl9wcmVmaXgsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiVkVSU0lP
TkZJTEVfU09VUkNFIjogdmVyc2lvbmZpbGVfc291cmNlLAogICAgICAgICAg
ICAgICAgICAgICAgICAgICAgfSkKCiAgICAgICAgaXB5ID0gb3MucGF0aC5q
b2luKG9zLnBhdGguZGlybmFtZSh2ZXJzaW9uZmlsZV9zb3VyY2UpLCAiX19p
bml0X18ucHkiKQogICAgICAgIHRyeToKICAgICAgICAgICAgd2l0aCBvcGVu
KGlweSwgInIiKSBhcyBmOgogICAgICAgICAgICAgICAgb2xkID0gZi5yZWFk
KCkKICAgICAgICBleGNlcHQgRW52aXJvbm1lbnRFcnJvcjoKICAgICAgICAg
ICAgb2xkID0gIiIKICAgICAgICBpZiBJTklUX1BZX1NOSVBQRVQgbm90IGlu
IG9sZDoKICAgICAgICAgICAgcHJpbnQoIiBhcHBlbmRpbmcgdG8gJXMiICUg
aXB5KQogICAgICAgICAgICB3aXRoIG9wZW4oaXB5LCAiYSIpIGFzIGY6CiAg
ICAgICAgICAgICAgICBmLndyaXRlKElOSVRfUFlfU05JUFBFVCkKICAgICAg
ICBlbHNlOgogICAgICAgICAgICBwcmludCgiICVzIHVubW9kaWZpZWQiICUg
aXB5KQoKICAgICAgICAjIE1ha2Ugc3VyZSBib3RoIHRoZSB0b3AtbGV2ZWwg
InZlcnNpb25lZXIucHkiIGFuZCB2ZXJzaW9uZmlsZV9zb3VyY2UKICAgICAg
ICAjIChQS0cvX3ZlcnNpb24ucHksIHVzZWQgYnkgcnVudGltZSBjb2RlKSBh
cmUgaW4gTUFOSUZFU1QuaW4sIHNvCiAgICAgICAgIyB0aGV5J2xsIGJlIGNv
cGllZCBpbnRvIHNvdXJjZSBkaXN0cmlidXRpb25zLiBQaXAgd29uJ3QgYmUg
YWJsZSB0bwogICAgICAgICMgaW5zdGFsbCB0aGUgcGFja2FnZSB3aXRob3V0
IHRoaXMuCiAgICAgICAgbWFuaWZlc3RfaW4gPSBvcy5wYXRoLmpvaW4oZ2V0
X3Jvb3QoKSwgIk1BTklGRVNULmluIikKICAgICAgICBzaW1wbGVfaW5jbHVk
ZXMgPSBzZXQoKQogICAgICAgIHRyeToKICAgICAgICAgICAgd2l0aCBvcGVu
KG1hbmlmZXN0X2luLCAiciIpIGFzIGY6CiAgICAgICAgICAgICAgICBmb3Ig
bGluZSBpbiBmOgogICAgICAgICAgICAgICAgICAgIGlmIGxpbmUuc3RhcnRz
d2l0aCgiaW5jbHVkZSAiKToKICAgICAgICAgICAgICAgICAgICAgICAgZm9y
IGluY2x1ZGUgaW4gbGluZS5zcGxpdCgpWzE6XToKICAgICAgICAgICAgICAg
ICAgICAgICAgICAgIHNpbXBsZV9pbmNsdWRlcy5hZGQoaW5jbHVkZSkKICAg
ICAgICBleGNlcHQgRW52aXJvbm1lbnRFcnJvcjoKICAgICAgICAgICAgcGFz
cwogICAgICAgICMgVGhhdCBkb2Vzbid0IGNvdmVyIGV2ZXJ5dGhpbmcgTUFO
SUZFU1QuaW4gY2FuIGRvCiAgICAgICAgIyAoaHR0cDovL2RvY3MucHl0aG9u
Lm9yZy8yL2Rpc3R1dGlscy9zb3VyY2VkaXN0Lmh0bWwjY29tbWFuZHMpLCBz
bwogICAgICAgICMgaXQgbWlnaHQgZ2l2ZSBzb21lIGZhbHNlIG5lZ2F0aXZl
cy4gQXBwZW5kaW5nIHJlZHVuZGFudCAnaW5jbHVkZScKICAgICAgICAjIGxp
bmVzIGlzIHNhZmUsIHRob3VnaC4KICAgICAgICBpZiAidmVyc2lvbmVlci5w
eSIgbm90IGluIHNpbXBsZV9pbmNsdWRlczoKICAgICAgICAgICAgcHJpbnQo
IiBhcHBlbmRpbmcgJ3ZlcnNpb25lZXIucHknIHRvIE1BTklGRVNULmluIikK
ICAgICAgICAgICAgd2l0aCBvcGVuKG1hbmlmZXN0X2luLCAiYSIpIGFzIGY6
CiAgICAgICAgICAgICAgICBmLndyaXRlKCJpbmNsdWRlIHZlcnNpb25lZXIu
cHlcbiIpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcHJpbnQoIiAndmVy
c2lvbmVlci5weScgYWxyZWFkeSBpbiBNQU5JRkVTVC5pbiIpCiAgICAgICAg
aWYgdmVyc2lvbmZpbGVfc291cmNlIG5vdCBpbiBzaW1wbGVfaW5jbHVkZXM6
CiAgICAgICAgICAgIHByaW50KCIgYXBwZW5kaW5nIHZlcnNpb25maWxlX3Nv
dXJjZSAoJyVzJykgdG8gTUFOSUZFU1QuaW4iICUKICAgICAgICAgICAgICAg
ICAgdmVyc2lvbmZpbGVfc291cmNlKQogICAgICAgICAgICB3aXRoIG9wZW4o
bWFuaWZlc3RfaW4sICJhIikgYXMgZjoKICAgICAgICAgICAgICAgIGYud3Jp
dGUoImluY2x1ZGUgJXNcbiIgJSB2ZXJzaW9uZmlsZV9zb3VyY2UpCiAgICAg
ICAgZWxzZToKICAgICAgICAgICAgcHJpbnQoIiB2ZXJzaW9uZmlsZV9zb3Vy
Y2UgYWxyZWFkeSBpbiBNQU5JRkVTVC5pbiIpCgogICAgICAgICMgTWFrZSBW
Q1Mtc3BlY2lmaWMgY2hhbmdlcy4gRm9yIGdpdCwgdGhpcyBtZWFucyBjcmVh
dGluZy9jaGFuZ2luZwogICAgICAgICMgLmdpdGF0dHJpYnV0ZXMgdG8gbWFy
ayBfdmVyc2lvbi5weSBmb3IgZXhwb3J0LXRpbWUga2V5d29yZAogICAgICAg
ICMgc3Vic3RpdHV0aW9uLgogICAgICAgIGRvX3Zjc19pbnN0YWxsKG1hbmlm
ZXN0X2luLCB2ZXJzaW9uZmlsZV9zb3VyY2UsIGlweSkKCmRlZiBnZXRfY21k
Y2xhc3MoKToKICAgIGNtZHMgPSB7J3ZlcnNpb24nOiBjbWRfdmVyc2lvbiwK
ICAgICAgICAgICAgJ3ZlcnNpb25lZXInOiBjbWRfdXBkYXRlX2ZpbGVzLAog
ICAgICAgICAgICAnYnVpbGQnOiBjbWRfYnVpbGQsCiAgICAgICAgICAgICdz
ZGlzdCc6IGNtZF9zZGlzdCwKICAgICAgICAgICAgfQogICAgaWYgJ2N4X0Zy
ZWV6ZScgaW4gc3lzLm1vZHVsZXM6ICAjIGN4X2ZyZWV6ZSBlbmFibGVkPwog
ICAgICAgIGNtZHNbJ2J1aWxkX2V4ZSddID0gY21kX2J1aWxkX2V4ZQogICAg
ICAgIGRlbCBjbWRzWydidWlsZCddCgogICAgcmV0dXJuIGNtZHMK

"""

v = base64.b64decode(VERSIONEER_b64)
if os.path.exists("versioneer.py"):
    print("overwriting existing versioneer.py")
with open("versioneer.py", "wb") as f:
    f.write(v)
print("versioneer.py (0.11) installed into local tree")
print("Now please follow instructions in the docstring.")
