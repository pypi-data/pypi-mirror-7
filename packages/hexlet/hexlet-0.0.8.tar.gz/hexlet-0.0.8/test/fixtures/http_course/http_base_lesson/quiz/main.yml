can_cache_some:
  type: answers
  question:
    ru: Можно ли сделать так, чтобы на одном сайте кешировались только те запросы, которые возвращают картинки (но не другие файлы)?
  source:
    ru:
      - Да
      - Нет

where_can_cache:
  type: answers
  question:
    ru: Кеширование HTTP-запросов может происходить
  source:
    ru:
      - на конечном клиенте и на промежуточных серверах
      - только на конечном клиенте (браузере)
      - только на промежуточных серверах

where_is_image:
  type: answers
  question:
    ru: Произведен GET-запрос для получения изображения с веб-сервера. Где находится изображение в ответе?
  source:
    ru:
      - в теле сообщения
      - в заголовке
      - нигде, изображение не передается через ответ на GET-запрос

something_over_http:
  type: answers
  question:
    ru: Можно ли поверх HTTP создать новый протокол для обмена сообщениями в новой онлайн-игре, которая работает вне веб-браузера?
  source:
    ru:
      - Конечно да
      - Теоретически да, но на практике это невозможно
      - Нет, это невозможно

guranteed_order_and_correctness:
  type: answers
  question:
    ru: Этот протокол гарантирует доставку сообщений и их правильный порядок
  source:
    ru:
      - HTTP
      - UDP
      - IP

nginx_apache_iis:
  type: answers
  question:
    ru: Nginx, Apache, IIS являются
  source:
    ru:
      - веб-серверами
      - веб-браузерами
      - telnet-клиентами

wrong_http_method:
  type: answers
  question:
    ru: Это не является одним из методов протокола HTTP
  source:
    ru:
      - STOP
      - PUT
      - POST
      - DELETE
      - PATCH

http_server_port_ftp:
  type: answers
  question:
    ru: Может ли веб-сервер находится на порту 21, который чаще всего используется для протокола FTP?
  source:
    ru:
      - да
      - нет

required_part:
  type: answers
  question:
    ru: HTTP-запрос невозможен без
  source:
    ru:
      - стартовой строки
      - заголовка
      - тела

protocol_version_in_request:
  type: answers
  question:
    ru: В какой части HTTP-запроса указывается версия протокола?
  source:
    ru:
      - стартовая строка
      - заголовок
      - тело

protocols_defined_in:
  type: answers
  question:
    ru: Протоколы HTTP и TCP/IP формально описаны в
  source:
    ru:
      - RFC
      - OSI
      - ISO

code_404:
  type: answers
  question:
    ru: Код 404 это
  source:
    ru:
      - Код статуса
      - Код запроса
      - Тело запроса

ethernet_level:
  type: answers
  question:
    ru: На каком уровне стека TCP/IP находится Ethernet?
  source:
    ru:
      - Канальный (физический)
      - Сетевой
      - Транспортный
      - Прикладной

what_is_over_http:
  type: answers
  question:
    ru: Что из нижеперечисленного находится на уровене абстракции выше HTTP?
  source:
    ru:
      - SOAP
      - TCP
      - IP
      - UDP

can_send_form_by_get:
  type: answers
  question:
    ru: Возможно ли отправлять текст из формы на сервер с помощью GET-запроса?
  source:
    ru:
      - Да, возможно
      - Возможно, но только двумя последовательными GET-запросами
      - Нет, невозможно

method_for_header_only:
  type: answers
  question:
    ru: Какой метод запроса (request method) возвращает только заголовок, и это заголовок идентичен тому заголовку, который возвращается вместе с телом при использовании GET-запроса?
  source:
    ru:
      - HEAD
      - PATCH
      - TRACE

what_cookies_solve:
  type: answers
  question:
    ru: Какую проблему могут решить cookies?
  source:
    ru:
      - Протокол HTTP не сохраняет своего состояния
      - Существуют значительные ограничения при передачи данных с помощью GET-запроса
      - Передача данных по открытому каналу – опасна

can_something_over_http:
  type: answers
  question:
    ru: Может ли протокол HTTP использоваться для передачи данных других, более высокоуровневых прикладных протоколов?
  source:
    ru:
      - Да
      - Да, но только HTTP версии 1.0
      - Нет, не может

http_data_formats:
  type: answers
  question:
    ru: Данные в каких форматах можно передавать с помощью HTTP?
  source:
    ru:
      - В любых
      - HTML
      - JSON
      - Бинарные (двоичные) данные

when_can_use_http:
  type: answers
  question:
    ru: В каких из описанных ниже ситуаций возможно применение протокола HTTP?
  source:
    ru:
      - Все перечисленное
      - Коммуникация между двумя программами на одном компьютере
      - Коммуникация между двумя телефонами в одной локальной сети по Wi-Fi
      - Коммуникация между браузером и удаленным сервером

http_server_default_port:
  type: answers
  question:
    ru: Какой порт используется для HTTP-сервера по-умолчанию?
  source:
    ru:
      - 80
      - 21
      - 25
      - 587

wrong_status_possible:
  type: answers
  question:
    ru: Возможно ли такое, что при обращении к несуществующей странице сервер отвечает не кодом 404, а кодом 200 ОК?
  source:
    ru:
      - Да, такое возможно, все зависит от настроек сервера и особенностей запущенного на нем приложения
      - Нет, такое невозможно

what_is_http_really:
  type: answers
  question:
    ru: Чем по сути является HTTP?
  source:
    ru:
      - Искусственным общим языком для передачи данных
      - Языком программирования для создания веб-приложений
      - Естественным, необратимым следствием развития сетевых карт и интерфейсов

cache_priority:
  type: answers
  question:
    ru: Если указаны и max-age и Expires, то какое значение будет использоваться?
  source:
    ru:
      - ^max-age
      - Expires
      - будет конфликт и ни одно из значений не будет использовано
      - будет использовано большее из двух

cache_control:
  type: filling
  question:
    ru: Кеширование
  source:
    ru: "Чтобы страница была закеширована на 42 минуты, нужно указать Cache-Control: max-age=^(2520)."

persistency:
  type: filling
  question:
    ru: Постоянное соединение
  source:
    ru: "В HTTP 1.1 все соединения являются постоянными по-умолчанию, если не задано обратного. В HTTP 1.0 для включения постоянного соединения необходимо было указать заголовок Connection: ^(Keep-Alive)."

content_length_head:
  type: answers
  question:
    ru: Какое значение имеет поле content length при использовании метода HEAD?
  source:
    ru:
      - соответствующее размеру тела сообщения, которое было бы возвращено при использовании метода GET
      - 0
      - null
      - пустая строка

301_vs_302:
  type: filling
  question:
    ru: 301 vs. 302
  source:
    ru: "Код ответа ^(301) означает, что страница была окончательно перенесена на новый адрес, а код ответа ^(302) означает что страница была временно перенесена на новый адрес."


why_stateless:
  type: answers
  question:
    ru: Почему HTTP называют stateless (протоколом, не сохраняющим своего состояния)?
  source:
    ru:
      - Потому что он обрабатывает каждый запрос независимо
      - Потому что его поведение меняется от запроса к запросу
      - Потому что его поведение меняется от реализации к реализации
      - Потому что он обрабатывает каждого клиента независимо

specificity_of_http_1_1:
  type: answers
  question:
    ru: Это является особенностью HTTP версии 1.1
  source:
    ru:
      - Возможность повторно использовать TCP-соединение вместо создания нового соединения при каждом запросе
      - Возможность использования компрессии (например, gzip)
      - Коды состояния (вроде, 200 или 404)