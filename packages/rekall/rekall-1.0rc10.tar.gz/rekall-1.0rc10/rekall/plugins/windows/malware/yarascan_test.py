# Rekall Memory Forensics
#
# Copyright 2013 Google Inc. All Rights Reserved.
#
# Authors:
# Michael Cohen <scudette@gmail.com>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or (at
# your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#

"""Tests for the yarascan plugins."""

from rekall import testlib


class TestYara(testlib.RekallBaseUnitTestCase):
    """Test the yarascan module."""

    PARAMETERS = dict(commandline="yarascan --string sys")

    def testYara(self):
        previous = self.baseline['output']
        current = self.current['output']

        self.assertTrue(
            self.ExtractColumn(current, 0, 2, seperator=" "),
            self.ExtractColumn(previous, 0, 2, seperator=" "))


    def XXtestYarra2(self):
        metadata = self.LoadPreviousRunData("yarascan")
        session = self.BuildUserSession("yarascan")

        str(session.plugins.pslist())

        # Instantiate the yara plugin.
        rules = metadata['yarascan_test']
        for task, rule in rules.items():
            if task:
                task_as = task.get_process_address_space()
            else:
                task_as = session.kernel_address_space

            yarascan = session.plugins.yarascan(yara_expression=rule,
                                                address_space=task_as)

            for rule, offset, _, match in yarascan.generate_hits(task_as):
                data = task_as.read(offset, len(match))
                self.assertEqual(match, data)
