Metadata-Version: 1.0
Name: describe_it
Version: 0.1.5
Summary: A nose plugin that supports writing describe/it styleunit tests with nested contexts
Home-page: https://github.com/joakimkarlsson/describe_it
Author: Joakim Karlsson
Author-email: joakim@jkarlsson.com
License: The MIT License (MIT)

Copyright (c) 2014 Joakim Karlsson

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

Description: describe it
        ===========
        
        A nose plugin for describe/it syntax
        
        Installing it
        
        .. code:: bash
        
            $ pip install describe-it
        
        Writing a test
        --------------
        
        Any module that ends with 'spec' is considered to contain specifications/tests
        for describe_it.
        
        .. code:: bash
        
            $ vim myfirst_spec.py
        
        ...and the content:
        
        .. code:: python
        
            from game import Game
            from describe_it import describe, it, before_each, Fixture
        
            @describe
            def a_game():
                f = Fixture()
        
                @before_each
                def setup():
                    f.game = Game()
        
                @it
                def is_player_ones_turn():
                    assert f.game.current_player == 1
        
                @describe
                def in_second_round():
        
                    @before_each
                    def setup():
                        f.game.play_round()
        
                    @it
                    def is_player_twos_turn():
                        assert f.game.current_player == 2
        
        Running tests
        
        .. code:: bash
        
            $ nosetests --with-describe-it
        
Keywords: unit testing,tdd,bdd,nose
Platform: UNKNOWN
