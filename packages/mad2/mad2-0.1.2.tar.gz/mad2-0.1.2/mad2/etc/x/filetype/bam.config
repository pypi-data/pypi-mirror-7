decompress:
  description: 'convert Bam to Sam'
  run_when: '"{{fullpath}}" -nt "{{output}}"'
  defaults:
    output: "{{ basename|re_sub('.bam$', '.sam') }}"
  annotate:
    createdWith: "Samtools $(samtools 2>&1 | grep Version)"
  command: |
    samtools view -h {{ fullpath }} > {{ output }}
stats:
  description: 'run flagstats'
  defaults:
    output: "{{ basename|re_sub('.sam$', '.flagstat') }}"
    annotate:
      createdWith: "Samtools $(samtools 2>&1 | grep Version)"
  command: |
    samtools flagstat {{ fullpath }} > {{ output }}
coveragebg:
  description: create a coverage bedgraph
  defaults:
    createdWith: '$(bedtools --version)'
    output: '{{ basename|re_sub(".bam$", "") }}.bedgraph'
  output_files:
    - '{{ output }}'
  command: |
    bedtools genomecov \
        -ibam {{ fullpath }} \
        -bga -split \
        | bgzip -c \
        > {{ output }} ;
        tabix -p bed {{ output }}
sort_dedup:
  description: Sort and deduplicate the bam file
  run_when: '"{{fullpath}}" -nt "{{ output }}"'
  output_files:
    - '{{ output }}'
    - '{{ output_sort }}'
    - '{{ output_stats }}'
  path:
    - /ddn1/vol1/leuven_groups/lts_00002/software/samtools/current
  defaults:
    pbs_mem: 9Gb
    pbs_queue: qreg
    pbs_walltime: '29:59:59'
    pbs_group: lp_symbiosys
    job_name: '{{ sample_name }}'
    output_sort: '{{ sample_name }}.sort.bam'
    output_stats: '{{ sample_name }}.stats'
    output: '{{ sample_name }}.sort.dedup.bam'
    picard_dir: /ddn1/vol1/leuven_groups/lts_00002/software/picard/current
  command: |
    if [ ! -f  "{{ output_sort }}" ];
    then
      samtools sort -m 3G {{ fullpath }} {{ sample_name }}.sort;
    fi
    java -Xmx8g -Djava.io.tmpdir="$VSC_SCRATCH/tmp"  \
        -jar "{{picard_dir}}/MarkDuplicates.jar" \
        I="{{ output_sort }}" \
        O="{{ output }}" \
        M="{{ output_stats }}" \
        CREATE_INDEX=true \
        MAX_RECORDS_IN_RAM=5000000 \
        VALIDATION_STRINGENCY=SILENT \
        QUIET=true \
        REMOVE_DUPLICATES=true

