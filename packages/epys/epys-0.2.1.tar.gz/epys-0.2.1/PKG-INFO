Metadata-Version: 1.1
Name: epys
Version: 0.2.1
Summary: A python library for handling EPS output.
Home-page: https://github.com/johnnycakes79/epys
Author: Jonathan McAuliffe
Author-email: watch.n.learn@gmail.com
License: BSD
Description: e[py]s
        ======
        
        .. image:: https://travis-ci.org/johnnycakes79/epys.png?branch=master
                :target: https://travis-ci.org/johnnycakes79/epys
        .. image:: https://coveralls.io/repos/johnnycakes79/epys/badge.png?branch=master 
        		:target: https://coveralls.io/r/johnnycakes79/epys?branch=master
        
        
        ePYs is a python library for the manipulation, processing and plotting
        of the input and output files of ESA Experiment Planning Software (EPS).
        
        .. WARNING::
           This is a very beta-project. It's not on PyPI and can't be installed via PIP.
        
        * Free software: BSD license
        * Documentation: http://epys.rtfd.org.
        
        Features
        --------
        
        * Read an EPS data-rate output file into a numpy array with instrument header information.
        
        Installation
        ------------
        
        At the command line::
        
        1. Clone the repo to your local machine::
        
            $ git clone git@github.com:johnnycakes79/epys.git
        
        3. Install your local copy::
        
            $ cd epys/
            $ python setup.py install
        
        4. Import and use module::
        
            $ python
            >>> from epys import epys
        
        
        
        
        History
        -------
        
        0.2.1 (2014-05-21)
        ++++++++++++++++++
        
        * Coverage added and install of sample data tested.
        
        0.2.0 (2013-12-18)
        ++++++++++++++++++
        
        * No major updates to the code but unittests added and the project setup evolved.
        
        
        0.1.0 (2013-12-16)
        ++++++++++++++++++
        
        * First push to Github repo - still buggy.
        
        
        Credits
        =======
        
        Development Lead
        ----------------
        
        * Jonathan McAuliffe <watch.n.learn@gmail.com>
        
        Contributors
        ------------
        
        None yet. Why not be the first?
        
        Contributing
        ============
        
        Contributions are welcome, and they are greatly appreciated! Every
        little bit helps, and credit will always be given.
        
        You can contribute in many ways:
        
        Types of Contributions
        ----------------------
        
        Report Bugs
        ~~~~~~~~~~~
        
        Report bugs at https://github.com/johnnycakes79/epys/issues.
        
        If you are reporting a bug, please include:
        
        * Your operating system name and version.
        * Any details about your local setup that might be helpful in troubleshooting.
        * Detailed steps to reproduce the bug.
        
        Fix Bugs
        ~~~~~~~~
        
        Look through the GitHub issues for bugs. Anything tagged with "bug"
        is open to whoever wants to implement it.
        
        Implement Features
        ~~~~~~~~~~~~~~~~~~
        
        Look through the GitHub issues for features. Anything tagged with "feature"
        is open to whoever wants to implement it.
        
        Write Documentation
        ~~~~~~~~~~~~~~~~~~~
        
        epys could always use more documentation, whether as part of the
        official epys docs, in docstrings, or even on the web in blog posts,
        articles, and such.
        
        Submit Feedback
        ~~~~~~~~~~~~~~~
        
        The best way to send feedback is to file an issue at https://github.com/johnnycakes79/epys/issues.
        
        If you are proposing a feature:
        
        * Explain in detail how it would work.
        * Keep the scope as narrow as possible, to make it easier to implement.
        * Remember that this is a volunteer-driven project, and that contributions
          are welcome :)
        
        Get Started!
        ------------
        
        Ready to contribute? Here's how to set up `epys` for local development.
        
        1. Fork the `epys` repo on GitHub.
        2. Clone your fork locally::
        
            $ git clone git@github.com:your_name_here/epys.git
        
        3. Install your local copy into a virtualenv. Assuming you have virtualenvwrapper installed, this is how you set up your fork for local development::
        
            $ mkvirtualenv epys
            $ cd epys/
            $ python setup.py develop
        
        4. Create a branch for local development::
        
            $ git checkout -b name-of-your-bugfix-or-feature
        
           Now you can make your changes locally.
        
        5. When you're done making changes, check that your changes pass flake8 and the tests, including testing other Python versions with tox::
        
            $ flake8 epys tests
            $ python setup.py test
            $ tox
        
           To get flake8 and tox, just pip install them into your virtualenv.
        
        6. Commit your changes and push your branch to GitHub::
        
            $ git add .
            $ git commit -m "Your detailed description of your changes."
            $ git push origin name-of-your-bugfix-or-feature
        
        7. Submit a pull request through the GitHub website.
        
        Pull Request Guidelines
        -----------------------
        
        Before you submit a pull request, check that it meets these guidelines:
        
        1. The pull request should include tests.
        2. If the pull request adds functionality, the docs should be updated. Put
           your new functionality into a function with a docstring, and add the
           feature to the list in README.rst.
        3. The pull request should work for Python 2.6, 2.7, and 3.3, and for PyPy. Check
           https://travis-ci.org/johnnycakes79/epys/pull_requests
           and make sure that the tests pass for all supported Python versions.
        
        Tips
        ----
        
        To run a subset of tests::
        
        	$ python -m unittest tests.test_epys
Keywords: epys
Platform: UNKNOWN
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
