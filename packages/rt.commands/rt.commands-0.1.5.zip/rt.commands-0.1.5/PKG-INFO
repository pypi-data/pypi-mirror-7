Metadata-Version: 1.0
Name: rt.commands
Version: 0.1.5
Summary: Fabric scripts for RT
Home-page: http://www.redturtle.it
Author: RedTurtle developers
Author-email: sviluppo@redturtle.it
License: GPL
Description: rt.commands
        ===========
        
        deployment commands for RT (mainly fabric scripts)
        
        Your fabfile
        ------------
        
        To use rt.commands import it in your fabfile and
        set some environment variables.
        
        For example, you can start from this template::
        
            # this is necessary to make the fabric commands available
            from fabric.api import env
            from rt.commands import *
            from rt.commands.project import *
            from rt.commands.buildout_components import *
        
            # This is the main python version
            env.python_version = '2.7'
        
            # This is the buildout script to use
            env.buildout_cfg = 'buildout.cfg'
        
            # And some hosts
            env.staging_user = 'plone'
            env.staging_host = 'staging.example.com'
            env.staging_dir = '/opt/www.demo.example.com'
            env.production_user = 'plone'
            env.production_host = 'example.com'
            env.production_dir = '/opt/www.example.com'
        
        
        rt.commands
        -----------
        
        production:
            Pushes into the env.hosts the production server
        
        staging:
            Pushes into the env.hosts the production server
        
        rt.commands.buildout_components
        -------------------------------
        
        sync_var:
            Requires *staging* or *production* before.
            Sync component's buildout var folder
            It accepts the component parameter (default=plone)
            You can pass .. to get the var at the buildout root
        
        rt.commands.components.plone
        ----------------------------
        
        Special functions to sync plone.
        Given this fabfile::
        
            # -*- coding: utf-8 -*-
            from fabric.api import env
            from rt.commands import production, staging
            from rt.commands.components.plone import sync_blobstorage, sync_filestorage
        
            env.staging_user = 'redturtle'
            env.staging_host = 'somehost.redturtle.it'
            env.staging_dir = '/opt/somedir'
        
        You can invoke::
        
            fab staging sync_blobstorage
            fab staging sync_filestorage
        
        In order to have those folders synced
        
        Changelog
        =========
        
        0.1.5 (2014-07-17)
        ------------------
        
        - added sync_filestorage and sync_blobstorage functions for plone component
        - started writing some documentation
        - sync_var now handles '..'
        - added _isuptodate function
          [ale-rt]
        
        
        0.1.4 (2013-10-10)
        ------------------
        
        - Nothing changed yet.
        
        
        0.1.3 (2013-09-18)
        ------------------
        
        * Initial work
        
        
Platform: UNKNOWN
