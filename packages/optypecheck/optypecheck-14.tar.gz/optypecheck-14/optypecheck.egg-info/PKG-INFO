Metadata-Version: 1.1
Name: optypecheck
Version: 14
Summary: A non intrusive and optional *type checking for Python 3* using annotations
Home-page: https://bitbucket.org/carlopires/optypecheck
Author: Carlo Pires
Author-email: carlopires@gmail.com
License: UNKNOWN
Description: 
        optypecheck
        ===========
        
        This package implements a non intrusive and optional type checking in
        functions and methods by using annotations. Once types are defined in 
        annotations, no changes are required to make the verification of types. 
        And, because it is completely optional, it can be used only in the 
        desired environmens, like unit testings. This way, the performance of
        production code is not affected. 
        
        Learn more in:
        
            https://bitbucket.org/carlopires/optypecheck
        
        
        Installation
        ------------
        
        .. code:: bash
        
            pip3 install optypecheck
        
        Example
        -------
        
        .. code:: python
        
            def gencode(a: bytes, b: str) -> str:
                return '{}{}'.format(a[0], b)
            
            def valid_number(n) -> 'decimal.Decimal':
                return n
        
            # enable type checking in DEBUG mode
            assert __import__('typecheck').typecheck(__name__) 
        
        
Platform: any
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Topic :: Software Development :: Testing
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Utilities
