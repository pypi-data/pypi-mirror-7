[buildout]
extends =
   https://raw.githubusercontent.com/collective/buildout.plonetest/master/test-4.x.cfg
package-name = experimental.securityindexing
package-extras = [benchmark,test]
versions = versions
parts += 
    benchmark-at
    benchmark-dx
    omelette
    scripts
    test
    testall
    zopepy
    zopeskel
eggs = 
    experimental.securityindexing
    Products.PDBDebugMode
    plone.app.debugtoolbar
test-eggs = 
    Products.PloneTestCase
    plone.app.testing
    plone.app.workflow
    plone.reload
extensions =
    mr.developer
develop = .

[versions]
experimental.securityindexing = 0.3
plone.app.testing = 4.2.4
zope.annotation = 3.5.0
zope.component = 3.9.5
zope.interface = 3.6.7
Products.Archetypes = 1.9.7
Products.CMFCore = 2.2.7

# version pins required for p.a.contenttypes on plone 4.3
# @see https://pypi.python.org/pypi/plone.app.contenttypes/1.1b1#dependencies
plone.app.contenttypes = 1.1b1
plone.app.dexterity = 2.0.11
plone.app.event = 1.1b1
plone.app.portlets = 2.5a1
plone.dexterity = 2.2.1
plone.schemaeditor = 1.3.5

# migration for ddct
Products.contentmigration = 2.1.3

[benchmarks]
package_extras = [benchmarks,test]

# Do not run more than one bench mark in a single process
# since monkeypatches need to be isolated
[benchmark-environment]
BENCHMARK_RESULTS_FILE = ${buildout:directory}/benchmark-results.json

[benchmark-at]
<= test
   benchmarks
environment = benchmark-environment
defaults = ['-s', 'benchmarks',
            '--path', '${buildout:directory}',
            '--auto-color',
            '--tests-pattern=cases',
            '--layer=VanillaAT',
            '--layer=InstalledAT']

[benchmark-dx]
<= test
   benchmarks
environment = benchmark-environment
defaults = ['-s', 'benchmarks',
            '--path', '${buildout:directory}',
            '--auto-color',
            '--tests-pattern=cases',
            '--layer=VanillaDX',
            '--layer=InstalledDX']

[instance]
eggs +=
    Products.contentmigration
    plone.app.contenttypes
    plone.app.dexterity [grok,relations]
    plone.app.event
    ${buildout:test-eggs}

[omelette]
recipe = collective.recipe.omelette
eggs =
    ${instance:eggs}
    ${buildout:test-eggs}

[scripts]
recipe = zc.recipe.egg
eggs = 
    createcoverage
    flake8
    jarn.mkrelease
    mr.developer
    zest.releaser

[test]
defaults = ['-s', '${buildout:package-name}', '--auto-color']

[testall]
<= test
defaults = ['-s', 'plone.app.workflow',
            '-s', '${buildout:package-name}', 
            '--auto-color']

[zopeskel]
recipe = zc.recipe.egg
eggs =
    ZopeSkel < 3.0dev
    Paste
    PasteDeploy
    PasteScript
    zopeskel.dexterity
    ${buildout:eggs}
entry-points = paster=paste.script.command:run

[zopepy]
recipe = zc.recipe.egg
eggs = ${buildout:eggs}
interpreter = zopepy
