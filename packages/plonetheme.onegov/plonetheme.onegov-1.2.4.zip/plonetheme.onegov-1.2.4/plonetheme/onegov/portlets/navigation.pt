<dl class="portlet portletContextNavigation"
    i18n:domain="plonetheme.onegov"
    tal:define="parent nocall:view/parent;
                children view/children;
                siblings view/siblings">

  <dt class="portletHeader hiddenStructure">
    <span class="portletTopLeft"></span>
    <span>Navigation</span>
    <span class="portletTopRight"></span>
  </dt>

  <dd class="portletItem">
    <ul>
      <tal:parent condition="view/show_parent">
        <li class="parent">
          <a tal:attributes="href parent/absolute_url;
                             title parent/Title"
             tal:content="parent/Title"
             />
        </li>
      </tal:parent>

      <tal:top_siblings tal:repeat="sibling siblings/before_context|nothing">
          <li tal:define="classes python:view.cssclasses(sibling)"
              tal:attributes="class string:sibling beforeContext ${classes}">
              <a tal:attributes="href python:view.url(sibling);
                                 title sibling/Title"
                 tal:content="sibling/Title"/>
          </li>
      </tal:top_siblings>

      <li tal:content="context/Title"
          tal:define="is_expired context/expires/isPast|nothing;
                      classes python: is_expired and 'content-expired' or '';
                      workflow_state context/plone_context_state/workflow_state;
                      classes string:state-${workflow_state} ${classes};
                      classes python:view.cssclasses(context)"
          tal:attributes="class string:current ${classes}" />

      <tal:children repeat="child children">
        <li tal:define="classes python:view.cssclasses(child)"
            tal:attributes="class string:child ${classes}">
          <a tal:attributes="href python:view.url(child);
                             title child/Title"
             tal:content="child/Title"
             />
        </li>
      </tal:children>

      <tal:bottom_siblings tal:repeat="sibling siblings/after_context|nothing">
          <li tal:define="classes python:view.cssclasses(sibling)"
              tal:attributes="class string:sibling afterContext ${classes}">
              <a tal:attributes="href python:view.url(sibling);
                                 title sibling/Title"
                 tal:content="sibling/Title"/>
          </li>
      </tal:bottom_siblings>

    </ul>
  </dd>

</dl>
