/* CIF PROCESS (150, 150), (150, 75) */
PROCESS og;
    /* CIF TEXT (0, 0), (298, 286) */
    -- A Demo to test octet strings
-- using various symbols.

-- check that types are case insensitive
DCL first_msg, msg my_octStr;

DCL seq SeqOf;

DCL test Some_Thing;
dcl foo MyInteger := 3;

-- Unicode comments: héhé hôhÖ

dcl alwaysTrue Type2 := 3 in {1,2,3};
dcl alwaysFalse Type2 := 0 in {1,2,3};
    /* CIF ENDTEXT */
    /* CIF START (427, 26), (100, 50) */
    START;
        /* CIF TASK (395, 91), (164, 53) */
        TASK test := 5,
test := abs(-4+1),
test := abs(test)
        /* CIF COMMENT (579, 100), (183, 35) */
        COMMENT 'Task with unicode: voilà!';
        /* CIF TASK (375, 159), (204, 50) */
        TASK first_msg := 'Say hello first!'
        /* CIF COMMENT (599, 159), (148, 50) */
        COMMENT 'String assignment';
        /* CIF PROCEDURECALL (402, 224), (149, 35) */
        CALL writeln(first_msg);
        /* CIF TASK (394, 274), (165, 50) */
        TASK seq := default_seqof,
seq := {1,2,3}
        /* CIF COMMENT (579, 274), (204, 50) */
        COMMENT 'default_seqof is a constant
defined in the ASN.1 model';
        /* CIF TASK (345, 339), (263, 50) */
        TASK seq := seq // {4, test} // default_seqof
        /* CIF COMMENT (629, 339), (156, 50) */
        COMMENT 'Concatenate
two SEQUENCE OF';
        /* CIF TASK (408, 404), (137, 50) */
        TASK 'seq(1) := seq(2)';
        /* CIF TASK (380, 469), (193, 50) */
        TASK seq := seq(1,2) // seq(4,5)
        /* CIF COMMENT (593, 469), (166, 50) */
        COMMENT 'Remove 3rd element';
        /* CIF DECISION (425, 534), (104, 70) */
        DECISION test in seq
        /* CIF COMMENT (549, 549), (170, 39) */
        COMMENT 'Test the "in" operator
Unicode test: Ï';
                /* CIF ANSWER (335, 624), (100, 35) */
                (TRUE):
                    /* CIF PROCEDURECALL (308, 674), (154, 50) */
                    CALL writeln('All OK (1)');
                /* CIF ANSWER (498, 624), (100, 35) */
                (FALSE):
                    /* CIF PROCEDURECALL (466, 674), (164, 50) */
                    CALL writeln('NOT OK (1)')
                    /* CIF COMMENT (650, 681), (117, 35) */
                    COMMENT 'Call UnicÔDË';
        ENDDECISION;
        /* CIF DECISION (427, 739), (100, 70) */
        DECISION 3 in seq;
                /* CIF ANSWER (341, 829), (100, 35) */
                (TRUE):
                    /* CIF PROCEDURECALL (309, 879), (164, 50) */
                    CALL writeln('NOT OK (2)');
                /* CIF ANSWER (513, 829), (100, 35) */
                (FALSE):
                    /* CIF PROCEDURECALL (482, 879), (161, 50) */
                    CALL writeln('All OK (2)');
        ENDDECISION;
        /* CIF NEXTSTATE (427, 944), (100, 50) */
        NEXTSTATE Wait;
    /* CIF STATE (1204, 151), (100, 50) */
    STATE Running;
        /* CIF INPUT (1204, 221), (100, 50) */
        INPUT go(msg);
            /* CIF DECISION (1202, 286), (103, 70) */
            DECISION msg
            /* CIF COMMENT (1326, 296), (111, 50) */
            COMMENT 'Switch-case
on strings';
                    /* CIF ANSWER (1454, 376), (100, 35) */
                    ('egg'):
                        /* CIF TASK (1433, 426), (141, 50) */
                        TASK msg := msg // '!!'
                        /* CIF COMMENT (1595, 426), (118, 50) */
                        COMMENT 'Concatenate
strings';
                        /* CIF OUTPUT (1429, 491), (150, 50) */
                        OUTPUT rezult(default_str)
                        /* CIF COMMENT (1594, 489), (161, 53) */
                        COMMENT 'Send a constant
defined in the ASN.1
model';
                        /* CIF NEXTSTATE (1454, 556), (100, 50) */
                        NEXTSTATE Running
                        /* CIF COMMENT (1574, 563), (96, 35) */
                        COMMENT 'Néxtaytè';
                    /* CIF ANSWER (878, 376), (100, 35) */
                    ('end'):
                        /* CIF OUTPUT (872, 426), (112, 50) */
                        OUTPUT rezult
('Goodbye!');
                        /* CIF NEXTSTATE (878, 493), (100, 50) */
                        NEXTSTATE Wait;
                    /* CIF ANSWER (1042, 376), (100, 35) */
                    ELSE:
                        /* CIF TASK (1021, 426), (141, 50) */
                        TASK msg := msg // '!'
                        /* CIF COMMENT (1183, 426), (118, 50) */
                        COMMENT 'Concatenate
strings';
                        /* CIF TASK (994, 491), (195, 50) */
                        TASK msg := msg(3,4) // msg(1,2)
                        /* CIF COMMENT (1210, 491), (209, 53) */
                        COMMENT 'Concatenate two substrings
(can be used to remove an
element from a list)';
                        /* CIF TASK (1010, 556), (163, 50) */
                        TASK msg := first_msg(1, 2)
                        /* CIF COMMENT (1186, 553), (177, 53) */
                        COMMENT 'Substring
TODO check range
against current Length';
                        /* CIF OUTPUT (1038, 621), (108, 50) */
                        OUTPUT rezult(msg);
                        /* CIF NEXTSTATE (1042, 686), (100, 50) */
                        NEXTSTATE Running;
            ENDDECISION;
    ENDSTATE;
    /* CIF STATE (427, 944), (100, 50) */
    STATE Wait;
        /* CIF INPUT (427, 1014), (100, 50) */
        INPUT go(msg)
        /* CIF COMMENT (547, 1021), (120, 35) */
        COMMENT 'Ïñpût unicode';
            /* CIF DECISION (420, 1079), (114, 70) */
            DECISION msg = 'hello'
            /* CIF COMMENT (554, 1089), (128, 50) */
            COMMENT 'Boolean test
on string value';
                    /* CIF ANSWER (638, 1169), (100, 35) */
                    (FALSE):
                        /* CIF OUTPUT (618, 1219), (139, 50) */
                        OUTPUT rezult(first_msg)
                        /* CIF COMMENT (777, 1226), (85, 35) */
                        COMMENT 'OûtpUT';
                        /* CIF NEXTSTATE (638, 1284), (100, 50) */
                        NEXTSTATE Wait;
                    /* CIF ANSWER (367, 1169), (100, 35) */
                    (TRUE):
                        /* CIF OUTPUT (344, 1219), (145, 50) */
                        OUTPUT rezult('Welcome')
                        /* CIF COMMENT (509, 1219), (95, 50) */
                        COMMENT 'Send raw
string';
                        /* CIF DECISION (368, 1284), (98, 50) */
                        DECISION 3 in {1,2,3};
                                /* CIF ANSWER (328, 1354), (88, 23) */
                                (1 in {1,2}):
                                /* CIF ANSWER (418, 1354), (88, 23) */
                                (0 in {1,2}):
                        ENDDECISION;
                        /* CIF DECISION (368, 1417), (98, 50) */
                        DECISION 4 in {1,2,3};
                                /* CIF ANSWER (337, 1487), (70, 23) */
                                (true):
                                /* CIF ANSWER (427, 1487), (70, 23) */
                                (false):
                        ENDDECISION;
                        /* CIF NEXTSTATE (367, 1525), (100, 50) */
                        NEXTSTATE Running;
            ENDDECISION;
    ENDSTATE;
ENDPROCESS og;