--------------------------------------------------------
--! File generated by asn2aadl v1.2359: DO NOT EDIT !
--------------------------------------------------------

package DataView

public

  with Data_Model;
  with Taste;
  with Base_Types;
  with Deployment;
-- No more private heap required (we use the space certified compiler)
-- Memory_Required: 0


DATA Simulink_Tunable_Parameter
PROPERTIES
   TASTE::Ada_Package_Name => "TASTE-Directives";
   Type_Source_Name => "Simulink-Tunable-Parameter";
   Deployment::ASN1_Module_Name => "TASTE-Directives";
END Simulink_Tunable_Parameter;

DATA TASTE_Directive
PROPERTIES
   TASTE::Ada_Package_Name => "TASTE-Directives";
   Type_Source_Name => "Taste-directive";
   Deployment::ASN1_Module_Name => "TASTE-Directives";
END TASTE_Directive;


data Stream_Element_Buffer
    -- Root type for buffer elements
properties
    Data_Model::Data_Representation => Character;
end Stream_Element_Buffer;
DATA MySeq
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataView.asn");
    TASTE::Ada_Package_Name => "TASTE_Dataview";
    Deployment::ASN1_Module_Name => "TASTE-Dataview";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 12; suggested aligned message buffer is...
    Source_Data_Size => 16 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "MySeq";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END MySeq;

DATA MySeq_Buffer_Max
END MySeq_Buffer_Max;

DATA IMPLEMENTATION MySeq_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type MySeq
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END MySeq_Buffer_Max.impl;

DATA MySeq_Buffer
END MySeq_Buffer;

DATA IMPLEMENTATION MySeq_Buffer.impl
    -- Buffer to hold a marshalled data of type MySeq
SUBCOMPONENTS
    Buffer : data MySeq_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END MySeq_Buffer.impl;

DATA MyEnum
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataView.asn");
    TASTE::Ada_Package_Name => "TASTE_Dataview";
    Deployment::ASN1_Module_Name => "TASTE-Dataview";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "MyEnum";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aENUMERATED;
END MyEnum;

DATA MyEnum_Buffer_Max
END MyEnum_Buffer_Max;

DATA IMPLEMENTATION MyEnum_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type MyEnum
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END MyEnum_Buffer_Max.impl;

DATA MyEnum_Buffer
END MyEnum_Buffer;

DATA IMPLEMENTATION MyEnum_Buffer.impl
    -- Buffer to hold a marshalled data of type MyEnum
SUBCOMPONENTS
    Buffer : data MyEnum_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END MyEnum_Buffer.impl;

DATA MyChoice
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataView.asn");
    TASTE::Ada_Package_Name => "TASTE_Dataview";
    Deployment::ASN1_Module_Name => "TASTE-Dataview";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 16; suggested aligned message buffer is...
    Source_Data_Size => 16 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "MyChoice";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aCHOICE;
END MyChoice;

DATA MyChoice_Buffer_Max
END MyChoice_Buffer_Max;

DATA IMPLEMENTATION MyChoice_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type MyChoice
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END MyChoice_Buffer_Max.impl;

DATA MyChoice_Buffer
END MyChoice_Buffer;

DATA IMPLEMENTATION MyChoice_Buffer.impl
    -- Buffer to hold a marshalled data of type MyChoice
SUBCOMPONENTS
    Buffer : data MyChoice_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END MyChoice_Buffer.impl;

DATA MySeqWithEmbeddedSeqOf
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataView.asn");
    TASTE::Ada_Package_Name => "TASTE_Dataview";
    Deployment::ASN1_Module_Name => "TASTE-Dataview";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "MySeqWithEmbeddedSeqOf";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END MySeqWithEmbeddedSeqOf;

DATA MySeqWithEmbeddedSeqOf_Buffer_Max
END MySeqWithEmbeddedSeqOf_Buffer_Max;

DATA IMPLEMENTATION MySeqWithEmbeddedSeqOf_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type MySeqWithEmbeddedSeqOf
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END MySeqWithEmbeddedSeqOf_Buffer_Max.impl;

DATA MySeqWithEmbeddedSeqOf_Buffer
END MySeqWithEmbeddedSeqOf_Buffer;

DATA IMPLEMENTATION MySeqWithEmbeddedSeqOf_Buffer.impl
    -- Buffer to hold a marshalled data of type MySeqWithEmbeddedSeqOf
SUBCOMPONENTS
    Buffer : data MySeqWithEmbeddedSeqOf_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END MySeqWithEmbeddedSeqOf_Buffer.impl;

DATA MyReal
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataView.asn");
    TASTE::Ada_Package_Name => "TASTE_Dataview";
    Deployment::ASN1_Module_Name => "TASTE-Dataview";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 13; suggested aligned message buffer is...
    Source_Data_Size => 16 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "MyReal";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aREAL;
END MyReal;

DATA MyReal_Buffer_Max
END MyReal_Buffer_Max;

DATA IMPLEMENTATION MyReal_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type MyReal
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END MyReal_Buffer_Max.impl;

DATA MyReal_Buffer
END MyReal_Buffer;

DATA IMPLEMENTATION MyReal_Buffer.impl
    -- Buffer to hold a marshalled data of type MyReal
SUBCOMPONENTS
    Buffer : data MyReal_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END MyReal_Buffer.impl;

DATA MyRefSeqOf
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataView.asn");
    TASTE::Ada_Package_Name => "TASTE_Dataview";
    Deployment::ASN1_Module_Name => "TASTE-Dataview";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "MyRefSeqOf";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END MyRefSeqOf;

DATA MyRefSeqOf_Buffer_Max
END MyRefSeqOf_Buffer_Max;

DATA IMPLEMENTATION MyRefSeqOf_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type MyRefSeqOf
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END MyRefSeqOf_Buffer_Max.impl;

DATA MyRefSeqOf_Buffer
END MyRefSeqOf_Buffer;

DATA IMPLEMENTATION MyRefSeqOf_Buffer.impl
    -- Buffer to hold a marshalled data of type MyRefSeqOf
SUBCOMPONENTS
    Buffer : data MyRefSeqOf_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END MyRefSeqOf_Buffer.impl;

DATA MyComplexChoice
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataView.asn");
    TASTE::Ada_Package_Name => "TASTE_Dataview";
    Deployment::ASN1_Module_Name => "TASTE-Dataview";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 12; suggested aligned message buffer is...
    Source_Data_Size => 16 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "MyComplexChoice";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aCHOICE;
END MyComplexChoice;

DATA MyComplexChoice_Buffer_Max
END MyComplexChoice_Buffer_Max;

DATA IMPLEMENTATION MyComplexChoice_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type MyComplexChoice
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END MyComplexChoice_Buffer_Max.impl;

DATA MyComplexChoice_Buffer
END MyComplexChoice_Buffer;

DATA IMPLEMENTATION MyComplexChoice_Buffer.impl
    -- Buffer to hold a marshalled data of type MyComplexChoice
SUBCOMPONENTS
    Buffer : data MyComplexChoice_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END MyComplexChoice_Buffer.impl;

DATA MyInteger
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataView.asn");
    TASTE::Ada_Package_Name => "TASTE_Dataview";
    Deployment::ASN1_Module_Name => "TASTE-Dataview";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "MyInteger";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END MyInteger;

DATA MyInteger_Buffer_Max
END MyInteger_Buffer_Max;

DATA IMPLEMENTATION MyInteger_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type MyInteger
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END MyInteger_Buffer_Max.impl;

DATA MyInteger_Buffer
END MyInteger_Buffer;

DATA IMPLEMENTATION MyInteger_Buffer.impl
    -- Buffer to hold a marshalled data of type MyInteger
SUBCOMPONENTS
    Buffer : data MyInteger_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END MyInteger_Buffer.impl;

DATA DeepSeq
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataView.asn");
    TASTE::Ada_Package_Name => "TASTE_Dataview";
    Deployment::ASN1_Module_Name => "TASTE-Dataview";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 16; suggested aligned message buffer is...
    Source_Data_Size => 16 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "DeepSeq";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END DeepSeq;

DATA DeepSeq_Buffer_Max
END DeepSeq_Buffer_Max;

DATA IMPLEMENTATION DeepSeq_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type DeepSeq
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END DeepSeq_Buffer_Max.impl;

DATA DeepSeq_Buffer
END DeepSeq_Buffer;

DATA IMPLEMENTATION DeepSeq_Buffer.impl
    -- Buffer to hold a marshalled data of type DeepSeq
SUBCOMPONENTS
    Buffer : data DeepSeq_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END DeepSeq_Buffer.impl;

DATA MyComplexSeqOf
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataView.asn");
    TASTE::Ada_Package_Name => "TASTE_Dataview";
    Deployment::ASN1_Module_Name => "TASTE-Dataview";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 16; suggested aligned message buffer is...
    Source_Data_Size => 16 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "MyComplexSeqOf";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END MyComplexSeqOf;

DATA MyComplexSeqOf_Buffer_Max
END MyComplexSeqOf_Buffer_Max;

DATA IMPLEMENTATION MyComplexSeqOf_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type MyComplexSeqOf
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END MyComplexSeqOf_Buffer_Max.impl;

DATA MyComplexSeqOf_Buffer
END MyComplexSeqOf_Buffer;

DATA IMPLEMENTATION MyComplexSeqOf_Buffer.impl
    -- Buffer to hold a marshalled data of type MyComplexSeqOf
SUBCOMPONENTS
    Buffer : data MyComplexSeqOf_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END MyComplexSeqOf_Buffer.impl;

DATA MySeqOf
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataView.asn");
    TASTE::Ada_Package_Name => "TASTE_Dataview";
    Deployment::ASN1_Module_Name => "TASTE-Dataview";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "MySeqOf";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END MySeqOf;

DATA MySeqOf_Buffer_Max
END MySeqOf_Buffer_Max;

DATA IMPLEMENTATION MySeqOf_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type MySeqOf
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END MySeqOf_Buffer_Max.impl;

DATA MySeqOf_Buffer
END MySeqOf_Buffer;

DATA IMPLEMENTATION MySeqOf_Buffer.impl
    -- Buffer to hold a marshalled data of type MySeqOf
SUBCOMPONENTS
    Buffer : data MySeqOf_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END MySeqOf_Buffer.impl;

DATA MyPossiblyEmptySeqOf
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataView.asn");
    TASTE::Ada_Package_Name => "TASTE_Dataview";
    Deployment::ASN1_Module_Name => "TASTE-Dataview";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 20; suggested aligned message buffer is...
    Source_Data_Size => 24 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "MyPossiblyEmptySeqOf";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END MyPossiblyEmptySeqOf;

DATA MyPossiblyEmptySeqOf_Buffer_Max
END MyPossiblyEmptySeqOf_Buffer_Max;

DATA IMPLEMENTATION MyPossiblyEmptySeqOf_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type MyPossiblyEmptySeqOf
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (24); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END MyPossiblyEmptySeqOf_Buffer_Max.impl;

DATA MyPossiblyEmptySeqOf_Buffer
END MyPossiblyEmptySeqOf_Buffer;

DATA IMPLEMENTATION MyPossiblyEmptySeqOf_Buffer.impl
    -- Buffer to hold a marshalled data of type MyPossiblyEmptySeqOf
SUBCOMPONENTS
    Buffer : data MyPossiblyEmptySeqOf_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END MyPossiblyEmptySeqOf_Buffer.impl;

DATA MyComplexType
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataView.asn");
    TASTE::Ada_Package_Name => "TASTE_Dataview";
    Deployment::ASN1_Module_Name => "TASTE-Dataview";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 16; suggested aligned message buffer is...
    Source_Data_Size => 16 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "MyComplexType";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END MyComplexType;

DATA MyComplexType_Buffer_Max
END MyComplexType_Buffer_Max;

DATA IMPLEMENTATION MyComplexType_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type MyComplexType
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END MyComplexType_Buffer_Max.impl;

DATA MyComplexType_Buffer
END MyComplexType_Buffer;

DATA IMPLEMENTATION MyComplexType_Buffer.impl
    -- Buffer to hold a marshalled data of type MyComplexType
SUBCOMPONENTS
    Buffer : data MyComplexType_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END MyComplexType_Buffer.impl;

DATA MyOctStr
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataView.asn");
    TASTE::Ada_Package_Name => "TASTE_Dataview";
    Deployment::ASN1_Module_Name => "TASTE-Dataview";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 3; suggested aligned message buffer is...
    Source_Data_Size => 8 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "MyOctStr";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSTRING;
END MyOctStr;

DATA MyOctStr_Buffer_Max
END MyOctStr_Buffer_Max;

DATA IMPLEMENTATION MyOctStr_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type MyOctStr
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END MyOctStr_Buffer_Max.impl;

DATA MyOctStr_Buffer
END MyOctStr_Buffer;

DATA IMPLEMENTATION MyOctStr_Buffer.impl
    -- Buffer to hold a marshalled data of type MyOctStr
SUBCOMPONENTS
    Buffer : data MyOctStr_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END MyOctStr_Buffer.impl;

end DataView;
