--------------------------------------------------------
--! File generated by asn2aadl v1.2359: DO NOT EDIT !
--------------------------------------------------------

package DataView

public

  with Data_Model;
  with Taste;
  with Base_Types;
  with Deployment;
-- No more private heap required (we use the space certified compiler)
-- Memory_Required: 0


DATA Simulink_Tunable_Parameter
PROPERTIES
   TASTE::Ada_Package_Name => "TASTE-Directives";
   Type_Source_Name => "Simulink-Tunable-Parameter";
   Deployment::ASN1_Module_Name => "TASTE-Directives";
END Simulink_Tunable_Parameter;

DATA TASTE_Directive
PROPERTIES
   TASTE::Ada_Package_Name => "TASTE-Directives";
   Type_Source_Name => "Taste-directive";
   Deployment::ASN1_Module_Name => "TASTE-Directives";
END TASTE_Directive;


data Stream_Element_Buffer
    -- Root type for buffer elements
properties
    Data_Model::Data_Representation => Character;
end Stream_Element_Buffer;
DATA T_POS
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataView.asn");
    TASTE::Ada_Package_Name => "TASTE_Dataview";
    Deployment::ASN1_Module_Name => "TASTE-Dataview";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 48; suggested aligned message buffer is...
    Source_Data_Size => 48 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-POS";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END T_POS;

DATA T_POS_Buffer_Max
END T_POS_Buffer_Max;

DATA IMPLEMENTATION T_POS_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_POS
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (48); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_POS_Buffer_Max.impl;

DATA T_POS_Buffer
END T_POS_Buffer;

DATA IMPLEMENTATION T_POS_Buffer.impl
    -- Buffer to hold a marshalled data of type T_POS
SUBCOMPONENTS
    Buffer : data T_POS_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_POS_Buffer.impl;

DATA T_INTEGER
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataView.asn");
    TASTE::Ada_Package_Name => "TASTE_Dataview";
    Deployment::ASN1_Module_Name => "TASTE-Dataview";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-INTEGER";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END T_INTEGER;

DATA T_INTEGER_Buffer_Max
END T_INTEGER_Buffer_Max;

DATA IMPLEMENTATION T_INTEGER_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_INTEGER
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_INTEGER_Buffer_Max.impl;

DATA T_INTEGER_Buffer
END T_INTEGER_Buffer;

DATA IMPLEMENTATION T_INTEGER_Buffer.impl
    -- Buffer to hold a marshalled data of type T_INTEGER
SUBCOMPONENTS
    Buffer : data T_INTEGER_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_INTEGER_Buffer.impl;

DATA T_SEQ
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataView.asn");
    TASTE::Ada_Package_Name => "TASTE_Dataview";
    Deployment::ASN1_Module_Name => "TASTE-Dataview";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 24; suggested aligned message buffer is...
    Source_Data_Size => 24 Bytes;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-SEQ";
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END T_SEQ;

DATA T_SEQ_Buffer_Max
END T_SEQ_Buffer_Max;

DATA IMPLEMENTATION T_SEQ_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_SEQ
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (24); -- Size of the buffer
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_SEQ_Buffer_Max.impl;

DATA T_SEQ_Buffer
END T_SEQ_Buffer;

DATA IMPLEMENTATION T_SEQ_Buffer.impl
    -- Buffer to hold a marshalled data of type T_SEQ
SUBCOMPONENTS
    Buffer : data T_SEQ_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_SEQ_Buffer.impl;

end DataView;
