Metadata-Version: 1.1
Name: dop
Version: 1.6.b6
Summary: A Python client for the Digital Ocean API
Home-page: http://github.com/ahmontero/dop
Author: Antonio H Montero
Author-email: hello@ahmontero.com
License: Copyright (c) 2013-2014 Antonio H Montero.

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Description: DOP: Digital Ocean API Python Wrapper
        =====================================
        
            .. image:: https://badge.fury.io/py/dop.png 
                :target: http://badge.fury.io/py/dop
            
            .. image:: https://pypip.in/d/dop/badge.png 
                :target: http://badge.fury.io/py/dop
        
        DOP is a MIT licensed Python wrapper for Digital Ocean's API.
        
        
        Features
        --------
        
        Full support for all methods listed `here`_
        
        Installation
        ------------
        
        To install dop, simply: ::
        
            $ pip install dop
        
        
        Example
        -------
        It is pretty easy to use: ::
        
        
            from dop.client import Client
        
            client = Client('client_id', 'api_key')
            
            # Print regions.
            regions = client.regions()
            for region in regions:
                print(region.to_json())
        
            # Print sizes.
            sizes = client.sizes()
            for size in sizes:
                print(size.to_json())
        
            # Print public global images.
            images = client.images()
            for image in images:
                print(image.to_json())
        
            # Print your private images.
            images = client.images(filter='my_images')
            for image in images:
                print(image.to_json())
        
            # Create a droplet
            conf = {
                'name': 'test',
                'size': {'size_slug': '512MB'},
                'image': {'image_slug': 'ubuntu-13-04-x64'},
                'region': {'region_slug': 'nyc1'},
            }
            droplet = client.create_droplet(**conf)
        
        To create a droplet, you can use the data fetched from regions, sizes and images methods to fill the dictionary properly.
        
        
        How to initialise with client_id and api_key stored in creds file
        -----------------------------------------------------------------
        Easy: ::
        
            from dop.client import Client
            
            client = Client.fromCredsFile('/home/user/.do.creds')
        
        
        
        Contribute
        ----------
        Pull requests and improvements are welcome.
        
        .. _`here`: https://www.digitalocean.com/api
        
        
        Version 1.6.b5
            + Fix some wrong variable names thanks to wummel (http://github.com/wummel)
        
        Version 1.6.b4
            + Fixed droplet creation bug
            + Improved docs
        
        Version 1.6.b3
            + Fixed http methods for droplets
            + Change edit_domain_record method name
            + Ability to install with easy_install without error (thanks to Adam PAPAI)
        
        Version 1.6.b1
            + Updated code to support full api
            + Improved comments for methods
            + Some refactor
        
        Version 0.1.6
            + Python 3 compatibility thanks to Sambodson (https://github.com/samdobson)
        
        Version 0.1.5
            + Updated API
        
        Version 0.1.4
            + Added virtio parameter to create_droplet method
            + Minor fixes in all_ssh_keys method
            + Readme region example now uses to_json() method
        
        Version 0.1.3
            + Added ssh_keys support to Droplet object (thanks to Derek: http://github.com/covertgeek)
        
        Version 0.1.2
            + Added ip_address to Droplet object (thanks to Derek: http://github.com/covertgeek)
        
        Version 0.1.1
            + Added support for requests 1.x (thanks to Luke: http://github.com/clone1018)
        
        Version 0.1.0
            + Initial release
        
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: License :: OSI Approved :: MIT License
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.0
