'\" t
.\"     Title: cdist-messaging
.\"    Author: Nico Schottelius <nico-cdist--@--schottelius.org>
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 03/26/2014
.\"    Manual: \ \&
.\"    Source: \ \&
.\"  Language: English
.\"
.TH "CDIST\-MESSAGING" "7" "03/26/2014" "\ \&" "\ \&"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
cdist-messaging \- How the initial manifest and types can communication
.SH "DESCRIPTION"
.sp
cdist has a simple but powerful way of allowing communication between the initial manifest and types as well as types and types\&.
.sp
Whenever execution is passed from cdist to one of the scripts described below, cdist generate 2 new temporary files and exports the environment variables \fImessages_in and \fRmessages_out to point to them\&.
.sp
Before handing over the control, the content of the global message file is copied into the file referenced by $__messages_in\&.
.sp
After cdist gained control back, the content of the file referenced by $__messages_out is appended to the global message file\&.
.sp
This way overwriting any of the two files by accident does not interfere with other types\&.
.sp
The order of execution is not defined unless you create dependencies between the different objects (see cdist\-manifest(7)) and thus you can only react reliably on messages by objects that you depend on\&.
.SH "AVAILABILITY"
.sp
Messaging is possible between all \fBlocal\fR scripts:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
initial manifest
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
type/manifest
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
type/gencode\-local
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
type/gencode\-remote
.RE
.SH "EXAMPLES"
.sp
When you want to emit a message use:
.sp
.if n \{\
.RS 4
.\}
.nf
echo "something" >> "$__messages_out"
.fi
.if n \{\
.RE
.\}
.sp
When you want to react on a message use:
.sp
.if n \{\
.RS 4
.\}
.nf
if grep \-q "^__your_type/object/id:something" "$__messages_in"; then
    echo "I do something else"
fi
.fi
.if n \{\
.RE
.\}
.SH "SEE ALSO"
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
cdist(1)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
cdist\-manifest(7)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
cdist\-reference(7)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
cdist\-type(7)
.RE
.SH "COPYING"
.sp
Copyright (C) 2013 Nico Schottelius\&. Free use of this software is granted under the terms of the GNU General Public License version 3 (GPLv3)\&.
.SH "AUTHOR"
.PP
\fBNico Schottelius\fR <\&nico\-cdist\-\-@\-\-schottelius\&.org\&>
.RS 4
Author.
.RE
