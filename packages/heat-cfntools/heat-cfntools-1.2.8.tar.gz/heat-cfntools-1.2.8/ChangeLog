CHANGES
=======

1.2.8
-----

* Change wget to curl for using both of them is redundant
* Fix cfn_helper test for random hash seed
* Update for psutil version
* Add res_last_path to store last metadata of a resource
* Update sysvinit function to support ubuntu
* Add support for package install via zypper

1.2.7
-----

* Manually sync requirements
* Switch over to mox3
* Support of ignoreErrors for commands
* cfn-signal provides a unique default id
* Log stdout and stderr on non-zero exit status
* Remove tox locale overrides
* Support building wheels (PEP-427)
* Log curl stderr on non-zero exit status
* Sync with global requirements
* Fix logging in cfn-init and cfn-signal
* Config files should be non-executable
* Only run yum install once per package block
* Add basic yum and apt package install tests

1.2.6
-----

* Use on-demand yum metadata caching in cfn-init
* cfn-hup manpage fix s/deamon/daemon typo
* Implement -k option for cfn-get-metadata
* Change cfn-signal option --exit to --exit-code
* Add argparse into requirements
* Support array values in command
* Pass cwd and env to test command

1.2.5
-----

* Sync with global requirements
* Use python 3 style print functions
* Use the server tags for dimensions and make watch_name optional
* Add a get_tags() method to the Metadata class
* Configure Apt to never prompt for user-input
* Add GitHub tarball and zipball support
* Fix test cases not running under python 2.6

1.2.4
-----

* Using pipe to handle tgz sources
* Add Flake8 checks for bin/cfn-* to Gating
* Delete the temporary directory created by sources handler
* Add missing -d option in cfn-signal
* Use Python 3.x compatible octal literals
* cfn-get-metadata: log metadata to standard output
* Include ChangeLog and AUTHORS
* Migrate to pbr
* Add options to send user-defined metric
* Rename requires files to standard names
* Migrate to flake8
* Fix pyflakes/hacking errors
* cfn-hup : Moving erroneous print to use LOG.debug
* Fix leaky tempfiles during test suite
* Run hooks even without cfn-init Metadata
* Add tests for cfn_hup
* Rework testsuite to be section order agnostic
* Use testtools for better Python 2.6 compatibility
* Update local metadata atomically using rename()

1.2.3
-----

* Prepare for release 1.2.3
* Remove reference to heat-api.org

1.2.2
-----

* Cache metadata in /var/cache instead of /tmp
* Use tempfile.mkdtemp to avoid tempfile race
* Add .tox directory to .gitignore

1.2.1
-----

* Prep for release 1.2.1
* License headers on python files
* Make help for --force more accurate
* Man page for cfn-signal
* Man page for cfn-push-stats
* Man page for cfn-hup
* Man page for cfn-get-metadata
* Man page for cfn-create-aws-symlinks
* Man page for cfn-init
* Config and scripts for building man pages
* Raise no exception for cfn-hup _is_valid_metadata()
* Don't use metadata from previous test
* Fix typos in unexecuted code paths
* Test coverage for ServicesHandler
* Store HupConfig hooks in a list, not a dict
* Test coverage for CommandRunner
* Re-enable pep8 tests, with a minor pep8 fix
* cfn-push-stats : Add --haproxy-latency option
* Add tox, pep8, pyflakes, testr support
* Look for heat data files in /var/lib/heat-cfntools
* Test retrieval of remote metadata and call to cfn_init. Testing of each handler will come separately
* Don't conceal any exception raised by describe_stack_resource
* Tests for Metadata.retrieve()
* Pass paths into Metadata.retrieve for testing
* test cfn_helper.parse_creds_file
* test cfn_helper.to_boolean
* prepare for next release
* Use testr to run the unit tests
* pip-requires and test-requires
* Add cfntools unit test to sync with heat-jeos
* Update version to 1.1
* Sync with heat-jeos commit 13f183e
* Fix Popen arguments and other similar initialization
* Add configSets support to cfntools
* Pass --credential-file argument down to Metadata constructor
* Adding command / group / user class
* apply_size_from_tdl
* Move logic to a couple of functions and parse args only in __main__
* Script to create cfn-* symlinks in /opt/aws/bin
* Exception handling and auto_file variable fix
* fix some pep issues and remove tempfile auto patch
* fix tab/space issue
* Add commandline support for custom autofiles e.g. kickstart
* Require a MANIFEST.in for older setuptools
* remove placeholder
* Initial commit
* Always import cfn_helper from heat_cfntools.cfntools
* rename python package heat_jeos to heat_cfntools
* Ignores
* delete heat-jeos files
* Makefile to post to ImageFactory
* Reorganise project to contain stand-alone heat-cfntools
* Make registration with python-glanceclient work
* cfn-signal URL must be quoted
* Fix some imports and return code
* cfn_helper turn off boto debugging
* cfn_helper Metadata fallback to files if getting remote metadata fails
* Remove boto.cfg template
* set boto BOTO_CONFIG variable to use specified config file
* Add boto to openshift cfntools tdl
* Fix permissions on /tmp/last_metadata
* heat-jeos : convert cfn-hup to use CloudFormation API
* cfn-hup fix logging to file
* Bump version to 7
* Fix image lookup by name on Folsom
* heat-jeos : convert cfn-push-stats to use CloudWatch API
* Add boto to Fedora cfntools tdls
* Inject template boto.cfg for cfntools
* Don't load the glance when it's not needed
* Add support for Folsom's python-glanceclient
* Missing argparse python module added
* Add tdl for CentOS 6.3 Signed-off-by: Maciej Osyda <maciej.osyda@amg.net.pl>
* Decide image_type based on the template contents
* Move image related code to heat_jeos.utils
* Don't write the processed template to filesystem
* Whitespace fix
* Set instance type from JEOS name
* Change glance registration instructions
* Remove "-jeos" from MANIFEST.in since files have been renamed
* Remove the '-jeos' suffix from TDL filenames
* Remove the '-jeos' suffix from all TDL names
* heat-jeos : Add new openshift tdl file
* Fix the logging (removed the parent logger)
* Add cpu utilization to cfn-push-stats
* Tidy up F17 image creation to look similar to F16 image creation
* Remove selinux setup from F16 jeos since this is done in cloud-init
* Add python-psutil to F16 jeos images for autoscaling statistics
* Fix typo in F16-i386 cfntools image which prevented the image from building
* Add support for a heartbeat to cfn-push-stats
* Make cfn-tools actually log to files
* install fedora-release first and clean up yum update nonsense
* Fix latest fedora updates complain about multilib arch problem with yum
* Bump version to 6
* Version 5
* Make heat-jeos list Ubuntu-compatible
* Change name from heat_jeos to heat-jeos
* Remove parse_haproxy_unix_socket() from non-haproxy case
* add simple support for post.update to cfn-hup
* Fix use-before-assign error
* Add docs to manifest
* Check for Glance creds before building the jeos
* Fix empty cfntools in generated images
* Add manpage
* Improve the heat-jeos usability
* Add haproxy metrics to the cfn-push-tool
* cleanup the commands section
* Build gold image - was previously broken
* Set TimeoutSec to zero in fedora systemd files (don't timeout)
* Bump ubuntu iso version and some clean up
* Change cfn-push-stats from a POST to a PUT
* Make Glance hostname and port configurable
* Subcommand-specific argument handling
* Use Oz as a library instead of shelling out
* Change usage/help text
* Split jeos creation into three separate commands
* Fix the jeos and cfntools paths handling
* Add requirements.txt
* Fix the setup.py warnings
* add setup.py to heat-jeos command
* Update jeos creation to work with the new options
* Add the basic top-level commands
* Update the jeos and cfntools paths
* Remone non jeos-related files
* Initial standalone heat-jeos bin
* README rst file
* Change command interpreter to bash
* Add qpid-cpp-server to the openstack setup script
* Teach heat-api about the bind_host
* Refactor template resolution
* U10 wordpress template
* Fix new pep8 warnings
* Fix the Getting Started guide for the new setup.py
* Refactor Resource creation
* Clean up imports
* Don't use sys.exc_value
* Get list properties working again
* Remove _authenticate() check for metadata calls (temp)
* Fix the HA template (sed the username/password)
* Fix apt-get install
* Remove python 2.7ism
* Compress qcow2 files to take up less disk space
* Install argparse and update the U10 package cache
* Fix auth failed exception handler
* Set stack's `updated_at` time
* Add instance restarter
* Add a name to the checkeddict to improve the error messages
* Authentication Overhaul
* Changed SecurityGroups property type to TuplesList
* Change the policies for User to TuplesList
* Add missing flags to enable working with RabbitMQ
* cloudwatch: set HA template to send watch data
* Add the basic cloudwatch feature
* Add missing "properties_schema" to WaitConditionHandle
* Fix jeos_path when not intalled as an egg
* Allow login to U10 jeos launched from heat
* Changes to checkeddict for tuples and required
* Make i386 cfntools jeos work
* Add U10 JEOS support to heat jeos_create
* Validate all resource properties
* Add functional test to verify jeos and stack ops
* Fixing variable name for debug message
* using the calculated path for the template tests
* Update resource statuses in the database
* Fix deletion of security groups
* Only run cfn-init once
* Use the new CheckedDict for Parameters
* Add some better checking for parameters and properties
* Fixing path lookup to make sure the templates can be found
* Adding the AWS::IAM::User and AWS::IAM::AccessKey to the mapping
* tools/openstack: Updated to latest openstack F16/F17 tools
* Update gitreview for new Stackforge remote
* Align with project standards
* Fedora openstack projects use new tools to setup databases
* Add .gitreview for Gerrit
* Add an integration test script
* Pep8 fixes
* Fixing _decompress to handle bundled and compressed
* Handle failures when deleting stacks
* Fix problem with updating parsed template in DB
* Fix copy-paste errors in template descriptions
* Improvements to uninstall script
* Refactor some not-particularly-Pythonic code
* Delete networks when erasing OpenStack
* Adding chaining to CommandRunner
* Making PrivateDnsName return the ip address
* Adding puppet and puppet master instances
* Wait for instance startup in GettingStarted test
* api : fix pep8 warning
* Allow engine and metadata server start in any order
* Making PrivateDnsName return the ip address
* Clean up the API routes
* Adding puppet and puppet master instances
* Clean up the API routes
* Make the wait condition behave better when the stack is deleted
* heat cli : Add options to bash completion script
* heat client : reduce duplication between functions
* API and heat-cli rework to align with AWS CloudFormation API
* Report errors when resource creation fails
* Modify command names for consistency
* Updated the version to 4
* Make 'heat help' show a list of commands
* Allow the Getting Started script to run non-interactively
* Fix pep8 errors
* Set cfn-hup to send events to the metadata server
* Slim down the getting_started template
* Check for the presence of Metadat before trying to include it the multipart
* Add status argument that shows service status for all required services
* Kill some pep8 errors in test_stacks.py
* Kill some pep8 errors in engine directory
* Kill few pep8 errors
* Properly test ref valid against proper input
* Use manager to test ref validation
* Add test cases to test valid and invalid keys in FindInMap
* List stacks tests
* Move list_events into the class
* Factor out a start_wordpress_stack()
* Add event_list test
* Add uninstall script
* Add Getting Started guide to repo
* Add cfn-get-metadata to the manifest
* Fixed problems with starting MySQL in heat-db-setup
* Add test_validate_ref for invalid and valid inputs
* Check for invalid Fn::FindInMap key
* Check for invalid Ref keys in validate
* TEST: slightly better version with minimal template in place
* Add volumeattachment validation
* Allowed the database call to return no parsed template
* Adding a deepcopy of the template before stack create validation
* Add stack delete test, and set stack to DELETE_COMPLETE when done
* Removing stack validation on create
* Adding stack create test
* Validate invalid mountpoint.device entries
* Allow sending events using metadata server
* Typo in a logging declaration
* Fix stack creation - CREATE_FAILED issue
* Add ability to automate testing with tox
* Add option to exclude pep8 examination to run_test.sh
* Add test coverage option to run_tests.sh
* Connect up the waitcondition code to poll the metadata for the signal
* Save to parsed template as that is used in the parser
* WaitCondition: fix the url to the new metadata server
* Add WaitConditions to HA template
* Download cfn tools from the master branch
* Escape the quotes going into cfn-signal shell command
* More peppy fixes..
* Add implementation to cfn-signal
* Fix undefined LOG variable in db.session
* Remove unused "cloudinit_path" setup in resources.py
* Metadata: Add bind_host to the config
* Register metadata server's entry point with Engine
* Remove obsoleted metadata files
* Connect metadata server to the engine via RPC
* Moving key validation into instance validate
* Apparently boto expects / to be list stacks
* ValidateTemplate API call framework
* Fix the sql in the rails template (didn't work with the mysql in f16)
* uncommenting the metadata server attribute so the tests work
* Validating the KeyName against nova on stack_create
* Connect cfn utils to the remote server
* Fix cfn-get-metadata params and output
* Fixed the interpretation of the file extension
* Only showing the Outputs when the status of a stack is CREATE_COMPLETE
* Fix unbound error in cfn_helper
* Adding mime_string to the Instance instance and fixing tests
* Fix some indentation and pep errors
* Hack the Rails template to work
* Add Rails template example
* Add dummy cfn-signal
* Add WaitConditions
* Split the resourses up into seperate files
* Handle "sources" in cfn-init
* Initial metadata server API
* Add very basic support for installing (apt, python & gems)
* Add cfn-get-metadata to files section of cfntools tdls
* Modified README in tools directory to explain a few more tools
* Scoping the session per thread (request)
* Oops, meant for website repo
* Heat Logo
* Skipping the import if its deps aren't installed, use --no-skip if you want to run this
* Copied the python-novaclient test code to avoid importing via python path
* Adding the metadata.log file
* Finish necessary changes related to jeos_create move
* Add skeleton structure for the metadata server
* Update heat-api docstring
* more pep fixups
* Add cfn-get-metadata make all cfn tools more consistent
* openstack-common: timeutils and importutils seperated out
* openstack-common: update cfg.py
* Move jeos_create into utils so it can be imported
* Put Starting Heat API in log file and add logging setup to bin/heat-api
* Remove stray print debug message
* Quiet down the QPID logging since it isn't helpful and makes logs hard to read
* Kill prints and replace with LOG in heat/rpc/__init__.py
* Stub out system calls in metadata_files test
* Implement runas for cfn-hup
* Add test artifacts to gitignore
* Handle cfn-hup non-value parameters
* Moving db error wrapping into heat session to avoid a nova import
* Add an easier way to update the cfn scripts
* Fix up the template - some scripts not right
* Fix the cfn logging
* Fix userdata mime creation
* Fix userdata mime creation
* Add a real creds file for the cfn-hup config tests
* Re-add the file logging to cfn tools
* Make sure AWS::StackName is avaliable
* Add cfn-hup config into template
* Copy the single inst. wordpress template to With_HA
* removing import of common config because it needs credentials
* Adding the nova.exeption import to fix the tree
* Add file support to cfn-init
* Adding instance delete test
* Log when cfn-hup couldn't restart a service
* putting python-novaclient back in pip requires
* Removing nova from pip requires
* Make heat-db-setup generic enough to run on RPM or DEB distributions
* Adding the nova module to the pip-requires
* removing import of common config because it needs credentials
* Adding the nova.exeption import to fix the tree
* Use pip package name, not the RPM one
* Update virtual-env requires and documentation
* Make cfn-hup configuration handling closer to aws
* Better error messages for cfn-hup configuration
* more work on cfn-hup
* Add test case for boolean
* Assert the instance auto increment on the id worked
* Removing the run_tests.py, was replaced by heat/testing/runner.py
* Changing version scheme to just major
* Adding instance creation test
* Fix `to_boolean` in cfn_helper
* Try and keep track of the stack status
* Added db setup and teardown with sqlite
* Adding unit test for instance creation
* Adding resource initialization test
* Adding instance creation test
* Added db setup and teardown with sqlite
* Adding unit test for instance creation
* Adding resource initialization test
* Initial cfn-hup (wip)
* Move common cfn code into cfn_helper.py
* Fix more pep8 errors
* Update version to v3
* Wordpress 2 instance with EBS and EIP
* heat cli : Add bash_completion.d entry for heat
* heat cli: Use python logging module
* Fix another print -> logger.warn
* resources.py had a bunch of print's in it
* Add an exception around EIP fetching
* Fix a typo in the command line help
* Use v1 / v2 / v3 for version numbers to match tags
* Set proper author and mailing list in setup.py
* Remove BUILDING.rst since there is no building taking place inside project
* Remove rpm spec file and Makefile. Will track packaging in a different repo
* Remove tito - likely track this in a different repo
* Fix the EIP cleanup
* Add documentation for the per command CLI help options
* heat, heat-api: Add missing licence to header
* Remove rootpw from tdls and add ec2-user to sudoers file
* Deleting parsed and raw template when deleting stacks
* A little more detail on network create
* Fix the test environment
* Fix another template attribute in the output section
* Use the correct api to get the volume object
* Save the resource if complete or failed
* Fix the delete of a volume attach when the create partially succeeded
* To properly populate the output section
* Use the instance_id for the event "physical_resource_id"
* Fix the output attribute in single instance wp template
* Save the parsed_template so user parameters are available
* Fix the parsed_template columns (missing created_at and updated_at)
* Fix the version file (don't import glance's git commit)
* Add WordPress_Single_Instance_With_EBS_EIP.template
* Rename EBS_Volume to just EBS to pave way for EBS_EIP
* Make WordPress_Single_Instance_With_EIP.template work
* Initialize sec to None to avoid exception in security group
* Fix invalid JSON in template
* Store all event data in DB
* Remove hard-coded paths from DB setup script
* Avoid printing exception in db-setup
* Handle exception on Ctrl-C
* Updated WordPress_Single_Instance.template to work properly
* Update templates README with list of secure vs insecure templates
* Make WordPress_Single_Instance_With_EBS_Volume.template functional
* remove old experimental code
* kill all pep8 errors in parser and resources
* Updated templates/README directory to more clearly explain templates
* Rename WordPress_Single_Instance_cfntools.template to not have cfntools in name
* Rename WordPress_Single_Instance.template to have gold in name
* Adjust cfn-init -f flag to be implicit
* Adjust cfn-init to not use -f option
* Adjust cfn-init to not take a parameter in the initialization
* Fix bug in path on cfn-init
* Fix for issue #75: no more -f in cfn-init
* gold plating the WordPress_2_Instances template
* Wordpress 2 with EBS working
* Resolving rpmlint errors and adding man pages
* Register security group with launched instances
* Fix creation of security group and rules
* Fix a heap of pep8 errors
* Make an attempt at passing exception messages from engine to cli
* Fix 'heat describe'
* Add a traceback on exception caught
* Add a README to the templates directory to aid in navigation of the templates
* Add a tools/heat-db-drop script for fatal error recovery
* Make Wordpress_2_Instances.template work properly
* Check errors better in resolve_attributes()
* Add yum-plugin-fastestmirror on F17-x86_64 cfntools image
* Add yum-plugin-fastestmirror to the cfntools images
* Update WordPress_2_Instances.template to use cfntools and cfn-init
* resources: remove insert_package_and_services
* Properly launches a cfntools image with the appropriate userdata mime blob
* Correct path to cfninit data
* Yet more typos in cfntools template
* Fix typo in template
* Add a cfn-init call to cfntools
* Automatic commit of package [heat] release [0.0.1-1]
* Adding instructions on building the project with tito
* Removing the PKG-INFO and vcsversion.py from the rpm
* Initialized to use tito
* Add unit test framework nose and associated helper scripts
* Document all methods in the EngineManager class. These ones seem important
* Updating the heat spec to pull in cloudinit files and i386 jeos templates
* renaming CloudFormations to CloudFormation
* Handle errors when listing events
* Show stack description when status is unknown
* Allow listing of all events
* Use security groups in the multi-instance wp template
* Fix listing stacks
* Fix the stack.delete() by populating the resource id/state from the db
* move the db stack delete into parser.py as it is non-blocking
* Cleanup db imports (use heat code, don't import nova modules)
* Consistently create the db resource entry
* Add SecurityGroups to make is easier to use EIP
* Eliminate overly-broad exception catching
* Improvements to DB setup
* Issue #52: Fix error in db-setup script
* Start systemd services properly with cfn-init tool
* Fix the jeos path when running from installed code
* Delete extra white space
* Fix 'heat list' when there are no stacks
* Make jeos_create aware of existing disk files and previous glance registrations
* Update F17 cfntools image to properly boot for cloudinit
* Add ec2-user to F17 x86_64 tdl
* add ec2-user to F16 cfntools image
* Update i386 F16 cfntools image to match latest cloudinit features
* updated F17 x86_64 cfntools tdl to new cloudinit model
* Install cloudinit specific files that are loaded into the mime userdata
* Updated x86_64 cfntools tdl to work with broken F16 repos and cloud-init
* fixing small sed typo
* Add elastic IP and userdata to 2-instance template
* Fixing the heat events_list <stack name>
* Move the EIP settings into a different template
* Initial ElasticIp work - not quite working
* Add newly added tdls to manifest
* Add 32-bit tdls for Fedora 16,17 jeos (gold and cfntools)
* Fix exception getting events list
* Import missing exceptions
* Fix setting of admin role in keystone service
* Resolving functional conflicts from merge
* Adding new files to heat.spec file
* Defaulting to the mysql db_backend, removing anydbm
* Making delete stack work
* Persisting resources
* Made datetime objects JSON compatible by calling their to string functions
* Integrating all stack, template, and event calls with database
* Fix reporting of RemoteError exceptions from AMQP
* Handle missing config file
* Fix silly spello
* Record the reason for any failures
* Make better use of cloud-init
* Make the create/delete non-blocking
* Fix path to keystonerc
* Rename cftools to cfntools in the wordpress single instance template
* Put cfn-tools into the cfntool image
* Renamed all occurrances of cftools to cfntools to be more consistent
* Move cfntools to heat directory so they are accessible by jeos_create
* Add 2-instance Wordpress template without EBS
* Try harder to detach the server volume
* Don't use the "depends_on" in resource.start
* Cleanup some prints in the resources
* Add a 2 instance wordpress example
* Improve the ordering of stopping resources
* Issue #54: Getting started with cfn-init
* Get the volumes working properly
* Add documentation for heat jeos_create function
* typo fix in jeos_create
* Fix "heat list" only showing empty list
* Add utils & exception from openstack-common
* Use local.py from openstack-common
* Add F17 cftools TDL
* Add F16 cftools tdl
* Fix events_list
* Fix describe and delete
* Pass the parameters to the parser
* Remove some more unused files
* Don't need these files anymore. As per the layout in nova compute the manager is handling all the engine api calls
* Fix --template-file
* Use some evil to get the jeos tdl path
* Fix stack_delete()
* stack_db attributes seem broken. Comment these out for now and the API is generally working
* Fix create a bit more
* Hook up RPC methods
* Pre-bake cftools into an image
* Initial CloudFormations dummy files for vm helper tools
* Revert "Allow templates specified from local filesystem"
* Do mimimum to work with anydb
* Add support for the Output section
* Add an Outputs section to the template
* run dos2unix on the templates
* Updating the README to point to the Getting Started Wiki
* Adding the sqlalchemy db implmentation
* Allow templates specified from local filesystem
* Updated openstack script to print a note about the default network
* Beginings of Volumes and VolumeAttachments
* Update readme with the Keystone service setup
* Add a heat database to store templates, state, and events Fixes #39
* Make the "heat delete" command work
* Fix a crash in "heat show/list"
* Fix keystone creds in parser
* Make wordpress template leave mysql+http running, and start/enable them by default
* Pass the keystone creds to resource.py so usable from run-parser and heat
* temporarily hack out the keystone auth
* Updated wordpress single instance template to have quotes in proper place
* F16 updates broken- Delete F16 and F17 update repos and don't yum update
* Start userdata script after decoding
* use << intead of &lt;&lt; in Wordpress example
* Add FnBase64 encoder, encode user data, and feed to nova userdata
* Add installation of cloud-init to the JEOS creation operation
* Show how to create a network after using the openstack tools script
* Remove errant debugging print from run-parser.py
* Update to setup directions
* Stack list now communicating end to end. Time to hook some stuff up
* Change default exchange to heat-engine from nova. Hook up 'list' though it doesn't work yet
* Make create Working with recent glance mysql changes in F16/F17 RPMs
* Add mysql db creation for glance
* Fix run_parser.py to work with the db updates
* Move simpledb to db/anydbm just so we are using the new API
* Fix the service toke and endpoint
* Add script to add heat service catalog into keystone
* Get simple rpc.call working
* Add needed strtime functions from nova
* Add missing references
* Wait for server to enter the ACTIVE state or ERROR state and send events
* Stub out the database access API
* s/image/heat in auth code
* Copy some glance/common fixes
* run_parser.py creates an instance now
* Updated run-parser.py to work well with WordPress template
* Updated README with more precise setup directions
* Produce proper distro-arch variable for use with launching
* Update run-parser to work with proper user parameters as sent through the apis
* Security credentials are now passed into heat engine from cli
* Fix spelling error dependancies->dependencies
* Fix spelling error
* Tidy up README.rst
* Removing OpenStack LLC copyright
* Adding F17 JEOS tdl Issue #25
* Fix some tabbing
* Add the ValidateTemplate API
* Fix misspelling of Ubuntu so tdl is properly found
* Get the heat --parameters to work
* Add ami conversion to OpenStack style architectures
* Account for missing Properties
* Install /var/lib/heat directory
* Fix order of parmeters issue
* Fix heat jeos_create F16 x86_64 litters files
* Remove unneeded deps
* Fix up some imports so they work. I think this is right now. :)
* Add README to tools directory to help point out what files do
* Initial work on migrating heat-engine to rpc
* Add error checking and help to tool
* Add a missing tab
* Add code that shows how to create an instance
* Consistently use Keystone auth from environment
* Begin the change to a python only implementation
* Add an experimental ssh monitoring script
* Covert AWS instance types into Openstack Flavors
* Change run_parser.py to run t1.micro rather then m1.large
* Some glance keystone changes from getting started guide
* Updated with latest F17 nova auth fix
* install/erase working better
* Add a openstack helper install script
* Add elastic ip association to parser
* A few cleanups and some comments. Nothing major
* Use keystone auth environment variables
* Improved "test" parser for python orchestration
* Record events and retrieve them via "heat events_list <stack_name>"
* tweak the templates so the defaults are actually what we want
* Use full distro-arch as name of image registered with glance
* Properly handle templates of invalid format
* Display error message on invalid template URL
* Display message on heat-api and heat-engine startup
* Removed the *.log from the .gitignore so I can add the dummy files
* Removing some of the cargo cult copy paste shrapnel
* Adding rpm packaging for heat packages
* teach jeos_create about the debug option
* Improve the error checking in jeos_create
* Updating template example github link
* Minor text edits
* Directives to not use variable names that conflict with pdb
* Fix a module import failure
* Fix README bullets
* Fix README headings
* Update the README
* Start separating the api and the implementation
* fix delete params (was treated as body)
* Update readme with correct "raw" url for template
* Remove erroneous setup operation
* Install config files properly
* Rename the etc/ files to what they need to be
* Pretty up the README
* Add etc to the manifest
* Add a jeos create operation using oz
* Updated README with install directions
* Add MANIFEST.in and add a oz tdl for a F16 jeos
* Sync cfg from openstack-common
* Remove a bunch of unused util code
* Add a cape event listener
* Catch errors better when creating the stack
* Remerge common code with glance
* Add config cp to README doc
* Don't crash if there is no "AWS::CloudFormation::Init" section
* Move the default port number into common.config
* Change the default port references to DEFAULT_PORT
* Fix missing paren
* Add a call to start cape process
* Hook up the update and delete (not quite working)
* Add a very rough-and-ready conversion from json to xml for cape
* Add support for getting the template via url else we get RequestUriTooLong
* Add missing RequestUriTooLong exception
* Fix the systemd service section in the template
* Add a disto mapping to get the image name
* Simplify the template more
* Add a simple single instance wordpress template
* Remove openstack copy right assignment as we have not done that yet
* Add a simple in-memory "db" so we can create/list stacks
* Add setup.py and friends
* Add simple readme
* Fix Parameters
* Initial commit (basics copied from glance)
