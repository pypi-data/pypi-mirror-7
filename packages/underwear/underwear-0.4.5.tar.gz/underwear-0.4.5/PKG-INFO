Metadata-Version: 1.1
Name: underwear
Version: 0.4.5
Summary: Dead simple LAMP-stack deployments for Python-powered web applications
Home-page: https://github.com/makaimc/underwear
Author: Matt Makai
Author-email: matthew.makai@gmail.com
License: MIT
Description: ===============================
        Underwear
        ===============================
        
        .. image:: https://badge.fury.io/py/underwear.png
            :target: http://badge.fury.io/py/underwear
            
        .. image:: https://travis-ci.org/makaimc/underwear.png?branch=master
                :target: https://travis-ci.org/makaimc/underwear
        
        
        Underwear is a library for easily deploying any Python-powered web 
        application to one or more Linux servers. Underwear is configurable by
        a YAML template and takes care of installing packages, configuring web/WSGI
        servers, and securing the server.
        
        
        What Problem Does Underwear Solve?
        ----------------------------------
        Despite the advent of configuration management tools such as 
        `Puppet <http://puppetlabs.com/puppet/what-is-puppet>`_,
        `Chef <http://www.getchef.com/chef/>`_, 
        `Ansible <http://www.ansibleworks.com/>`_, and 
        `Salt <http://www.saltstack.com/community/>`_, it remains difficult to deploy
        a web application because you have to first learn one of those tools and
        then write scripts in the tool's domain-specific language.
        
        Underwear makes deploying to a traditional Linux server stack as easy as 
        deploying to Heroku by providing a pre-packaged, easily configurable library. 
        Deployments can be executed simply by installing Underwear with 
        `pip <http://www.pip-installer.org/en/latest/index.html>`_, specifying the
        IP addresses of the server(s) to deploy to, then running a couple of commands.
        
        
        Quick Start
        -----------
        After these ten steps your app should be completely configured, 
        secured, and deployed to remote servers. 
        
        *These instructions will be simplied in future releases as the library
        is further developed*.
        
        1. Install Underwear to your 
           `virtualenv <https://pypi.python.org/pypi/virtualenv>`_:: 
        
             pip install underwear
        
        2. Add 'underwear' to INSTALLED_APPS in your Django
           project. *Underwear currently only supports Django (Flask and Bottle 
           will be added in the 0.5 release).* 
        
        3. Create a deploy directory under your Django project::
        
             mkdir deploy; cd deploy
        
        
        4. Download the Fabric file for uploading SSH keys, YAML configuration 
           template, and hosts file to your project under the deploy/ directory::
        
             wget https://raw.github.com/makaimc/underwear/master/underwear/deploy/fabfile.py
             wget https://raw.github.com/makaimc/underwear/master/underwear/deploy/underwear.yml
             wget https://raw.github.com/makaimc/underwear/master/underwear/deploy/hosts
        
        5. Fill in blank variables fields in **fabfile.py**.
        
        6. Execute the Fabric script (the script will prompt you for the non-root 
           password)::
            
             fab bootstrap_ansible
        
        7. Fill in blank fields and modify desired settings in the **underwear.yml**
           file so that Underwear knows where to install your web application.
        
        8. Fill in the **hosts** file with your servers' IP addresses. For example,
           the file may look like the following::
            
            [webservers]
            192.168.1.1
        
            [dbservers]
            192.168.1.2
        
        8. Deploy your application::
        
            python manage.py deploy
        
        9. Underwear will output each step in the deployment process to standard
           output as it happens.
        
        10. Access your application from the domain name you provided in the 
            underwear.yml file.
        
        
        License and Documentation
        -------------------------
        Underwear is free software under the MIT license. 
        
        Additional Underwear documentation can be found on 
        `Read the Docs <http://underwear.rtfd.org>`_.
        
        
        About the Name "Underwear"
        --------------------------
        This library goes underneath your WSGI application to help you quickly deploy
        it to traditional servers. Otherwise no one knows you're using it, and you
        can swap it out at any time for another deployment process when you outgrow
        the standard LAMP-stack setup.
        
        There also weren't any projects on GitHub by the name of underwear that had
        more than two stars and "underwear" was an open library name on PyPi :)
        
        
        Features
        --------
        * Automated WSGI application deployments to a web & database server
        * Configurable via a simple YAML template
        * Support for ad hoc deployment needs without SSH-ing into remote servers
        
        
        
        
        
        
        History
        -------
        
        0.4.5 (2014-06-17)
        ++++++++++++++++++
        * Updated to work with the latest Ansible release under the covers (1.6.3).
        * Fixed a bug with evaluating conditional for postgresql backend.
        * Fixed issue where fail2ban wouldn't be found on a system because the apt
          cache was not updated.
        
        0.4.4 (2014-01-05)
        ++++++++++++++++++
        * Changing Django management command defaults to deploy directory within the
          project instead of your ~/.ssh key directory.
        * New option in underwear.yml to deploy to MySQL or PostgreSQL.
        
        
        0.4.3 (2014-01-02)
        ++++++++++++++++++
        * Adding toggle for whether South should be used with a Django project 
          (django_use_south) and a toggle for whether a fixtures file should be
          loaded (django_fixtures_file).
        
        
        0.4.2 (2013-12-30)
        ++++++++++++++++++
        * Added toggle to flip whether or not SSL should be used with Nginx 
          (deploy_ssl).
        
        
        0.4.0 (2013-12-26)
        ++++++++++++++++++
        * Release now allows for 2 server web app deployments (one web server and
          one database server).
        * Fixes issues with Supervisor template and Django environment variables.
        * Includes templates required to tell the library where to deploy the 
          application.
        
        
        0.3.0 (2013-12-24)
        ++++++++++++++++++
        * First release on PyPI.
        
        
        0.2.0 (2013-12-16)
        ++++++++++++++++++
        * Added initial working Ansible scripts for deployment.
        
        
        0.1.0 (2013-12-16)
        ++++++++++++++++++
        * Initial codebase with Python package
        
Keywords: underwear,deployment,django,LAMP,WSGI,ansible
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
