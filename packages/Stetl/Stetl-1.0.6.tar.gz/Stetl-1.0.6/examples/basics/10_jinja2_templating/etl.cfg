# Examples with Jinja2 templating.
# The input data is in input/cities.json.
# The template files are under templates.
# Several examples extending into more advanced:
# - xml: templates/cities.jinja2 simple with just for loop
# - gml: templates/gmlcities.jinja2 advanced with globals and macros
#
# All rendered output under output/
#
[etl]
chains = input_json|filter_template_xml|output_xml_file
         ,input_json|filter_template_gml|output_gml_file
#         ,input_json|filter_template_gml|output_std

[input_json]
class = inputs.fileinput.JsonFileInput
file_path = input/cities.json

# Simple xml templating
[filter_template_xml]
class = filters.templatingfilter.Jinja2TemplatingFilter
template_file = templates/cities.jinja2

[output_xml_file]
class = outputs.fileoutput.FileOutput
file_path = output/cities.xml

# Advanced gml templating with globals for more or less static content
# like contact info etc
[filter_template_gml]
class = filters.templatingfilter.Jinja2TemplatingFilter
template_file = templates/gmlcities.jinja2
template_globals_path = templates/globals.json

[output_gml_file]
class = outputs.fileoutput.FileOutput
file_path = output/gmlcities.xml

# for testing/debugging only
[output_std]
class = outputs.standardoutput.StandardOutput
