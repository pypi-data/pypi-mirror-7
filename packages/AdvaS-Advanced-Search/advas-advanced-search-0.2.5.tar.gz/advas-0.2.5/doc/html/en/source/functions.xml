<chapter>About AdvaS</chapter>
<headline>Project Name And Goal</headline>

AdvaS is the abbreviation for Advanced Search. It is designed to be used
as an additional python module. This module provides various algorithms
for retrieving information from text documents. The algorithms are
available as Python classes, and according methods. AdvaS can be used in Information Retrieval (IR), Data Mining (DM) and Applied Linguistics (AL). AdvaS may be used as

<ul>
	<li>as a back-end of a search engine or a Content Management System (CMS),</li>
	<li>for database lookup and optimization,</li>
	<li>as a part of a spell-checker, and</li>
	<li>to determine the similarity of text sets</li>
</ul>

<headline>Project License And Copyright</headline>

AdvaS programming and testing: <a href="mailto:fh@efho.de">Frank Hofmann</a><br>
<br>
Implementation of the soundex algorithm was done by Nathan Heagy, later improved by myself.<br>
<br>
The Caverphone Algorithm was developed by David Hood and is part of the <a href="http://caversham.otago.ac.nz">Caversham Project of the the University of Otago, New Zealand</a>.<br>
<br>
AdvaS is licensed under the GNU Public License (GPL) which is enclosed to this software package.<br>

<headline>Contact</headline>

For more information, check out the <a
href="http://sourceforge.net/projects/advas">AdvaS homepage</a>, or feel
free to contact <a href="mailto:fh@efho.de">me</a> via e-mail. 

<headline>Intended Audience</headline>

AdvaS can be useful for all the people planning, evaluating and
implementing search engines or related projects. For students of
computer science, this module can be used as a reference to get an
overview which methods and algorithms in this topic already exist, and
how do these methods work.

<chapter>Installation Guide</chapter>
<headline>Download AdvaS</headline>

AdvaS is can be retrieved from the <a
href="http://sourceforge.net/projects/advas">AdvaS homepage</a> on
SourceForge. The module is available as a <tt>tar.gz</tt> archive,
currently.

<headline>Requirements</headline>

AdvaS should run on any more recent i386-compatible machine using GNU/Linux, UNIX or FreeBSD. Specific changes for other OS are to be done. Advas is written in the programming language python (<a href="http://www.python.org">http://www.python.org</a>) and requires both the python 2.0+ libraries and the interpreter to be installed.<br>
<br>
Currently, AdvaS needs about 4Mbyte of disc space including documentation and examples.<br>

<headline>Installation And Adjustments</headline>

Advas is designed be used as an additional python module.<br>
<br>
<ul>
<li>Download the latest version and copy the tar.gz archive in a directory of your choice. </li>

<li>Unzip and untar the tar.gz archive using<br>
<br>
	<tt>tar -xzf advas-0.2.5.tar.gz</tt><br>
<br>
	As a result, a new directory will be created ("advas-0.2.5"). This directory contains the AdvaS library as well as this documentation.</li>

<li>That's all - now AdvaS is ready to work :-) </li>
</ul>

<chapter>Usage Of AdvaS</chapter>
<headline>Including The AdvaS Module</headline>

In contrast to the AdvaS versions released before, the module follows
the object-oriented concept, and comes as class. You can include the
AdvaS class by writing the following code:<br>
<br>
	<tt>
		# import advas class<br>
		from advas import Advas<br>
	</tt>
<br>
Based on that you initialize the according AdvaS object:<br>
<br>
	<tt>
		text = Advas(["a line of text"], "utf-8")
	</tt>
<br><br>
The first parameter is a list of text lines, and represents the text to
be processed. The second parameter is the character encoding to be used.
After the instantiation of the base object the methods from the AdvaS
class can be used. The inclusion of the other classes from the AdvaS
package works in the same way using the according class name.

<chapter>Class AdvancedSearch</chapter>
<headline>__init__</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b> __init__ (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Run automatically right after a new object of the class
<tt>AdvancedSearch</tt> was created.<br>
<br>
This method does not have any parameters, and return value.

<headline>addEntry</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b> addEntry (self, entry)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
The document entry <tt>entry</tt> is added to the document data
base. This entry is associated with a new document id.<br>

<br>
<table width="100%" cols="3">
<tr valign="top" >
<td width="10%">In:</td>
<td width="20%">entry</td>
<td width="70%">document entry, object of class <tt>Entry</tt><br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">the associated document id as an integral value</td>
</tr>
</table>

<headline>advancedSearch</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b> advancedSearch (self, pattern)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Performs an advanced search on the data basis &mdash; the previously
registered documents. The following methods are in use: term frequency
(tf), ngrams (digrams and trigrams), phonetic codes, and a comparison on
document descriptors (binary comparison, fuzzy comparison, and KNN). All
the named methods are weighted equally.<br>

<br>
<table width="100%" cols="3">
<tr valign="top" >
<td width="10%">In:</td>
<td width="20%">pattern</td>
<td width="70%">a pattern as a document entry, based on class
<tt>Entry</tt><br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">list</td>
<td width="70%">search result for every registered document. Comes as a
list with the following values:
	<ul>
	<li>degree of match as a float value</li>
	<li>number of exact matches as an integral value</li>
	<li>document id for the entry as an integral value</li>
	</ul>
</td>
</tr>
</table>

<headline>calculateRetrievalStatusValue</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b> calculateRetrievalStatusValue (self, d, p, q)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.0.4 as funcrion <tt>calc_rsv</tt>, and renamed in advas-0.2.5.<br>
<br>
Calculates the document weight for descriptors including their
probability of existance. The method expects a list of pairs with 0 and
1, or as float values, accordingly. <br>
<br>
<table width="100%" cols="3">
<tr valign="top" >
<td width="10%">In:</td>
<td width="20%">d</td>
<td width="70%">list of values displaying the existance (1) or non-existance (0) of a descriptor</td>
</tr>
<tr valign="top" >
<td width="10%">&nbsp;</td>
<td width="20%">p</td>
<td width="70%">list of probabilities of existance for the given
descriptor <i>d</i></td>
</tr>
<tr valign="top" >
<td width="10%">&nbsp;</td>
<td width="20%">q</td>
<td width="70%">list of probabilities of non-existance for the given
descriptor <i>d</i></td>
</tr>
<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">Retrieval Status Value (rsv) as a float value. The
higher the rsv, the more relevant is the document in terms of the given
descriptor <i>d</i>, and their probabilities <i>p</i> and <i>q</i>. A
value of 0 means that the document is non-relevant. In case the given
lists differ in the number of elements, the return value is 0, too,
because the rsv cannot be calculated properly.</td>
</tr>
</table>

<headline>clearEntryList</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b> clearEntryList (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Clears the list of registered documents.<br>
<br>
This method does not have any parameters, and return value. 

<headline>compareDescriptors</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b> compareDescriptors (self, request, document)</b></font>
</td>
</tr>
</table>

<br>
Added to advas.0.0.4, renamed and extended in advas-0.2.5<br>
<br>
Compares two document descriptors (request and document), and returns its degree of equality.<br>
<br>

<br>
<table width="100%" cols="3">
<tr valign="top" >
<td width="10%">In:</td>
<td width="20%">request</td>
<td width="70%">search request; object of class <tt>Descriptor</tt></td>
</tr>
<tr valign="top" >
<td width="10%">&nbsp;</td>
<td width="20%">document</td>
<td width="70%">document request; object of class <tt>Descriptor</tt><br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">dictionary</td>
<td width="70%">a dictionary with the following elements:
	<ul>
		<li><i>binary</i>: result of the binary descriptor comparison</li>
		<li><i>fuzzy</i>: result of the fuzzy-based descriptor comparison</li>
		<li><i>knn</i>: result of the knn-based descriptor comparison</li>
	</ul>
</td>
</tr>
</table>

<headline>compareDescriptorsBinary</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b> compareDescriptorsBinary (self, request, document)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Compares two document descriptors (request and document), and returns its degree of equality.<br>
<br>

<br>
<table width="100%" cols="3">
<tr valign="top" >
<td width="10%">In:</td>
<td width="20%">request</td>
<td width="70%">search request; object of class <tt>Descriptor</tt></td>
</tr>
<tr valign="top" >
<td width="10%">&nbsp;</td>
<td width="20%">document</td>
<td width="70%">document request; object of class <tt>Descriptor</tt><br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%"></td>
<td width="70%">result of the binary comparison as an integer value. 1, if the descriptors are completely similar, otherwise 0.</td>
</tr>
</table>

<headline>compareDescriptorsFuzzy</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b> compareDescriptorsFuzzy (self, request, document)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Compares two document descriptors (request and document), and returns its degree of equality.<br>
<br>

<br>
<table width="100%" cols="3">
<tr valign="top" >
<td width="10%">In:</td>
<td width="20%">request</td>
<td width="70%">search request; object of class <tt>Descriptor<tt></td>
</tr>
<tr valign="top" >
<td width="10%">&nbsp;</td>
<td width="20%">document</td>
<td width="70%">document request; object of class <tt>Descriptor</tt><br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%"></td>
<td width="70%">result of the fuzzy comparison as a float value between 0 and 1. The higher the similarity of the descriptors, the higher the return value.</td>
</tr>
</table>

<headline>compareDescriptorsKNN</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b> compareDescriptorsKNN (self, request, document)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.1.0 as function <tt>kNN</tt>, adjusted for 0.2.5<br>
<br>
Compares two document descriptors (request and document), and returns its degree of equality.<br>
<br>

<br>
<table width="100%" cols="3">
<tr valign="top" >
<td width="10%">In:</td>
<td width="20%">request</td>
<td width="70%">search request; object of class <tt>Descriptor</tt></td>
</tr>
<tr valign="top" >
<td width="10%">&nbsp;</td>
<td width="20%">document</td>
<td width="70%">document request; object of class <tt>Descriptor</tt><br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%"></td>
<td width="70%">result of the knn comparison as a float value between 0 and 1. The higher the similarity of the descriptors, the higher the return value.</td>
</tr>
</table>

<headline>comparePhoneticCode</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b> comparePhoneticCode (self, entry1, entry2)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Compares the given entries of phonetic codes, and returns the number of similarities.<br>
<br>

<br>
<table width="100%" cols="3">
<tr valign="top" >
<td width="10%">In:</td>
<td width="20%">entry1</td>
<td width="70%">a dictionary with phonetic codes</td>
</tr>
<tr valign="top" >
<td width="10%">&nbsp;</td>
<td width="20%">entry2</td>
<td width="70%">a dictionary with phonetic codes<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%"></td>
<td width="70%">number of similar phonetic codes as an integer value</td>
</tr>
</table>

<headline>comparePhoneticCodeLists</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b> comparePhoneticCodeLists (self, query, document)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Compares the two entries for both the search query (<i>query</i>) and
the document (<i>document</i>) with the help of phonetic codes, and
returns the number of matches.<br>
<br>

<br>
<table width="100%" cols="3">
<tr valign="top" >
<td width="10%">In:</td>
<td width="20%">query</td>
<td width="70%">search request; <tt>Descriptor</tt> class object</td>
</tr>
<tr valign="top" >
<td width="10%">&nbsp;</td>
<td width="20%">document</td>
<td width="70%">document request; <tt>Descriptor</tt> class object<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%"></td>
<td width="70%">number of matches as an integer value</td>
</tr>
</table>

<headline>countEntryList</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b> countEntryList (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Counts the number of the registered documents in the search object.<br>

<br>
<table width="100%" cols="3">
<tr valign="top" >
<td width="10%">In:</td>
<td width="20%">&nbsp;</td>
<td width="70%"><br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">the number of documents as an integer value</td>
</tr>
</table>

<headline>extendStopList</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b> extendStopList (self, itemList)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Extends the current stop list with further stop words from <i>itemList</i>. Identical entries are consolidated.<br>

<br>
<table width="100%" cols="3">
<tr valign="top" >
<td width="10%">In:</td>
<td width="20%">itemList</td>
<td width="70%">a list with further stop words<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;<br></td>
</tr>
</table>

<headline>fullTextSearch</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b> fullTextSearch (self, pattern)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Does a full text search on the registered documents using the given
pattern.<br>.

<br>
<table width="100%" cols="3">
<tr valign="top" >
<td width="10%">In:</td>
<td width="20%">pattern</td>
<td width="70%">search pattern; <tt>Descriptor</tt> class object<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">list</td>
<td width="70%">a list of search results for every registered document.
Each list entry consists of the following values:
	<ul>
	<li>the degree of similarity as a float value</li>
	<li>the number of exact matches as an integral value</li>
	<li>the document id of the entry as an integral value</li>
	</ul>
</tr>
</table>

<headline>getEmptyId</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b> getEmptyId (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Finds an unused document id to register a new document for the document
database.<br>

<br>
<table width="100%" cols="3">
<tr valign="top" >
<td width="10%">In:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">a new document id as an integral value</td>
</tr>
</table>


<headline>getEntryList</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b> getEntryList (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Returns a list of registered documents.<br>
<br>

<br>
<table width="100%" cols="3">
<tr valign="top" >
<td width="10%">In:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">a list representing the registered document. Every list
entry is a dictionary that consists of the following entries: 
	<ul>
		<li><i>keywords</i>: list if keywords; <tt>Descriptor</tt> object</li>
		<li><i>text</i>: the content of the document as a list with one
single line per list entry</li>
		<li><i>entryId</i>: the document id as an intgegral value</li>
		<li><i>classification</i>: the document classification as <tt>Classification</tt> object</li>
		<li><i>encoding</i>: the encoding of the document</li>
	</ul>
</td>
</tr>
</table>

<headline>getSearchStrategy</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b> getSearchStrategy (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Returns the current search strategy.<br>
<br>

<br>
<table width="100%" cols="3">
<tr valign="top" >
<td width="10%">In:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%"><i>dictionary</i></td>
<td width="70%">a dictionary with two entries named
<i>fulltextsearch</i> and <i>advancedsearch</i>. The values reflect the
weighting of the according search strategy.</td>
</tr>
</table>

<headline>getSortOrder</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b> getSortOrder (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Returns the current sort order.<br>
<br>

<br>
<table width="100%" cols="3">
<tr valign="top" >
<td width="10%">In:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%"><i>True</i> in case of descending order, otherwise
<i>False</i>.</td>
</tr>
</table>

<headline>getStopList</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b> getStopList (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Returns the current list of stop words.<br>

<br>
<table width="100%" cols="3">
<tr valign="top" >
<td width="10%">In:</td>
<td width="20%">&nbsp;</td>
<td width="70%"><br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">list</td>
<td width="70%">a list with stop words<br></td>
</tr>
</table>

<headline>idf</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b> idf (self, wordList)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.0.1, expanded in advas-0.2.5<br>
<br>
Based on the given word list, this method calculates the Inverse
Document Frequency (idf) for all registered documents.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">wordList</td>
<td width="70%">word list as a dictionary. The keys of the dictionary
are used as the term the idf is calculated for.<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">a dictionary with the term as the key, and the idf as
the corresponding value that was calculated.</td>
</tr>
</table>

<headline>isInEntryList</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b> isInEntryList (self, entryId)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Verifies the list of the registered documents for the given document
id.<br>
<br>

<br>
<table width="100%" cols="3">
<tr valign="top" >
<td width="10%">In:</td>
<td width="20%">entryId</td>
<td width="70%">the document id as an integral value<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%"><i>True</i> if a document with this id registered,
otherwise <i>False</i>.</td>
</tr>
</table>

<headline>mergeLists</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b> mergeLists (self, *lists)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.0.1, expanded in advas-0.2.5<br>
<br>
<br>
Unites the given word lists to calculate the Term Frequency. A word list
is a dictionary with the term as the key, and the term frequency as the
corresponding value. You may create such a word list using the method
<tt>countWords</tt>. As a parameter, you may send as many word lists as
needed.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">dictionary</td>
<td width="70%">a word list as described above. <br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">dictionary</td>
<td width="70%">a single word list that combines the given terms, and
its term frequency.</tt>
</td>
</tr>
</table>

<headline>mergeListsIdf</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b> mergeListsIdf (self, *lists)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.0.1, expanded in advas-0.2.5<br>
<br>
<br>
Unites the given word lists to calculate the Inverse Document Frequency
(idf). A word list is a dictionary with the term as the key, and the
term frequency as the corresponding value. You may create such a word
list using the method <tt>countWords</tt>. As a parameter, you may send
as many word lists as needed.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">dictionary</td>
<td width="70%">a word list as described above. <br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">dictionary</td>
<td width="70%">a single word list that combines the given terms, and
its inverse document frequency.</tt>
</td>
</tr>
</table>

<headline>reduceStopList</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b> reduceStopList (self, itemList)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Removes the given terms from list of the stop words .<br>

<br>
<table width="100%" cols="3">
<tr valign="top" >
<td width="10%">In:</td>
<td width="20%">itemList</td>
<td width="70%">a list with stop words.<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;<br></td>
</tr>
</table>
<br>
This method does not have a return value.

<headline>removeEntry</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b> removeEntry (self, entryId)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Removes the document with the given document id (<i>entryId</i>) from
the list of registered documents if the document is part of the
list.<br>

<br>
<table width="100%" cols="3">
<tr valign="top" >
<td width="10%">In:</td>
<td width="20%">entryId</td>
<td width="70%">the document id as an integral value.<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;</td>
</tr>
</table>

<headline>reverseSortOrder</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b> reverseSortOrder (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Changes the sort order from descending to ascending, or conversly.<br>
<br>
This method has no parameters, and no return value.<br>

<headline>search</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b> search (self, pattern)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Combines full text search, and advanced search.<br>
<br>

<br>
<table width="100%" cols="3">
<tr valign="top" >
<td width="10%">In:</td>
<td width="20%">pattern</td>
<td width="70%">search request; <tt>Descriptor<tt> class object<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">dictionary</td>
<td width="70%">list with the search result for every registered
Comes as a list with the following values:
	<ul>
	<li>degree of match as a float value</li>
	<li>number of exact matches as an integral value</li>
	<li>document id for the entry as an integral value</li>
	</ul>

</td>
</tr>
</table>

<headline>searchByPhoneticCode</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b> searchByPhoneticCode (self, query)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Finds all the documents that are phonetically similar to the given
search request.<br>

<br>
<table width="100%" cols="3">
<tr valign="top" >
<td width="10%">In:</td>
<td width="20%">pattern</td>
<td width="70%">search request; <tt>Descriptor</tt> class object<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">dictionary</td>
<td width="70%">list of matches. The keys of the list are the document
ids, and the value represents the number of matches in the according
document.</td>
</tr>
</table>

<headline>setSearchStrategy</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b> setSearchStrategy (self, fullTextWeight, advancedWeight)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Sets the weighting for the search result. You can influence the
weighting for both the full-text search, and the advanced search.<br>
<br>

<br>
<table width="100%" cols="3">
<tr valign="top" >
<td width="10%">In:</td>
<td width="20%">fullTextWeight</td>
<td width="70%">weighting for the full-text search; float value between
0 and 1</td>
</tr>
<tr valign="top" >
<td width="10%">&nbsp;</td>
<td width="20%">advancedWeight</td>
<td width="70%">weighting for the advanced search; float value between 0
and 1<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;</td>
</tr>
</table>

<headline>setSortOrderAscending</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b> setSortOrderAscending (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Changes the sort order to ascending.<br>
<br>
This method does not expect any parameters, and has no return value.<br>

<headline>setSortOrderDescending</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b> setSortOrderDescending (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Changes the sort order to descending.<br>
<br>
This method does not expect any parameters, and has no return value.<br>

<headline>setStopList</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b> setStopList (self, stopList)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Substitutes the existing stop list by the list containing new
values.<br>
<br>

<br>
<table width="100%" cols="3">
<tr valign="top" >
<td width="10%">In:</td>
<td width="20%">stopList</td>
<td width="70%">new list with stop words<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;</td>
</tr>
</table>

<headline>sortEntryList</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b> sortEntryList (self, entryList)</b></font>
</td>
</tr>
</table>

<br>
Originally started as function <tt>rank</tt> in advas-0.1.3, it became
this method in advas-0.2.5.<br>
<br>
Sorts the given document list according to the sort settings.<br>
<br>

<br>
<table width="100%" cols="3">
<tr valign="top" >
<td width="10%">In:</td>
<td width="20%">entryList</td>
<td width="70%">a list of documents. Each list entry consists of three
items &mdash; the document weight, the number of matches, and the
document id.<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">sorted list of documents</td>
</tr>
</table>

<headline>tf</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>tf (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.0.1, expanded for advas-0.2.5<br>
<br>
Calculates the frequency a single term occurs in a text document. The
calculation is based on the registered documents.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">dictionary</td>
<td width="70%">a list of pairs whereas the key represents the term, and
the value displays the number of occurrances.</td>
</tr>
</table>

<headline>tfStop</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>tfStop (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.0.3, expanded for advas-0.2.5<br>
<br>
Calculates the frequency a single term occurs in a text document with
respect to the current stop list. The calculation is based on the
registered documents.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">dictionary</td>
<td width="70%">a list of pairs whereas the key represents the term, and
the value displays the number of occurrances.</td>
</tr>
</table>

<chapter>Class Advas</chapter>
<headline>__init__</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b> __init__ (self, text, encoding)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Run automatically right after a new object of the class
<tt>AdvancedSearch</tt> was created.<br>
<br>

<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">text</td>
<td width="70%">a list strings containing the document text</td>
</tr>
<tr valign="top">
<td width="10%">&nbsp;</td>
<td width="20%">encoding</td>
<td width="70%">the encoding of the strings<br><br></td>
</tr>

<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;</td>
</tr>
</table>

<headline>caverphone</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>caverphone (self, term)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.2, adjusted in advas-0.2.5<br>
<br>
Based on the Caverphone algorithm, this method calculates the according
phonetic code for the transmitted text string.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">term</td>
<td width="70%">text string<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">Caverphone code for <tt>term</tt> </td>
</tr>
</table>

<p>For more information about Caverphone see the according <a
href="http://en.wikipedia.org/wiki/Caverphone">Wikipedia
article</a>.</p>

<headline>compareNgramLists</headline>

<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>compareNgramLists (self, list1, list2)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Compares two lists of ngrams, and returns its level of similarity.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">list1, list2</td>
<td width="70%">list of ngrams<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">level of similarity as a float value between 0 and 1</td>
</tr>
</table>

<headline>getEncoding</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>getEncoding (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Returns the value for the current encoding that is used for the
document.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">the encoding as a text string</td>
</tr>
</table>

<headline>getNgramsByWord</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>getNgramsByWord (self, word, ngramSize)</b></font>
</td>
</tr>
</table>

<br>
Originally named <tt>comp_ngrams</tt>, and separated in advas-0.2.5<br>
<br>
Calculates the ngrams for the given term.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">word</td>
<td width="70%">term, for which the ngrams are calculated</td>
</tr>
<tr valign="top">
<td width="10%">&nbsp;</td>
<td width="20%">ngramSize</td>
<td width="70%">sets the length of the ngrams &mdash; the number of
characters<br><br></td>
</tr>

<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">the list of ngrams. If <tt>ngramSize</tt> is 0, the
return value is an empty list.</td>
</tr>
</table>

<p>
For more information about ngrams, see the according <a
href="http://en.wikipedia.org/wiki/Ngram">article on Wikipedia</a>.
</p>

<headline>getNgramsByLine</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>getNgramsByLine (self, ngramSize)</b></font>
</td>
</tr>
</table>

<br>
Originally named <tt>comp_ngrams</tt>, and separated in advas-0.2.5<br>
<br>
Calculates the ngrams line by line. The basis is the <tt>Advas</tt>
object.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">word</td>
<td width="70%">term, for which the ngrams are calculated</td>
</tr>
<tr valign="top">
<td width="10%">&nbsp;</td>
<td width="20%">ngramSize</td>
<td width="70%">sets the length of the ngrams &mdash; the number of
characters<br><br></td>
</tr>

<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">the list of ngrams. If <tt>ngramSize</tt> is 0, the
return value is an empty list.</td>
</tr>
</table>

<p>
For more information about ngrams, see the according <a
href="http://en.wikipedia.org/wiki/Ngram">article on Wikipedia</a>.
</p>

<headline>getNgramsByParagraph</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>getNgramsByParagraph (self, ngramSize)</b></font>
</td>
</tr>
</table>

<br>
Originally named <tt>comp_ngrams</tt>, and separated in advas-0.2.5<br>
<br>
Calculates the ngrams for a whole paragraph. The basis is the <tt>Advas</tt>
object.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">word</td>
<td width="70%">term, for which the ngrams are calculated</td>
</tr>
<tr valign="top">
<td width="10%">&nbsp;</td>
<td width="20%">ngramSize</td>
<td width="70%">sets the length of the ngrams &mdash; the number of
characters<br><br></td>
</tr>

<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">the list of ngrams. If <tt>ngramSize</tt> is 0, the
return value is an empty list.</td>
</tr>
</table>

<p>
For more information about ngrams, see the according <a
href="http://en.wikipedia.org/wiki/Ngram">article on Wikipedia</a>.
</p>

<headline>getSynonyms</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>getSynonyms(self, filename, encoding)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.1.7 as function <tt>synonym_of</tt>, renamed in advas-0.2.5<br>
<br>
Calculates the synonym for the term that is saved in the <tt>Advas</tt>
object. This method works with <a
href="http://www.openthesaurus.de/">OpenThesaurus</a> (plain text version). It requires an OpenThesaurus release later than 2003-10-23, and the lines to be sorted in alphabetical order.<br>

<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">filename</td>
<td width="70%">OpenThesaurus database with the saved synonyms</td>
</tr>
<tr valign="top">
<td width="10%">&nbsp;</td>
<td width="20%">encoding</td>
<td width="70%">encoding of <tt>filename</tt><br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">a list with the synonyms</td>
</tr>
</table>

<headline>getText</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>getText (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Returns the text that is saved in an <tt>Advas</tt> object.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;</td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">the text as a string value</td>
</tr>
</table>

<headline>isComment</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>isComment (self, line)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.1.7, expanded and adjusted in advas-0.2.5<br>
<br>
Verifies the given <tt>line</tt> for being a UNIX style comment starting
with a cross (<tt>#</tt>).<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">line</td>
<td width="70%">line of text that will be validated<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%"><i>True</i> in case of a comment, otherwise
<i>False</i>.</td>
</tr>
</table>

<headline>isLanguage</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>isLanguage (self, keywordList)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.0.6, substituted by <tt>isLanguageByKeywords</tt>, and
adjusted in advas-0.2.5<br>
<br>
Does a language detection on the basis of key words.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">keywordList</td>
<td width="70%">a list of key words<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">a float value between 0 and 1. The value shows the
degree of similarity that the given document or text is written in
language represented by key words. The higher the value, it is more
likely that the text is written in the expected language. In case the
list of key words is empty the return value is 0.
</td>
</tr>
</table>

<headline>isLanguageByKeywords</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>isLanguageByKeywords (self, keywordList)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.1.6, substitutes the former function
<tt>isLanguage</tt>, and was adjusted in advas-0.2.5<br>
<br>
Does a language detection on the basis of key words.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">keywordList</td>
<td width="70%">a list of key words<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">a float value between 0 and 1. The value shows the
degree of similarity that the given document or text is written in
language represented by key words. The higher the value, it is more
likely that the text is written in the expected language. In case the
list of key words is empty the return value is 0.
</td>
</tr>
</table>

<headline>isSynonymOf</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>isSynonymOf (self, term, filename, encoding)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.1.7, angepa&szlig;t in advas-0.2.5<br>
<br>
Compares to terms for being synonym to each other. Synonyms are terms
with the same meaning.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">term</td>
<td width="70%">text that will be compared with the saved term</td>
</tr>
<tr valign="top">
<td width="10%">&nbsp;</td>
<td width="20%">filename</td>
<td width="70%">name of the synonym database</td>
</tr>
<tr valign="top">
<td width="10%">&nbsp;</td>
<td width="20%">encoding</td>
<td width="70%">encoding of the term<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%"><i>True</i> in case both terms are synonym to each
other, otherwise <i>False</i>.</td>
</tr>
</table>

<headline>kmpSearch</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>kmpSearch (self, text, pattern)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.1.5, and adjusted in advas-0.2.5<br>
<br>
Uses the algorithm from Knuth, Morris and Pratt to locate the given pattern in the text.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">text</td>
<td width="70%">text to be used for searching</td>
</tr>
<tr valign="top">
<td width="10%">&nbsp;</td>
<td width="20%">pattern</td>
<td width="70%">text to be looked up in the <tt>text</tt><br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">a list of positions the pattern starts in the text</td>
</tr>
</table>

<headline>metaphone</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>metaphone (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas.0.0.5, adjusted in advas-0.2.5<br>
<br>
Calculates the Metaphone code for the saved text.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%"></td>
<td width="70%"></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">Metaphone code as a text string.</td>
</tr>
</table>

<headline>nysiis</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>nysiis (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.1.9, adjusted in advas-0.2.5<br>
<br>
A method to derive a phonetic code from the saved text. This method uses
the New York State Identification and Intelligence Algorithm (NYSIIS).<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%"></td>
<td width="70%"></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">a text string with the phonetic code</td>
</tr>
</table>
<br>

<headline>phoneticCode</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>phoneticCode (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.1.9, adjusted for advas-0.2.5<br>
<br>
Returns the phonetic code for the given text. The return value is a list
that contains the representations for <tt>soundex</tt>,
<tt>metaphone</tt>, <tt>NYSIIS</tt>, and <tt>caverphone</tt>.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%"></td>
<td width="70%"></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">a list with entries containing the according phonetic
code:<br>
		<UL>
			<LI><i>soundex</i>: Soundex code</LI>
			<LI><i>metaphone</i>: Metaphone code</LI>
			<LI><i>nysiis</i>: NYSIIS code</LI>
			<LI><i>caverphone</i>: Caverphone code</LI>
		</UL>
</td>
</tr>
</table>

<headline>removeItems</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>removeItems (self, originalList, removeList)</b></font>
</td>
</tr>
</table>

<br>
Added to advas.0.0.1, method name adjusted for advas-0.2.5 <br>
<br>
Removes the given entries from the list of stop words. This method can
be used in conjunction with <tt>tfStop</tt>.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">originalList</td>
<td width="70%">a dictionary with pairs <tt>list[term]=value</tt></td>
</tr>
<tr valign="top">
<td width="10%">&nbsp;</td>
<td width="20%">removeList</td>
<td width="70%">a dictionary with pairs <tt>list[term]=value</tt>. This
list contains the entries to be removed </td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">a dictionary with the remaining entries </td>
</tr>
</table>

<headline>setText</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>setText (self, text)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
sets the text for the <tt>AdvaS</tt> object.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">text</td>
<td width="70%">the document content as a text string<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;</td>
</tr>
</table>

<br>This method does not have a return value.

<headline>setEncoding</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>setEncoding (self, encoding)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
sets the encoding value for the text string.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">encoding</td>
<td width="70%">the encoding as a string value<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%"></td>
</tr>
</table>

<br>This method does not have a return value.

<headline>soundex</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>soundex (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas.0.0.1, adjusted for advas-0.2.5<br>
<br>
Returns the sound equivalent of the text in the <tt>AdvaS</tt> object as
the soundex code.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%"></td>
<td width="70%"><br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">the four-letter soundex code</td>
</tr>
</table>

<headline>splitLine</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>splitLine (self, line)</b></font>
</td>
</tr>
</table>

<br>
Added to advas.0.0.1, method name unified in advas-0.2.5<br>
<br>
Splits the text into single words, and removes punctuation marks.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%"></td>
<td width="70%"><br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">word list without punctation marks</td>
</tr>
</table>

<headline>splitParagraph</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>splitParagraph (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Splits the document text into single lines.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%"></td>
<td width="70%"><br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">the lines of the saved text as a linked list.</td>
</tr>
</table>

<headline>splitText</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>splitText (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Splits the saved text into single lines per paragraph.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%"></td>
<td width="70%"><br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">text lines as a list</td>
</tr>
</table>

<headline>tf</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>tf (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.0.1, expanded in advas-0.2.5<br>
<br>
Calculates the term frequency for the whole text document.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">dictionary</td>
<td width="70%">a list of pairs whereas the element key represents the
term, and the element value the frequency of the term in the text.</td>

</tr>
</table>

<headline>tfStop</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>tfStop (self, stopList)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.0.3, expanded in advas-0.2.5<br>
<br>
Calculates the term frequency for the whole text document with respect
to a stop list &ndash; a list of terms that are not counted.<br>

<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">dictionary</td>
<td width="70%">a list of pairs whereas the element key represents the
term, and the element value the frequency of the term in the text.</td>
</tr>
</table>

<chapter>Class AdvasIo</chapter>
<headline>__init__</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b> __init__ (self, filename, encoding)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Run automatically right after a new object of the class
<tt>AdvasIo</tt> was created. These objects encapsulate input and
output, and represent the filesystem interface.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">filename</td>
<td width="70%">the file name as a string</td>
</tr>
<tr valign="top">
<td width="10%"></td>
<td width="20%">encoding</td>
<td width="70%">the encoding that shall be used to access the
file<br><br></td>
</tr>

<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%"></td>
</tr>
</table>
<br>
This function does not have a return value.

<headline>getEncoding</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>getEncoding (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
This method returns the encoding that is used to access the file
content.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;</td>
</tr>

<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">the encoding as a string</td>
</tr>
</table>
<br>

<headline>getError</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>getError (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Returns the error value for the last I/O operation as boolean if set
before.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;<br><br></td>
</tr>

<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%"><tt>True</tt> in case of an error, otherwise
<tt>False</tt>.</td>
</tr>
</table>

<headline>getFileContents</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>getFileContents (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.1.7, expanded and renamed in advas-0.2.5<br>
<br>
Returns the file content from the internal object buffer. Before that,
the file hast to be both opened and read into the buffer using
<tt>readFileContents</tt>.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;<br><br></td>
</tr>

<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">the file content as a list line-by-line</td>
</tr>
</table>

<headline>getFilename</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>getFilename (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Returns the name of the file that is associated to the <tt>AdvasIo</tt>
object. The file name has to be set via <tt>setFilename</tt> before.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;<br><br></td>
</tr>

<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">name of the file as string</td>
</tr>
</table>

<headline>readFileContents</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>readFileContents (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
This method reads the file content in an internal object buffer. The
file name has to be set via <tt>setFilename</tt>, before.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;<br><br></td>
</tr>

<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%"><tt>True</tt>, in case reading the file succeeded, otherwise <tt>False</tt>. At the same time the error flag is set to <tt>True</tt></td>
</tr>
</table>
<br>
This method does not have any parameters.

<headline>setEncoding</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>setEncoding (self, encoding)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
This method sets the encoding that is used to interpret the file
contents correctly.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">encoding</td>
<td width="70%">encoding as a string<br><br></td>
</tr>

<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;</td>
</tr>
</table>
<br>
This method has no return value.<br>

<headline>setFilename</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>setFilename (self, filename)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
This method sets the file name that will be used.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">filename</td>
<td width="70%">file name as a string<br><br></td>
</tr>

<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;</td>
</tr>
</table>
<br>
This method has no return value.

<chapter>Class Descriptors</chapter>
<headline>__init__</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>__init__ (self, descriptorList)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Run automatically right after a new object of the class
<tt>Descriptors</tt> was created.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">descriptorList</td>
<td width="70%">list of descriptors that shall be associated with the
new object. This list is allowed to be empty.</td>
</tr>

<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;<br><br></td>
</tr>
</table>

<headline>addDescriptor</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>addDescriptor (self, descriptor, value)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Adds a descriptor and the according value to the list of
descriptors.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">descriptor</td>
<td width="70%">name of the descriptor that shall be added</td>
</tr>

<tr valign="top">
<td width="10%">&nbsp;</td>
<td width="20%">value</td>
<td width="70%">the descriptor value<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%"><tt>False</tt> in case the descriptor is already part of
the list, otherwise <tt>True</tt></td>
</tr>
</table>

<headline>countDescriptors</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>countDescriptors (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Counts the number of descriptors in the descriptor list.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;<br><br></td>
</tr>

<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">integral value displaying the number of descriptors</td>
</tr>
</table>

<headline>decreaseDescriptor</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>decreaseDescriptor (self, descriptor, value)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Decreases the value of the named descriptor from the descriptor
list.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">entry</td>
<td width="70%">name of the descriptor to be changed</td>
</tr>

<tr valign="top">
<td width="10%">&nbsp;</td>
<td width="20%">value</td>
<td width="70%">value the descriptor shall be decreased by.<br><br></td>
</tr>

<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%"><tt>True</tt> in case the given descriptor name exists
in the descriptor list, otherwise <tt>False</tt>.</td>
</tr>
</table>

<headline>getDescriptorList</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>getDescriptorList (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Returns the names of the descriptors as a list.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;<br><br></td>
</tr>

<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">a list with the descriptors</td>
</tr>
</table>

<headline>getDescriptorListValues</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>getDescriptorListValues (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
In contrast to <tt>getDescriptorList</tt>, this method returns the
descriptor values, instead.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;<br><br></td>
</tr>

<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">a list with the values</td>
</tr>
</table>

<headline>getDescriptorPair</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>getDescriptorPair (self, entry)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Returns the desired list entry containing both name and value.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">entry</td>
<td width="70%">name of the desired descriptor<br><br></td>
</tr>

<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">list entry with descriptor name and the according value.</td>
</tr>
</table>

<headline>getDescriptorValue</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>getDescriptorValue (self, entry)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Returns the value of a selected entry from the descriptor list.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">entry</td>
<td width="70%">name of the desired descriptor<br><br></td>
</tr>

<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">descriptor value for the desired descriptor. In case the
transmitted name does not exist in the descriptor list the return value
is 0.</td>
</tr>
</table>

<headline>increaseDescriptor</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>increaseDescriptor (self, descriptor, value)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Increases the value of the named descriptor from the descriptor
list.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">entry</td>
<td width="70%">name of the descriptor to be changed<br><br></td>
</tr>

<tr valign="top">
<td width="10%">&nbsp;</td>
<td width="20%">value</td>
<td width="70%">value the descriptor shall be decreased by.<br><br></td>
</tr>

<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%"><tt>True</tt> in case the given descriptor name exists
in the descriptor list, otherwise <tt>False</tt>.</td>
</tr>
</table>

<headline>removeDescriptor</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>removeDescriptor (self, descriptor)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Deletes the desired entry from the descriptor list.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">entry</td>
<td width="70%">name of the desired descriptor<br><br></td>
</tr>

<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%"><tt>True</tt>, in case the descriptor exists in the
descriptor list, otherwise <tt>False</tt>.</td>
</tr>
</table>

<headline>updateDescriptor</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>updateDescriptor (self, descriptor, value)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Changes the value of the desired entry from the descriptor list.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">entry</td>
<td width="70%">name of the desired descriptor</td>
</tr>

<tr valign="top">
<td width="10%">&nbsp;</td>
<td width="20%">value</td>
<td width="70%">the new value for the descriptor<br><br></td>
</tr>

<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%"><tt>True</tt> in case the descriptor exists in the
descriptor list, otherwise <tt>False</tt>.</td>
</tr>
</table>

<chapter>Class Entry</chapter>
<headline>__init__</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>__init__ (self, text, encoding, keywords, classification)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Run automatically right after a new object of the class <tt>Entry</tt>
was created.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">text</td>
<td width="70%">content of the entry</td>
</tr>

<tr valign="top">
<td width="10%">&nbsp;</td>
<td width="20%">encoding</td>
<td width="70%">desired encoding of the entry</td>
</tr>

<tr valign="top">
<td width="10%">&nbsp;</td>
<td width="20%">keywords</td>
<td width="70%">keywords for the entry as a list of descriptors</td>
</tr>

<tr valign="top">
<td width="10%">&nbsp;</td>
<td width="20%">classification</td>
<td width="70%">classification of the entry<br><br></td>
</tr>

<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%"></td>
</tr>
</table>

<headline>getClassification</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>getClassification (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Returns the classification for the current entry.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;<br><br></td>
</tr>

<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">classification of the entry</td>
</tr>
</table>

<headline>getEncoding</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>getEncoding (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Returns the encoding for the current entry.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;<br><br></td>
</tr>

<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">The encoding of the entry as a string line.</td>
</tr>
</table>

<headline>getEntry</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>getEntry (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Returns the full entry as a dictionary.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;<br><br></td>
</tr>

<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">a dictionary containing the following items:
	<ul>
	<li><tt>entryId</tt>: the entry id</li>
	<li><tt>text</tt>: the content of the entry</li>
	<li><tt>encoding</tt>: the encoding that is used</li>
	<li><tt>keywords</tt>: the deskriptors for this entry</li>
	<li><tt>classification</tt>: the classification details</li>
	</ul>
</td>
</tr>
</table>

<headline>getEntryId</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>getEntryId (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Returns the entry id.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;<br><br></td>
</tr>

<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">entry id</td>
</tr>
</table>

<headline>getKeywords</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>getKeywords (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Return the entry descriptors.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;<br><br></td>
</tr>

<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">descriptors for the entry</td>
</tr>
</table>

<headline>getPhoneticCode</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>getPhoneticCode (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Returns a list of phonetic codes for the entry. The list includes
different methods such as soundex, metaphone, NYSIIS, and
caverphone.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">a list with entries that represent the phonetic code:<br>
		<UL>
			<LI><tt>soundex</tt>: Soundex code</LI>
			<LI><tt>metaphone</tt>: Metaphone code</LI>
			<LI><tt>nysiis</tt>: NYSIIS code</LI>
			<LI><tt>caverphone</tt>: Caverphone code</LI>
		</UL>
</td>
</tr>
</table>

<headline>getText</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>getText (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Returns the content of the entry as text.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;<br><br></td>
</tr>

<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">text as a list of strings</td>
</tr>
</table>


<headline>setClassification</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>setClassification (self, classification)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Sets the entry classification to the transmitted value.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">classification</td>
<td width="70%">new value for the current entry<br><br></td>
</tr>

<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;</td>
</tr>
</table>

<headline>setEncoding</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>setEncoding (self, encoding)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Sets the encoding to the transmitted value.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">encoding</td>
<td width="70%">new value for the new entry<br><br></td>
</tr>

<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;</td>
</tr>
</table>

<headline>setEntryId</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>setEntryId (self, value)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Sets the entry id to the transmitted value.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">value</td>
<td width="70%">new entry id to be used<br><br></td>
</tr>

<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;</td>
</tr>
</table>

<headline>setKeywords</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>setKeywords (self, keywords)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Sets the entry descriptors to the transmitted value.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">keywords</td>
<td width="70%">new descriptors for the entry<br><br></td>
</tr>

<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;</td>
</tr>
</table>

<chapter>Class Ngram</chapter>

<headline>__init__</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>__init__ (self, term, size)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Run automatically right after a new object of the class <tt>Ngram</tt> was
created.<br>

<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">term</td>
<td width="70%">character string to initialize the <tt>Ngram</tt>
object<br></td>
</tr>

<tr valign="top">
<td width="10%">&nbsp;</td>
<td width="20%">size</td>
<td width="70%">the number of characters, or the length of the
ngram<br><br></td>
</tr>

<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;</td>
</tr>
</table>
<br>
This function has no return value.

<headline>deriveNgrams</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>deriveNgrams (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.0.2 as the function <tt>get_ngrams</tt>, and renamed in
advas-0.2.5<br>
<br>
This method calculates the according ngram for the saved text with the length
  set before via <tt>setNgramSize</tt>.<br>

<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%"></td>
<td width="70%">&nbsp;<br><br></td>
</tr>

<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%"><tt>False</tt>, in case the length of the character string is
  less than desired ngram size, otherwise <tt>True</tt>. As a follow-up step,
    the ngrams can be retrieved using the method <tt>getNgrams()</tt></td>
</tr>
</table>

<headline>getNgramSize</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>getNgramSize (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
  Returns the ngram size defined before.<br>

<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%"></td>
<td width="70%">&nbsp;<br><br></td>
</tr>

<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">length of the ngrams as an integral value</td>
</tr>
</table>
<br>
The ngram length is defined during the object initialisation, and can be
  changed with the help of the <tt>setNgramSize</tt> method later on.

<headline>getNgrams</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>getNgrams (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.0.2, extended in advas-0.2.5<br>
<br>
Returns the ngrams calculated before with the help of 
<tt>deriveNgrams()</tt>.<br>

<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%"></td>
<td width="70%">&nbsp;<br><br></td>
</tr>

<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">a list of character entities</td>
</tr>
</table>

<headline>setNgramSize</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>setNgramSize (self, size)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Defines the ngram length.<br>

<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">size</td>
<td width="70%">integral value that defines the ngram length<br><br></td>
</tr>

<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%"></td>
</tr>
</table>

<chapter>Class Phonetics</chapter>
<headline>__init__</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>__init__ (self, term)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Run automatically right after a new object of the class <tt>Phonetics</tt> was
created.<br>

<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">term</td>
<td width="70%">a character string the object is initialized with.<br><br></td>
</tr>

<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;</td>
</tr>
</table>
<br>
This method has no return value.

<headline>calcSuccVariety</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>calcSuccVariety (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.0.4, and renamed in advas-0.2.5<br>
<br>
Calculates the successor variety that is based on the saved text.<br>

<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">a list (dictionary), that contains the successor variety for
each single letter from "abcdefghijklmnopqrstuvwxyz&auml;&ouml;&uuml;&szlig;@'
"</td>
</tr>
</table>

<headline>calcSuccVarietyCount</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>calcSuccVarietyCount (self, varietyList)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Counts the number of hits for the successor variety.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">varietyList</td>
<td width="70%">the list of the successor variety, calculated with
  <tt>calcSuccVariety()</tt> before.<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">a list (dictionary) with the number of hits<td>
</tr>
</table>

<headline>calcSuccVarietyList</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>calcSuccVarietyList (self, wordList)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Calculates the successor variety for a list of words.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">wordList</td>
<td width="70%">a list of words to calculate the successor variety for
<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">a dictionary with the calculated values</td>
</tr>
</table>

<headline>calcSuccVarietyMerge</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>calcSuccVarietyMerge (self, varietyList)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Unites similar list entries of successor variety values into a list with
unique entries.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">varietyList</td>
<td width="70%">a list of sucessor varieties as calaculated with
  <tt>calcSuccVariety()</tt> before<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">a dictionary with the calaculated values</td>
</tr>
</table>

<headline>caverphone</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>caverphone (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.2, adjusted for advas-0.2.5<br>
<br>
Derives the phonetic code for the saved text based on the caverphone  
algorithm.<br>

<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">the caverphone code for the saved text string</td>
</tr>
</table>

<headline>getText</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>getText (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Returns the text string that is saved as a part of the phonetics object, and
used for phonetic algorithms.<br>

<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;<br><br></td>
</tr>

<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">the text string that is saved in the phonetics object.</td>
</tr>
</table>
<br>

<headline>metaphone</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>metaphone (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas.0.0.5, adjusted in advas-0.2.5<br>
<br>
Derives the phonetic code for the saved text based on the metaphone
algorithm.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">the metaphone code for the saved text string</td>
</tr>
</table>

<headline>nysiis</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>nysiis (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.1.9, adjusted in advas-0.2.5<br>
<br>
Derives the phonetic code for the saved text based on the New York State
Identification and Intelligence Algorithm (NYSIIS) algorithm.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">the NYSIIS code for the saved text string</td>
</tr>
</table>

<headline>phoneticCode</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>phoneticCode (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.1.9, adjusted for advas-0.2.5<br>
<br>
Returns a list of phonetic codes for the saved text string. This includes
  different methods such as soundex, metaphone, caverphone, and nysiis.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">a list with entries containing the according phonetic code:<br>
		<UL>
			<LI><i>soundex</i>: soundex code</LI>
			<LI><i>metaphone</i>: metaphone code</LI>
			<LI><i>nysiis</i>: NYSIIS code</LI>
			<LI><i>caverphone</i>: caverphone code</LI>
		</UL>
</td>
</tr>
</table>

<headline>setText</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>setText (self, term)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Sets the text string in the phonetics object.<br>

<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">term</td>
<td width="70%">text string that is saved in the phonetics object<br><br></td>
</tr>

<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;</td>
</tr>
</table>
<br>
This method does not have a return value.

<headline>soundex</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>soundex (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas.0.0.1, adjusted for advas-0.2.5<br>
<br>
Derives the phonetic code for the saved text based on the soundex
algorithm.<br>

<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">the four-letter soundex code for the saved text string</td>
</tr>
</table>

<chapter>Class Stemmer</chapter>

<headline>__init__</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>__init__ (self, encoding)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Run automatically right after a new object of the class <tt>Stemmer</tt> was
created.<br>

<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">encoding</td>
<td width="70%">kind of encoding that is used<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">&nbsp;</td>
</tr>
</table>

<headline>clearStemFile</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>clearStemFile (self)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Removes the internal buffer with the stem table, and the referenced file
name.<br>
<br>
This method has no parameters, and no return value.

<headline>loadStemFile</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>loadStemFile (self, stemFile)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.2.5<br>
<br>
Opens the given file, reads the stems from it, and saves the stems in an
internal structure.<br>

<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">stemFile</td>
<td width="70%">name of the file that contains the stems<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%"><tt>True</tt> in case loading succeeded, otherwise
  <tt>False</tt>.</td>
</tr>
</table>

<headline>ngramStemmer</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>ngramStemmer (self, wordList, size, equality)</b></font>
</td>
</tr>
</table>

<br>
Added to advas.0.0.3, adjusted in advas-0.2.5<br>
<br>
Uses the ngram stemming method to reduce the wordList entries.<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">wordList</td>
<td width="70%">a word list</td>
</tr>
<tr valign="top">
<td width="10%">&nbsp;</td>
<td width="20%">size</td>
<td width="70%">the desired ngram size (number of characters)</td>
</tr>
<tr valign="top">
<td width="10%">&nbsp;</td>
<td width="20%">equality</td>
<td width="70%">a float value that idicates the degree of equality between the
  different ngrams<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">a word list that is reduced as much as possible</td>
</tr>
</table>
<br>
The equality is a value between 0 and 1. The higher the value, the higher the
degree of equality between two terms has to be so that they can be combined. A
value between 0.8 and 0.9 is recommended.

<headline>successorVariety</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>successorVariety (self, term, wordList)</b></font>
</td>
</tr>
</table>

<br>
Added to advas.0.0.4, adjusted in advas-0.2.5<br>
<br>
Derives the stem using the successor variety algorithm (peak-and-plateau
method).<br>
<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">term</td>
<td width="70%">a single word as a string</td>
</tr>
<tr valign="top">
<td width="10%">&nbsp;</td>
<td width="20%">wordList</td>
<td width="70%">a list of words<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">a list of single stems the term consists of</td>
</tr>
</table>

<headline>tableLookup</headline>
<table width="100%">
<tr bgcolor="#0000CC">
<td>
<font color="#FFFFFF"><b>tableLookup (self, term)</b></font>
</td>
</tr>
</table>

<br>
Added to advas-0.0.2, and renamed in advas-0.2.5<br>
<br>
Returns the stem based on a stem table.<br>

<br>
<table width="100%" cols="3">
<tr valign="top">
<td width="10%">In:</td>
<td width="20%">term</td>
<td width="70%">a text string<br><br></td>
</tr>
<tr valign="top">
<td width="10%">Out:</td>
<td width="20%">&nbsp;</td>
<td width="70%">the stem of <tt>term</tt>. The return value is an empty string
if the access to the file with the stems is impossible.</td>
</tr>
</table>
<br>
Every line in the table follows the principle "term: stem". The lines have to
be sorted in alphabetical order.

<chapter>Information Retrieval Resources</chapter>
<headline>In German</headline>

<UL>
	<LI><B>Hofmann, Frank: Analysis to improve result quality in search methods via web archives (original title: <b>Untersuchungen zur Verbesserung der Resultatqualit&auml;t bei Suchverfahren über Web-Archive</b>)</B><BR>
	Study, Professorship for Computer Networks and Distributed Systems, Department of Computer Science, <A HREF="http://www.tu-chemnitz.de">Chemnitz University of Technology</A>, 2002, 86 p.<BR>
	<A HREF="http://archiv.tu-chemnitz.de/pub/2003/0013"><TT>http://archiv.tu-chemnitz.de/pub/2003/0013</TT></A>
	<BR><BR>
	This paper investigates the entire process of information research with respect to the Multimedia Online Archive of the <A HREF="http://www.tu-chemnitz.de">Chemnitz University of Technology</A> (<A HREF="http://archiv.tu-chemnitz.de">MONARCH</A>). Starting with the formulating of a query, continuing with finding relevant documents, finishing with displaying the search result. Methods which can be used for descriptor-based and full-text search are introduced and evaluated. The configuration of documents suitable for searches and concepts applicable in this respect are considered.<BR><BR>
	</LI>
</UL>

<headline>In English</headline>

<UL>
	<LI><B>Frakes, William B. / Baeza-Yates, Ricardo (Ed.): Information Retrieval. Data Structures &amp; Algorithms</B><BR>
	Prentice Hall, 1992, 504 p., ISBN 0-13-463837-9<BR>
	<BR>
	Apart from an extensive introduction to Information Retrieval, this book contains methods for text analysis, stemming, thesauri, string search as well as the presentation of the search result (ranking, clustering). The last chapter of the book deals with special IR hardware and parallel methods.
	<BR><BR>
	</LI>
	<LI><B>Korfhage, Robert R. : Information Storage and Retrieval</b><br>
	Wiley Computer Publishing, 1997, 350 S., ISBN 0-471-14338-3<br>
	<A HREF="http://www.pitt.edu/~korfhage/irbook.html"><tt>http://www.pitt.edu/~korfhage/irbook.html</tt></A><BR><BR>
	This book contains algorithms and various techniques for the configuration and evaluation of queries, for text analysis, comparison of strings and representation of search results (sorting, ranking, clustering of retrieved documents). Furthermore, it contains ratings and evaluations concerning the quality of the presented methods as well as suggestions improvements and optimization. 
	<BR><BR>
	</LI>
</UL>

<chapter>Documentation</chapter>
<headline>About This User's Guide</headline>

This is the documentation for AdvaS 0.2.5. Published 2014-04-26.<br>
<br>
This document was written by <a href="mailto:fh@efho.de">Frank Hofmann</a>. Many thanks to Evelyn Richter and Daniela Steinborn for their additions and corrections.<br>
<br>
For additions and corrections, feel free to contact <a href="mailto:fh@efho.de">the author</a>.<br>
<br>
This document was created with the use of htc-py, a python-based XML-to-HTML converter. See <A HREF="http://htc-py.sourceforge.net">http://htc-py.sourceforge.net</A> for more information.<br>
