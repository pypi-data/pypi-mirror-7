v0.5.2 (2014-06-12)
----------------------------------------------------------------------

Updates:
    esutil/io.py: 
        Added writing of xml files.
        Added bunzipping of fits files that end in .bz2
    esutil/wcsutil.py:
        Now allow any header object that supports iteration
    esutil/plotting.py
        - Allow sending norm for histogram plot function bhist.
        - forward keywords to the underlying biggles routines

New methods:
    esutil/numpy_util.py: 
        descr_to_native:
            Remove byte order information from numpy type descriptor.
        strmatch: 
            match a string array to a regular expression
        match_multi:
            code for matching two numpy integer arrays, one
            of which may be non-unique. Similar to match_multi
            from sdssidl (from Eli Rykoff)
        rem_dup:
            Return indices of unique values of an array, selecting the one
            (when duplicates exist) with the largest value of flag.  Optionally
            returns the values in the array as well as their indices. (from Amy
            Kimball)
    esutil/random.py:
        Added some new distributions

    esutil/stats/util.py:
        wmedian: calculate the weighted median
    esutil/plotting.py:
        get_grid Get a 2-d grid layout given the total number of plots

    esutil/misc.py
        collect_keyby:
            Create a new dictionary from the input collection, keyed by the
            values specified by the input key name.


Bug fixes
    esutil/xmltools.py stderr used but not imported
    esutil/plotting.py: deal properly with log plots when values
        go below zero
    esutil/coords.py:
        bug fixes to coords.ra_parse and coords.dec_pars from Paul Ray and Dave
        Smith, NRL
    esutil/wcsutil.py
        - allow scalar structured arrays in wcs
        - use simple inversion if full distortion is not present
        - don't use minimozer when distortion is none
        - don't require npix and cunit1

v0.5.1 (2012-04-27)
----------------------------------------------------------------------

Updates:
    Updated a number of places to use stderr for messages.

    esutil/coords.py: Added randcap function to produce random
        points in a spherical cap.  Use clip() instead of
        where in sphdist(), gcirc().  Added rec_area() to
        calculate the area of a rectangle in longitude and
        latitude.
    esutil/hfds.py: Added "du" function to calculate disk usage.
        Added is_in_hdfs() function.  File listings now include
        the hdfs:// in front by default.
    esutil/io.py: In read() Added ability to read rec file with
        no header of dtype is sent.
    esutil.stat: Added cov2cor and cor2cov functions to convert
        between covariance matrices and correlation matrices.
    esutil/misc.py: Added wlog() for quick logging to stderr.
    esutil/plotting.py: Added width keyword to bscatter.

v0.5.0 (2012-01-15)
----------------------------------------------------------------------
New files:
    esutil/hdfs.py: routines to get files in and out of the hadoop
        file system.  Also routines for listing, removing, etc.
    esutil/cosmology:
        Now using simplified cosmology package written in C.
    esutil/fits.py: 
        This is a workaround for reading subsets of columns and rows from fits
        files when only pyfits is available.  Note you should use
        the fitsio package instead:  https://github.com/esheldon/fitsio
        The io module will select fitsio if available, otherwise pyfits.
    esutil/sqlite_util.py:
        Wrapper class and functions to read/write from sqlite.

Removed Files:
    Removed patched pyfits.  Trying to use the fitsio package
    when available.

Updates:

    General:
        Removed some features that did not exist in python 2.5, such
        as as format() functions for strings and importing print function
        from future.

    esutil/cosmology:
        - The comoving volume is now for the whole sky.  Previously it
          was per steradian.  To get the old behavior, divide by 4*pi
    esutil/coords.py:
        - added more optionals units to sphdist
    esutil/plotting.py: 
        - bhist now doesn't use Histogram but a new histogram plotter.  ylog
          and xlog now work
        - in plotrand use dot as default stuyle
        - added fake filled circle point maker for when plotting dots and need
          a key
        - plotting.bscatter works better with log plots now
        - added asinh_scale and norm to plotting, for images
        - can send type= for curves in bscatter.
        - now can use weights in plot hist.

    esutil/io.py: 
        - If the filenames start with hdfs:// the files will be staged
          in and out of the hadoop file system transparently.
        - Use the fitsio package if available, fall back to pyfits otherwise.
          https://github.com/esheldon/fitsio
        - Added read_header function
        - determine mode from input mode not from file object
        - added reading and writing of yaml
        - deal with file names that have no extensioin
        - use **keys in read() and write()
        - support write rec files.

    esutil/numpy_util.py:
        - Added sort option to numpy_util.random_subset
        - added ability to print latex table to ArrayWriter and aprint       
        - ahelp can be used on scalars.
        - added replicate function
        - added arr2str function, which uses ArrayWriter
        - added where1 convenience function, which uses w,=numpy.where() for 1D
          arrays.
        - replicate is now smarter, determining the data type from the input.

    esutil/stat:
        - Added Binner class to handle all histogramming, including
          weighted histograms, etc.
        - updated histogram to use binner
        - added qgauss convenience function.
        - added nbin= keyword for histograms
    esutil/ostools.py:
        - added makedirs_fromfile procedure; grabs the directory name
          and creates it if it doesn't exist.
Bugs:

    esutil/numpy_util.py:
        - fixed bug with ensure_native
    esutil/stat/util.py
        - fixed bug sending nbin for histogram. 
        - Fix bug in stat.sigma_clip
        - In Binner, make sure stats are fully calculated if weights are sent
        - fixed bug in histogram when only min= or max= are sent
    esutil/plotting.py:
        - fixed bug for point type in plotrand. 
    esutil/cosmology:
        - Use exact speed of light value.
    esutil/io.py:
        - fixed bug where file paths were not always being expanded


v0.4.1 (2010-08-18)
----------------------------------------------------------------------

New files:
    esutil/include/NumpyRecords.h: A header only class for working
        with record arrays in C++.  (ESS)
    esutil/include/NumpyVoidVector.h: A header only class for
        working with numpy vectors in C++.  Unlike NumpyVector.h,
        which is a template class, the type is determined at
        runtime.
    esutil/algorithm.py: New module to hold algorithms.  Currently
        just playing with sorting algorithms.

Modifications:

    esutil/numpy_util: 
        * Improvements to ArrayWriter, which is now used for 
          aprint() (ESS)
        * Added random_subset() function.
    esutil/htm/htm.py: cylmatch added (BG)
    esutil/coords.py:  Added shiftlon to shift a longitutde coordinate,
        also shiftra which is an alias for shiftlon.
    esutil/io.py:  write() now supports json.
    esutil/stomp_util.py: in_window() can run map.Contains() as well
        as quadrant checking if radius is set (calls quad_check)
    esutil/plotting.py: Added convenience function bscatter() which
        uses biggles as plotting engine.

Other:
Moved exec_process from misc.py to ostools.py



----------------------------------------------------------------------
v0.4.0 (2010-04-23)  Lots of major changes and additions.

Additions:

	pyfitspatch:
		A patched version of pyfits that allows writing binary tables from a
		numpy array with fields, recarray, etc. with a single call.  The io.py
		sub-module uses this for input and output from FITS.  The patches have
		been sent to the pyfits people and when incorporated pyfitspatch will
		be dropped.

	numpy_util.ahelp:  
        Print out a formatted description of the input array.   If the array
        has fields, individual descriptions are printed for each field.  This
        is designed to be similar to help, struct, /str in IDL. 

	numpy_util.aprint: 
        Print fields from the array in columns.

    numpy.randind
        Return nrand random indices, with replacement, in the open 
        range [0,nmax)

	misc.colprint():
		Print a set of input sequences or arrays in columns.

	ostools.DirStack: A simple directory stack like that supported by unix
		shells.

	io.write: Support writing files.  Currently only FITS is supported.

Enhancements:
	stat.histogram can now return statistics about the histogram and
		binning of the data.  If getdict=True, a dictionary is returned
		with the 'hist' as well as the lower end of each bin 'low',
		'high', 'center', 'mean', 'median', 'std', 'err'.  If the
		new keyword weights= is sent, the weighted versions are also
		returned as 'wmean', 'wstd', etc.

Rearrangement:
	stat is now a sub-package.  The histogram code has now been written
	as a C++ extension.

	gauleg is not a C++ extension instead of a scipy.weave thing.

Bug Fixes:
	Fix in NumpyVector.h to allow for the fact that int64_t and npy_int64
	actually have different type ids on OS X.  This affected the htm code.

	Re-implemented the histogramming code as a C extension instead of 
	using scipy.weave.  This circumvents the bug in weave for gcc >= 4.3.
	Same for gauleg.

-----------------------------------------------
v0.3.0 (2010-04-04)

New files and packages:
	htm package:  
		Added C++ code for working with the Heierarchical Triangular Mesh
		(HTM).  This is a code for breaking the sky into spherical triangles, a
		quad tree, which makes for fast searching.  Includes the class HTM with
		methods such as lookup_id for finding the htm id of an ra,dec, match
		for finding matches between lists of ra,dec and bincount for counting
		pairs in radial bins, useful for calculating correlation functions.

	integrate.py: 
		Tools for numerical integration.  Currently has a class for performing
		gauss-legendre integration.

	plotting.py: 
		Tools for plotting with matplotlib.  
			setuplot() for setting up the plotting and establishing a plot
				object.
			set_mino0r_ticks() for setting up minor tick mark locations in
				a smart way.
			whiskers: Plot whiskers, or arrowless vectors.
	random.py:  
		Contains a class for generating random points from an arbitrary
		probability distribution.

	coords.py:  
		astro_util.py is now coords.py, appropriate since all the code was
		coordinate transformations.
	
Other Changes:
	Numerous changes that I forgot to write into this release notes. Will be
	more diligent in the future.
