# Copyright 2013-2014 Sebastian Kreft
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Regular expression matchers like \d, \w, must be escaped as in \\d, \\w.

# CSS
csslint:
  extensions:
  - .css
  command: csslint
  arguments:
  - "--ignore=ids,box-model,adjoining-classes,qualified-headings,unique-headings,zero-units"
  - "--format=compact"
  filter: "^%(filename)s: line %(lines)s, col"
  installation: "Go to https://github.com/stubbornella/csslint/wiki/Command-line-interface for installation instructions."

# SCSS
scss:
  extensions:
  - .scss
  command: scss-lint
  filter: "^%(filename)s:%(lines)s "
  installation: "gem install scss-lint or go to https://github.com/causes/scss-lint"

# Javascript
gjslint:
  extensions:
  - .js
  command: gjslint
  filter: "^Line\\s+%(lines)s,"
  installation: "Run pip install http://closure-linter.googlecode.com/files/closure_linter-latest.tar.gz, or visit https://developers.google.com/closure/utilities/docs/linter_howto for installation instructions."

jshint:
  extensions:
  - .js
  command: jshint
  filter: "^%(filename)s: line %(lines)s, col "
  installation: "Visit http://www.jshint.com/install/ for installation instructions."

# PHP
php:
  extensions:
  - .php
  command: php
  arguments:
  - "-l"
  filter: "^(?!No syntax errors detected in )"
  installation: "You first need to install PHP."

phpcs:
  extensions:
  - .php
  command: phpcs
  arguments:
  - "--report-width=1000"
  - "--standard=PSR2"
  filter: "^\\s*%(lines)s\\s\\|"
  installation: "Visit https://github.com/squizlabs/PHP_CodeSniffer for installation instructions"

# Python
pylint:
  extensions:
  - .py
  command: pylint
  arguments:
  - "--rcfile=%(DEFAULT_CONFIGS)s/pylintrc"
  - "--output-format=text"
  - "--msg-template='{abspath}:{line}:{column}: [{symbol}, {obj}] {msg}'"
  - "--reports=n"
  filter: "^%(filename)s:%(lines)s:\\d*: \\["
  installation: "Run pip install pylint."

pep8:
  extensions:
  - .py
  command: pep8
  arguments:
  - "--max-line-length=80"
  filter: "^%(filename)s:%(lines)s:\\d+: "
  installation: "Run pip install pep8."

# JSON
json:
  extensions:
  - .json
  command: python
  arguments:
  - "-m"
  - "json.tool"
  filter: "^.*: line %(lines)s column |No JSON object could be decoded"
  installation: "Nothing else should be required."

# RST
rst:
  extensions:
  - .rst
  command: rst2html.py
  filter: "^%(filename)s:%(lines)s: "
  installation: "Run pip install docutils."

# PNG
pngcrush:
  extensions:
  - .png
  command: pngcrush-linter.sh
  requirements:
  - pngcrush
  filter: ".*"
  installation: "Run apt-get install pngcrush."

optipng:
  extensions:
  - .png
  command: optipng-linter.sh
  requirements:
  - optipng
  filter: ".*"
  installation: "Run apt-get install optipng."

# JPEG
jpegtran:
  extensions:
  - .jpg
  - .jpeg
  command: jpegtran-linter.sh
  requirements:
  - jpegtran
  filter: ".*"
  installation: "Run apt-get install jpegtran."

#SHELL scripts
bash:
  extensions:
  - .sh
  command: bash
  arguments:
  - "-n"
  filter: ".*"
  installation: "Please install bash in your system."

#YAML
yaml:
  extensions:
  - .yaml
  - .yml
  command: yaml_linter.py
  filter: ".*"
  installation: "Run pip install PyYAML."

#INI
ini:
  extensions:
  - .ini
  command: ini_linter.py
  filter: ".*"
  installation: ""

#HTML
tidy:
  extensions:
  - .html
  command: tidy-wrapper.sh
  requirements:
  - tidy
  - remove_template.py
  - grep
  arguments:
  - "-qe"
  - "--drop-empty-elements"
  - "false"
  installation: "Visit https://w3c.github.io/tidy-html5/"
  filter: "^line %(lines)s column \\d+ - "

html_lint:
  extensions:
  - .html
  command: html_lint.py
  arguments:
  - "--disable"
  - "optional_tag"
  installation: "pip install html-linter."
  filter: "^%(lines)s:\\d+: "

#Ruby
ruby:
  command: ruby-lint
  extensions:
  - '.rb'
  # The first component is the basename, but it's not supported yet.
  filter: ".*: .*: line %(lines)s, column \\d+: "
  installation: "sudo gem install ruby-lint (requires ruby 1.9) or visit https://github.com/yorickpeterse/ruby-lint"

rubocop:
  command: rubocop
  extensions:
  - '.rb'
  # The first component is the relpath, but it's not supported yet.
  filter: ".*:%(lines)s:\\d: "
  installation: "sudo gem install rubocop or visit https://github.com/bbatsov/rubocop"

#Java
checkstyle:
  command: checkstyle
  extensions:
  - .java
  requirements:
  - java
  arguments:
  - "-c"
  - "%(DEFAULT_CONFIGS)s/checkstyle.xml"
  filter: "%(filename)s:%(lines)s:(\\d+:)? "
  installation: "sudo apt-get install checkstyle or go to http://checkstyle.sourceforge.net/cmdline.html"

pmd:
  command: run.sh
  extensions:
  - .java
  requirements:
  - java
  arguments:
  - "pmd"
  - "-format"
  - "text"
  - "-rulesets"
  - "rulesets/java/android.xml,rulesets/java/basic.xml,rulesets/java/braces.xml,rulesets/java/clone.xml,rulesets/java/codesize.xml,rulesets/java/coupling.xml,rulesets/java/design.xml,rulesets/java/empty.xml,rulesets/java/finalizers.xml,rulesets/java/imports.xml,rulesets/java/j2ee.xml,rulesets/java/javabeans.xml,rulesets/java/junit.xml,rulesets/java/logging-jakarta-commons.xml,rulesets/java/optimizations.xml,rulesets/java/strictexception.xml,rulesets/java/strings.xml,rulesets/java/sunsecure.xml,rulesets/java/typeresolution.xml,rulesets/java/unnecessary.xml,rulesets/java/unusedcode.xml"
  - "-d"
  filter: "%(filename)s:%(lines)s:\\s"
  installation: "Go to http://pmd.sourceforge.net/pmd-5.1.1/installing.html"
