""" Code to derive model parameters
    
Context : SRP
Module  : SRPTNGPAOLOCut
Author  : Stefano Covino
Date    : 01/04/2013
E-mail  : stefano.covino@brera.inaf.it
URL:    : http://www.merate.mi.astro.it/utenti/covino
Purpose : Cut TNG PAOLO frames.

Usage   : SRPTNGPAOLOCut [-h] [-f] -i file [-q] [-v] [--version]
            -f Cut full PAOLO polarimetric frame
            -i Input FITS file list
            -q Cut PAOLO polarimetric quadrants
    
History : (01/04/2013) First version.

"""

__version__ = '0.1.0'


import argparse, os
import SRP.SRPTNG.PAOLO as STP
    


parser = argparse.ArgumentParser()
parser.add_argument("-f", "--full", action="store_true", help="Cut full PAOLO polarimetric frame")
parser.add_argument("-i", "--inputfilelist", action="store", help="Input FITS file list", required=True, metavar='file')
parser.add_argument("-q", "--quad", action="store_true", help="Cut PAOLO polarimetric quadrants")
parser.add_argument("-v", "--verbose", action="store_true", help="Fully describe operations")
parser.add_argument("--version", action="version", version=__version__)
options = parser.parse_args()


CMD = "SRPCut -i %s -e %s -o %s "

#        
if options.full or options.quad:
    if options.full:
        cmd = CMD % (options.inputfilelist, STP.framecut, "_polframe")
        if options.verbose:
            cmd = cmd + '-v'
        os.system(cmd)
    if options.quad:
        cmd = CMD % (options.inputfilelist, STP.quad1cut, "_polquad1")
        if options.verbose:
            cmd = cmd + '-v'
        os.system(cmd)
        #
        cmd = CMD % (options.inputfilelist, STP.quad2cut, "_polquad2")
        if options.verbose:
            cmd = cmd + '-v'
        os.system(cmd)
        #
        cmd = CMD % (options.inputfilelist, STP.quad3cut, "_polquad3")
        if options.verbose:
            cmd = cmd + '-v'
        os.system(cmd)
        #
        cmd = CMD % (options.inputfilelist, STP.quad4cut, "_polquad4")
        if options.verbose:
            cmd = cmd + '-v'
        os.system(cmd)
else:
    parser.error("At least one option is required.")
#
