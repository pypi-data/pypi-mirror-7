Metadata-Version: 1.1
Name: skosprovider
Version: 0.3.0
Summary: Abstraction layer for SKOS vocabularies.
Home-page: http://github.com/koenedaele/skosprovider
Author: Koen Van Daele
Author-email: koen_van_daele@telenet.be
License: MIT
Description: skosprovider: vocabulary abstraction
        ====================================
        
        This library helps abstract vocabularies that stick to the SKOS specification.
        
        .. image:: https://travis-ci.org/koenedaele/skosprovider.png?branch=master
                :target: https://travis-ci.org/koenedaele/skosprovider
        .. image:: https://coveralls.io/repos/koenedaele/skosprovider/badge.png?branch=master
                :target: https://coveralls.io/r/koenedaele/skosprovider
        .. image:: https://badge.fury.io/py/skosprovider.png
                :target: http://badge.fury.io/py/skosprovider
        
        Building the docs
        -----------------
        
        More information about this library can be found in :file:`docs`. The docs can be 
        built using `Sphinx <http://sphinx-doc.org>`_.
        
        Please make sure you have installed Sphinx in the same environment where 
        skosprovider is present.
        
        .. code-block:: bash
        
            # activate your virtual env
            $ pip install sphinx
            $ python setup.py develop
            $ cd docs
            $ make html
        
        
        0.3.0 (2014-05-14)
        ------------------
        
        - Added support for :term:`URI`. A :class:`skosprovider.skos.Concept`, 
          :class:`skosprovider.skos.Collection` or 
          :class:`skosprovider.skos.ConceptScheme` can now have a :term:`URI`.
        - Query a :class:`skosprovider.providers.VocabularyProvider` or the 
          :class:`skosprovider.registry.Registry` by :term:`URI`.
        - Added :mod:`skosprovider.uri` module to handle generating of :term:`URIS <URI>`.
        - Added a :meth:`~skosprovider.providers.VocabularyProvider.get_top_concepts`
          method to :class:`skosprovider.providers.VocabularyProvider`. This method
          returns the Top Concepts in a ConceptScheme (the concepts that don't have
          a broader concept).
        - Added the :meth:`~skosprovider.providers.VocabularyProvider.get_top_display` 
          and :meth:`~skosprovider.providers.VocabularyProvider.get_children_display`
          methods to handle generating a display hierarchy for a certain provider.
        - A method that used to return a list of dicts containing an id and a label, 
          now also returns a uri and a type (concept/collection) for each dict. (#2)
        - Provide list of valid noteTypes and labelTypes as attributes of Note and 
          Label so they can be used externally. (#4)
        - Reworking tests. Now using pytest in stead of nose.
        - Adding code coverage based on `Coveralls <https://coveralls.io>`_.
        
        0.2.1 (2013-12-06)
        ------------------
        
        - Make the :class:`skosprovider.providers.MemoryProvider` forward compatible
          by constructing :class:`skosprovider.skos.Concept` and 
          :class:`skosprovider.skos.Collection` objects with keywords.
        - Soms minor fixes in documentation.
        - Added an extra unit test.
        
        0.2.0 (2013-05-16)
        ------------------
        
        - Major rewrite and refactoring. Tried to keep BC in place as much as possible,
          but did change some stuff.
        - Added a read only SKOS domain model in the :mod:`skosprovider.skos` module.
        - Providers no longer return dicts as concepts, but instances of 
          :class:`skosprovider.skos.Concept`.
        - Added support for skos collections with a 
          :class:`skosprovider.skos.Collection` object.
        - Expanded concept query syntax. Now allows for querying on type 
          (concept or collection) and on collection membership. See 
          :meth:`skosprovider.providers.VocabularyProvider.find`.
        - Added :func:`skosprovider.utils.dict_dumper`.
        
        0.1.3 (2013-03-22)
        ------------------
        
        - Find empty label now returns no results
        - Find without a label now calls get_all
        
        0.1.2 (2013-02-07)
        ------------------
        
        - Providers can be removed from the registry
        - Added the ability to get a single provider from the registry
        - No longer possible to register the same provider twice
        
        0.1.1 (2012-12-11)
        ------------------
        
        - Some pep8 fixes
        - Add support for tox
        - Now tested for python 3.2
        - Added skos:notes as an example to the unit tests.
        
        0.1.0
        -----
        
        - Initial version
        
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.2
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
