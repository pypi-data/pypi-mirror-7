/* Automatically generated nanopb header */
/* Generated by nanopb-0.2.8-dev at Mon Jun  9 12:06:15 2014. */

#ifndef _PB_COMMANDS_PB_H_
#define _PB_COMMANDS_PB_H_
#include <pb.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _CommandType {
    CommandType_FORWARD_I2C_REQUEST = 1,
    CommandType_RAM_FREE = 10,
    CommandType_POT = 11,
    CommandType_WAVEFORM_FREQUENCY = 12,
    CommandType_WAVEFORM_VOLTAGE = 13,
    CommandType_I2C_ADDRESS = 14,
    CommandType_SET_POT = 15,
    CommandType_SET_WAVEFORM_FREQUENCY = 16,
    CommandType_SET_WAVEFORM_VOLTAGE = 17,
    CommandType_SET_I2C_ADDRESS = 18,
    CommandType_SET_HF_AMPLITUDE_CORRECTION = 19,
    CommandType_VOUT_PK_PK = 20,
    CommandType_LOAD_CONFIG = 21,
    CommandType_CONFIG_VERSION = 22
} CommandType;

/* Struct definitions */
typedef struct _I2cAddressRequest {
    uint8_t dummy_field;
} I2cAddressRequest;

typedef struct _LoadConfigResponse {
    uint8_t dummy_field;
} LoadConfigResponse;

typedef struct _RamFreeRequest {
    uint8_t dummy_field;
} RamFreeRequest;

typedef struct _SetHfAmplitudeCorrectionResponse {
    uint8_t dummy_field;
} SetHfAmplitudeCorrectionResponse;

typedef struct _SetI2cAddressResponse {
    uint8_t dummy_field;
} SetI2cAddressResponse;

typedef struct _SetPotResponse {
    uint8_t dummy_field;
} SetPotResponse;

typedef struct _VoutPkPkRequest {
    uint8_t dummy_field;
} VoutPkPkRequest;

typedef struct _WaveformFrequencyRequest {
    uint8_t dummy_field;
} WaveformFrequencyRequest;

typedef struct _WaveformVoltageRequest {
    uint8_t dummy_field;
} WaveformVoltageRequest;

typedef struct _ConfigVersionRequest {
    uint32_t position;
} ConfigVersionRequest;

typedef struct _ConfigVersionResponse {
    uint32_t result;
} ConfigVersionResponse;

typedef struct _ForwardI2cRequestRequest {
    uint32_t address;
    pb_callback_t request;
} ForwardI2cRequestRequest;

typedef struct _ForwardI2cRequestResponse {
    int32_t result;
} ForwardI2cRequestResponse;

typedef struct _I2cAddressResponse {
    uint32_t result;
} I2cAddressResponse;

typedef struct _LoadConfigRequest {
    bool use_defaults;
} LoadConfigRequest;

typedef struct _PotRequest {
    uint32_t index;
} PotRequest;

typedef struct _PotResponse {
    uint32_t result;
} PotResponse;

typedef struct _RamFreeResponse {
    uint32_t result;
} RamFreeResponse;

typedef struct _SetHfAmplitudeCorrectionRequest {
    float correction;
} SetHfAmplitudeCorrectionRequest;

typedef struct _SetI2cAddressRequest {
    uint32_t address;
} SetI2cAddressRequest;

typedef struct _SetPotRequest {
    uint32_t address;
    uint32_t level;
    bool save_to_eeprom;
} SetPotRequest;

typedef struct _SetWaveformFrequencyRequest {
    float frequency;
} SetWaveformFrequencyRequest;

typedef struct _SetWaveformFrequencyResponse {
    float result;
} SetWaveformFrequencyResponse;

typedef struct _SetWaveformVoltageRequest {
    float vrms;
} SetWaveformVoltageRequest;

typedef struct _SetWaveformVoltageResponse {
    float result;
} SetWaveformVoltageResponse;

typedef struct _VoutPkPkResponse {
    float result;
} VoutPkPkResponse;

typedef struct _WaveformFrequencyResponse {
    float result;
} WaveformFrequencyResponse;

typedef struct _WaveformVoltageResponse {
    float result;
} WaveformVoltageResponse;

typedef struct _CommandRequest {
    bool has_forward_i2c_request;
    ForwardI2cRequestRequest forward_i2c_request;
    bool has_ram_free;
    RamFreeRequest ram_free;
    bool has_pot;
    PotRequest pot;
    bool has_waveform_frequency;
    WaveformFrequencyRequest waveform_frequency;
    bool has_waveform_voltage;
    WaveformVoltageRequest waveform_voltage;
    bool has_i2c_address;
    I2cAddressRequest i2c_address;
    bool has_set_pot;
    SetPotRequest set_pot;
    bool has_set_waveform_frequency;
    SetWaveformFrequencyRequest set_waveform_frequency;
    bool has_set_waveform_voltage;
    SetWaveformVoltageRequest set_waveform_voltage;
    bool has_set_i2c_address;
    SetI2cAddressRequest set_i2c_address;
    bool has_set_hf_amplitude_correction;
    SetHfAmplitudeCorrectionRequest set_hf_amplitude_correction;
    bool has_vout_pk_pk;
    VoutPkPkRequest vout_pk_pk;
    bool has_load_config;
    LoadConfigRequest load_config;
    bool has_config_version;
    ConfigVersionRequest config_version;
} CommandRequest;

typedef struct _CommandResponse {
    bool has_forward_i2c_request;
    ForwardI2cRequestResponse forward_i2c_request;
    bool has_ram_free;
    RamFreeResponse ram_free;
    bool has_pot;
    PotResponse pot;
    bool has_waveform_frequency;
    WaveformFrequencyResponse waveform_frequency;
    bool has_waveform_voltage;
    WaveformVoltageResponse waveform_voltage;
    bool has_i2c_address;
    I2cAddressResponse i2c_address;
    bool has_set_pot;
    SetPotResponse set_pot;
    bool has_set_waveform_frequency;
    SetWaveformFrequencyResponse set_waveform_frequency;
    bool has_set_waveform_voltage;
    SetWaveformVoltageResponse set_waveform_voltage;
    bool has_set_i2c_address;
    SetI2cAddressResponse set_i2c_address;
    bool has_set_hf_amplitude_correction;
    SetHfAmplitudeCorrectionResponse set_hf_amplitude_correction;
    bool has_vout_pk_pk;
    VoutPkPkResponse vout_pk_pk;
    bool has_load_config;
    LoadConfigResponse load_config;
    bool has_config_version;
    ConfigVersionResponse config_version;
} CommandResponse;

/* Default values for struct fields */

/* Field tags (for use in manual encoding/decoding) */
#define ConfigVersionRequest_position_tag        1
#define ConfigVersionResponse_result_tag         1
#define ForwardI2cRequestRequest_address_tag     1
#define ForwardI2cRequestRequest_request_tag     2
#define ForwardI2cRequestResponse_result_tag     1
#define I2cAddressResponse_result_tag            1
#define LoadConfigRequest_use_defaults_tag       1
#define PotRequest_index_tag                     1
#define PotResponse_result_tag                   1
#define RamFreeResponse_result_tag               1
#define SetHfAmplitudeCorrectionRequest_correction_tag 1
#define SetI2cAddressRequest_address_tag         1
#define SetPotRequest_address_tag                1
#define SetPotRequest_level_tag                  2
#define SetPotRequest_save_to_eeprom_tag         3
#define SetWaveformFrequencyRequest_frequency_tag 1
#define SetWaveformFrequencyResponse_result_tag  1
#define SetWaveformVoltageRequest_vrms_tag       1
#define SetWaveformVoltageResponse_result_tag    1
#define VoutPkPkResponse_result_tag              1
#define WaveformFrequencyResponse_result_tag     1
#define WaveformVoltageResponse_result_tag       1
#define CommandRequest_forward_i2c_request_tag   1
#define CommandRequest_ram_free_tag              10
#define CommandRequest_pot_tag                   11
#define CommandRequest_waveform_frequency_tag    12
#define CommandRequest_waveform_voltage_tag      13
#define CommandRequest_i2c_address_tag           14
#define CommandRequest_set_pot_tag               15
#define CommandRequest_set_waveform_frequency_tag 16
#define CommandRequest_set_waveform_voltage_tag  17
#define CommandRequest_set_i2c_address_tag       18
#define CommandRequest_set_hf_amplitude_correction_tag 19
#define CommandRequest_vout_pk_pk_tag            20
#define CommandRequest_load_config_tag           21
#define CommandRequest_config_version_tag        22
#define CommandResponse_forward_i2c_request_tag  1
#define CommandResponse_ram_free_tag             10
#define CommandResponse_pot_tag                  11
#define CommandResponse_waveform_frequency_tag   12
#define CommandResponse_waveform_voltage_tag     13
#define CommandResponse_i2c_address_tag          14
#define CommandResponse_set_pot_tag              15
#define CommandResponse_set_waveform_frequency_tag 16
#define CommandResponse_set_waveform_voltage_tag 17
#define CommandResponse_set_i2c_address_tag      18
#define CommandResponse_set_hf_amplitude_correction_tag 19
#define CommandResponse_vout_pk_pk_tag           20
#define CommandResponse_load_config_tag          21
#define CommandResponse_config_version_tag       22

/* Struct field encoding specification for nanopb */
extern const pb_field_t ForwardI2cRequestRequest_fields[3];
extern const pb_field_t RamFreeRequest_fields[1];
extern const pb_field_t PotRequest_fields[2];
extern const pb_field_t WaveformFrequencyRequest_fields[1];
extern const pb_field_t WaveformVoltageRequest_fields[1];
extern const pb_field_t I2cAddressRequest_fields[1];
extern const pb_field_t SetPotRequest_fields[4];
extern const pb_field_t SetWaveformFrequencyRequest_fields[2];
extern const pb_field_t SetWaveformVoltageRequest_fields[2];
extern const pb_field_t SetI2cAddressRequest_fields[2];
extern const pb_field_t SetHfAmplitudeCorrectionRequest_fields[2];
extern const pb_field_t VoutPkPkRequest_fields[1];
extern const pb_field_t LoadConfigRequest_fields[2];
extern const pb_field_t ConfigVersionRequest_fields[2];
extern const pb_field_t ForwardI2cRequestResponse_fields[2];
extern const pb_field_t RamFreeResponse_fields[2];
extern const pb_field_t PotResponse_fields[2];
extern const pb_field_t WaveformFrequencyResponse_fields[2];
extern const pb_field_t WaveformVoltageResponse_fields[2];
extern const pb_field_t I2cAddressResponse_fields[2];
extern const pb_field_t SetPotResponse_fields[1];
extern const pb_field_t SetWaveformFrequencyResponse_fields[2];
extern const pb_field_t SetWaveformVoltageResponse_fields[2];
extern const pb_field_t SetI2cAddressResponse_fields[1];
extern const pb_field_t SetHfAmplitudeCorrectionResponse_fields[1];
extern const pb_field_t VoutPkPkResponse_fields[2];
extern const pb_field_t LoadConfigResponse_fields[1];
extern const pb_field_t ConfigVersionResponse_fields[2];
extern const pb_field_t CommandRequest_fields[15];
extern const pb_field_t CommandResponse_fields[15];

/* Maximum encoded size of messages (where known) */
#define RamFreeRequest_size                      0
#define PotRequest_size                          6
#define WaveformFrequencyRequest_size            0
#define WaveformVoltageRequest_size              0
#define I2cAddressRequest_size                   0
#define SetPotRequest_size                       14
#define SetWaveformFrequencyRequest_size         5
#define SetWaveformVoltageRequest_size           5
#define SetI2cAddressRequest_size                6
#define SetHfAmplitudeCorrectionRequest_size     5
#define VoutPkPkRequest_size                     0
#define LoadConfigRequest_size                   2
#define ConfigVersionRequest_size                6
#define ForwardI2cRequestResponse_size           6
#define RamFreeResponse_size                     6
#define PotResponse_size                         6
#define WaveformFrequencyResponse_size           5
#define WaveformVoltageResponse_size             5
#define I2cAddressResponse_size                  6
#define SetPotResponse_size                      0
#define SetWaveformFrequencyResponse_size        5
#define SetWaveformVoltageResponse_size          5
#define SetI2cAddressResponse_size               0
#define SetHfAmplitudeCorrectionResponse_size    0
#define VoutPkPkResponse_size                    5
#define LoadConfigResponse_size                  0
#define ConfigVersionResponse_size               6
#define CommandResponse_size                     90

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
