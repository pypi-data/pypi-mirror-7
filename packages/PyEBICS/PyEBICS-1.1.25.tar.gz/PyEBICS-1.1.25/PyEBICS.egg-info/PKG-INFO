Metadata-Version: 1.0
Name: PyEBICS
Version: 1.1.25
Summary: SEPA EBICS-Client for Python
Home-page: http://www.joonis.de/software/sepa-ebics-client
Author: Thimo Kraemer
Author-email: thimo.kraemer@joonis.de
License: Proprietary, see http://www.joonis.de/software/sepa-ebics-client/license
Description: The Python EBICS package
        ========================
        
        This package contains all the functionality that is required to work with
        EBICS and SEPA. The usage has been realised as simple as possible but also
        as flexible as necessary.
        
        Features
        --------
        
        - Obtain bank account statements (camt and MT940)
        - Submit SEPA credit transfers (pain.001)
        - Submit SEPA direct debits CORE, COR1, B2B (pain.008)
        - Mostly full SEPA support
        - Automatic calculation of the lead time based on holidays and cut-off times
        - Integrated mandate manager (beta)
        - Validation of IBAN and BIC
        - Bankcode/Account to IBAN converter according to the rules of the German Central Bank
        
        PyEBICS provides you the possibility to manage all of your everyday commercial
        banking activities such as credit transfers, direct debits or the retrieval of
        bank account statements in a flexible and secure manner.
        
        All modules can be used free of charge. Only the unlicensed version of the
        EBICS client has few restrictions. The upload of SEPA documents is limited
        to a maximum of five transactions and bank account statements can not be
        retrieved for the last three days.
        
        Example
        -------
        
        .. sourcecode:: python
            
            from ebics.client import EbicsClient
        
            client = EbicsClient(
                keys='~/mykeys',
                passphrase='secret',
                url='https://www.mybank.de/ebics',
                hostid='MYBANK',
                partnerid='CUSTOMER123',
                userid='USER1',
                )
            # Send the public electronic signature key to the bank.
            client.INI()
            # Send the public authentication and encryption keys to the bank.
            client.HIA()
        
            # Create an INI letter that must be printed and sent to the bank.
            client.create_ini_letter('MyBank AG', '~/ini_brief.pdf')
        
            # After the account has been activated the public bank keys
            # must be downloaded and checked for consistency.
            print client.HPB()
            
            # Finally the bank keys must be activated.
            client.activate_bank_keys()
            
            # Download MT940 bank account statements
            data = client.STA(
                start='2014-02-01',
                end='2014-02-07',
                )
        
        
        Changelog
        ---------
        
        v1.1.25 [2014-02-22]
            Minor bug fix of the module loader.
        
        v1.1.24 [2014-02-21]
            First public release.
        
Keywords: ebics,sepa
Platform: UNKNOWN
