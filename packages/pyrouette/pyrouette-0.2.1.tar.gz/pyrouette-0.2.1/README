Pyrouette
=========

Submodules

----------

CMACs in Python

Author: Jeremy Stober
Contact: stober@gmail.com
Version: 1.0

This is a standalone Python module that implements CMACS. The
implementation relies on Pythons own internal hashing methods to
implement the algorithm in a simple "Pythonic" way. Below the CMAC
class an example that learns the 3d structure of a wave surface is
included and should serve as an out of the box test that you have the
necessary prerequisites (numpy and matplotlib) to run this code.

A setup.py script is included that allows for easy installation.

CMACs are useful function approximation methods but suffer from
problems if the dimensionality of the input data is large.

Requires: numpy, pylab

---------

utils

Author: Jeremy Stober
Contact: stober@gmail.com
Version: 0.1

Python utilities.


----------

Gridworlds and Markov Decision Processes in Python

Author: Jeremy Stober
Contact: stober@gmail.com
License: BSD (see LICENSE)

This package contains implementations of discrete mdps known as
gridworlds that are convenient for testing reinforcement learning
algorithms. Some visualization is provided, along with a few other
mdps drawn from the literature on reinforcement learning.

Note: This package now depends on https://github.com/stober/utils for sparse feature generation.